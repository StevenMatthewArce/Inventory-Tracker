{"ast":null,"code":"var _jsxFileName = \"D:\\\\Spring 2021\\\\CECS445\\\\inventory-tracker\\\\frontend\\\\src\\\\components\\\\Sidenav.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid, Icon, Menu, Segment, Sidebar, Checkbox } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidenav = () => {\n  _s();\n\n  const [visible, setVisible] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    columns: 1,\n    children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n      children: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: visible,\n        label: {\n          children: /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"visible\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 30\n          }, this)\n        },\n        onChange: (e, data) => setVisible(data.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n      children: /*#__PURE__*/_jsxDEV(Sidebar.Pushable, {\n        as: Segment,\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {\n          as: Menu,\n          animation: \"overlay\",\n          icon: \"labeled\",\n          inverted: true,\n          onHide: () => setVisible(false),\n          vertical: true,\n          visible: visible,\n          width: \"thin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Sidenav, \"OGsIWlGlwYpVUqIrDReJ1GWx7rw=\");\n\n_c = Sidenav;\nexport default Sidenav;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidenav\");","map":{"version":3,"sources":["D:/Spring 2021/CECS445/inventory-tracker/frontend/src/components/Sidenav.js"],"names":["React","Grid","Icon","Menu","Segment","Sidebar","Checkbox","Sidenav","visible","setVisible","useState","children","e","data","checked"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,IADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,OAJF,EAKEC,OALF,EAMEC,QANF,QAOO,mBAPP;;;AASA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,KAAK,CAACU,QAAN,CAAe,KAAf,CAA9B;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,OAAO,EAAE,CAAf;AAAA,4BACE,QAAC,IAAD,CAAM,MAAN;AAAA,6BACE,QAAC,QAAD;AACE,QAAA,OAAO,EAAEF,OADX;AAEE,QAAA,KAAK,EAAE;AAAEG,UAAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAZ,SAFT;AAGE,QAAA,QAAQ,EAAE,CAACC,CAAD,EAAIC,IAAJ,KAAaJ,UAAU,CAACI,IAAI,CAACC,OAAN;AAHnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,IAAD,CAAM,MAAN;AAAA,6BACE,QAAC,OAAD,CAAS,QAAT;AAAkB,QAAA,EAAE,EAAEV,OAAtB;AAAA,+BACE,QAAC,OAAD;AACE,UAAA,EAAE,EAAED,IADN;AAEE,UAAA,SAAS,EAAC,SAFZ;AAGE,UAAA,IAAI,EAAC,SAHP;AAIE,UAAA,QAAQ,MAJV;AAKE,UAAA,MAAM,EAAE,MAAMM,UAAU,CAAC,KAAD,CAL1B;AAME,UAAA,QAAQ,MANV;AAOE,UAAA,OAAO,EAAED,OAPX;AAQE,UAAA,KAAK,EAAC;AARR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAhCD;;GAAMD,O;;KAAAA,O;AAkCN,eAAeA,OAAf","sourcesContent":["import React from 'react';\r\nimport {\r\n  Grid,\r\n  Icon,\r\n  Menu,\r\n  Segment,\r\n  Sidebar,\r\n  Checkbox\r\n} from 'semantic-ui-react';\r\n\r\nconst Sidenav = () => {\r\n  const [visible, setVisible] = React.useState(false);\r\n\r\n  return (\r\n    <Grid columns={1}>\r\n      <Grid.Column>\r\n        <Checkbox \r\n          checked={visible}\r\n          label={{ children: <code>visible</code>}}\r\n          onChange={(e, data) => setVisible(data.checked)}\r\n        />\r\n      </Grid.Column>\r\n\r\n      <Grid.Column>\r\n        <Sidebar.Pushable as={Segment}>\r\n          <Sidebar\r\n            as={Menu}\r\n            animation='overlay'\r\n            icon='labeled'\r\n            inverted\r\n            onHide={() => setVisible(false)}\r\n            vertical\r\n            visible={visible}\r\n            width='thin'\r\n          >\r\n\r\n          </Sidebar>\r\n        </Sidebar.Pushable>\r\n      </Grid.Column>\r\n    </Grid>\r\n  )\r\n\r\n}\r\n\r\nexport default Sidenav;"]},"metadata":{},"sourceType":"module"}