{"ast":null,"code":"/*!\n * # Semantic UI 2.4.0 - Form Validation\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n;\n\n(function ($, window, document, undefined) {\n  'use strict';\n\n  window = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\n  var _module = module;\n\n  module.exports = function (parameters) {\n    var $allModules = $(this),\n        moduleSelector = $allModules.selector || '',\n        time = new Date().getTime(),\n        performance = [],\n        query = arguments[0],\n        legacyParameters = arguments[1],\n        methodInvoked = typeof query == 'string',\n        queryArguments = [].slice.call(arguments, 1),\n        returnedValue;\n    $allModules.each(function () {\n      var $module = $(this),\n          element = this,\n          formErrors = [],\n          keyHeldDown = false,\n          // set at run-time\n      $field,\n          $group,\n          $message,\n          $prompt,\n          $submit,\n          $clear,\n          $reset,\n          settings,\n          validation,\n          metadata,\n          selector,\n          className,\n          regExp,\n          error,\n          namespace,\n          moduleNamespace,\n          eventNamespace,\n          instance,\n          module;\n      module = {\n        initialize: function () {\n          // settings grabbed at run time\n          module.get.settings();\n\n          if (methodInvoked) {\n            if (instance === undefined) {\n              module.instantiate();\n            }\n\n            module.invoke(query);\n          } else {\n            if (instance !== undefined) {\n              instance.invoke('destroy');\n            }\n\n            module.verbose('Initializing form validation', $module, settings);\n            module.bindEvents();\n            module.set.defaults();\n            module.instantiate();\n          }\n        },\n        instantiate: function () {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module.data(moduleNamespace, module);\n        },\n        destroy: function () {\n          module.verbose('Destroying previous module', instance);\n          module.removeEvents();\n          $module.removeData(moduleNamespace);\n        },\n        refresh: function () {\n          module.verbose('Refreshing selector cache');\n          $field = $module.find(selector.field);\n          $group = $module.find(selector.group);\n          $message = $module.find(selector.message);\n          $prompt = $module.find(selector.prompt);\n          $submit = $module.find(selector.submit);\n          $clear = $module.find(selector.clear);\n          $reset = $module.find(selector.reset);\n        },\n        submit: function () {\n          module.verbose('Submitting form', $module);\n          $module.submit();\n        },\n        attachEvents: function (selector, action) {\n          action = action || 'submit';\n          $(selector).on('click' + eventNamespace, function (event) {\n            module[action]();\n            event.preventDefault();\n          });\n        },\n        bindEvents: function () {\n          module.verbose('Attaching form events');\n          $module.on('submit' + eventNamespace, module.validate.form).on('blur' + eventNamespace, selector.field, module.event.field.blur).on('click' + eventNamespace, selector.submit, module.submit).on('click' + eventNamespace, selector.reset, module.reset).on('click' + eventNamespace, selector.clear, module.clear);\n\n          if (settings.keyboardShortcuts) {\n            $module.on('keydown' + eventNamespace, selector.field, module.event.field.keydown);\n          }\n\n          $field.each(function () {\n            var $input = $(this),\n                type = $input.prop('type'),\n                inputEvent = module.get.changeEvent(type, $input);\n            $(this).on(inputEvent + eventNamespace, module.event.field.change);\n          });\n        },\n        clear: function () {\n          $field.each(function () {\n            var $field = $(this),\n                $element = $field.parent(),\n                $fieldGroup = $field.closest($group),\n                $prompt = $fieldGroup.find(selector.prompt),\n                defaultValue = $field.data(metadata.defaultValue) || '',\n                isCheckbox = $element.is(selector.uiCheckbox),\n                isDropdown = $element.is(selector.uiDropdown),\n                isErrored = $fieldGroup.hasClass(className.error);\n\n            if (isErrored) {\n              module.verbose('Resetting error on field', $fieldGroup);\n              $fieldGroup.removeClass(className.error);\n              $prompt.remove();\n            }\n\n            if (isDropdown) {\n              module.verbose('Resetting dropdown value', $element, defaultValue);\n              $element.dropdown('clear');\n            } else if (isCheckbox) {\n              $field.prop('checked', false);\n            } else {\n              module.verbose('Resetting field value', $field, defaultValue);\n              $field.val('');\n            }\n          });\n        },\n        reset: function () {\n          $field.each(function () {\n            var $field = $(this),\n                $element = $field.parent(),\n                $fieldGroup = $field.closest($group),\n                $prompt = $fieldGroup.find(selector.prompt),\n                defaultValue = $field.data(metadata.defaultValue),\n                isCheckbox = $element.is(selector.uiCheckbox),\n                isDropdown = $element.is(selector.uiDropdown),\n                isErrored = $fieldGroup.hasClass(className.error);\n\n            if (defaultValue === undefined) {\n              return;\n            }\n\n            if (isErrored) {\n              module.verbose('Resetting error on field', $fieldGroup);\n              $fieldGroup.removeClass(className.error);\n              $prompt.remove();\n            }\n\n            if (isDropdown) {\n              module.verbose('Resetting dropdown value', $element, defaultValue);\n              $element.dropdown('restore defaults');\n            } else if (isCheckbox) {\n              module.verbose('Resetting checkbox value', $element, defaultValue);\n              $field.prop('checked', defaultValue);\n            } else {\n              module.verbose('Resetting field value', $field, defaultValue);\n              $field.val(defaultValue);\n            }\n          });\n        },\n        determine: {\n          isValid: function () {\n            var allValid = true;\n            $.each(validation, function (fieldName, field) {\n              if (!module.validate.field(field, fieldName, true)) {\n                allValid = false;\n              }\n            });\n            return allValid;\n          }\n        },\n        is: {\n          bracketedRule: function (rule) {\n            return rule.type && rule.type.match(settings.regExp.bracket);\n          },\n          shorthandFields: function (fields) {\n            var fieldKeys = Object.keys(fields),\n                firstRule = fields[fieldKeys[0]];\n            return module.is.shorthandRules(firstRule);\n          },\n          // duck type rule test\n          shorthandRules: function (rules) {\n            return typeof rules == 'string' || $.isArray(rules);\n          },\n          empty: function ($field) {\n            if (!$field || $field.length === 0) {\n              return true;\n            } else if ($field.is('input[type=\"checkbox\"]')) {\n              return !$field.is(':checked');\n            } else {\n              return module.is.blank($field);\n            }\n          },\n          blank: function ($field) {\n            return $.trim($field.val()) === '';\n          },\n          valid: function (field) {\n            var allValid = true;\n\n            if (field) {\n              module.verbose('Checking if field is valid', field);\n              return module.validate.field(validation[field], field, false);\n            } else {\n              module.verbose('Checking if form is valid');\n              $.each(validation, function (fieldName, field) {\n                if (!module.is.valid(fieldName)) {\n                  allValid = false;\n                }\n              });\n              return allValid;\n            }\n          }\n        },\n        removeEvents: function () {\n          $module.off(eventNamespace);\n          $field.off(eventNamespace);\n          $submit.off(eventNamespace);\n          $field.off(eventNamespace);\n        },\n        event: {\n          field: {\n            keydown: function (event) {\n              var $field = $(this),\n                  key = event.which,\n                  isInput = $field.is(selector.input),\n                  isCheckbox = $field.is(selector.checkbox),\n                  isInDropdown = $field.closest(selector.uiDropdown).length > 0,\n                  keyCode = {\n                enter: 13,\n                escape: 27\n              };\n\n              if (key == keyCode.escape) {\n                module.verbose('Escape key pressed blurring field');\n                $field.blur();\n              }\n\n              if (!event.ctrlKey && key == keyCode.enter && isInput && !isInDropdown && !isCheckbox) {\n                if (!keyHeldDown) {\n                  $field.one('keyup' + eventNamespace, module.event.field.keyup);\n                  module.submit();\n                  module.debug('Enter pressed on input submitting form');\n                }\n\n                keyHeldDown = true;\n              }\n            },\n            keyup: function () {\n              keyHeldDown = false;\n            },\n            blur: function (event) {\n              var $field = $(this),\n                  $fieldGroup = $field.closest($group),\n                  validationRules = module.get.validation($field);\n\n              if ($fieldGroup.hasClass(className.error)) {\n                module.debug('Revalidating field', $field, validationRules);\n\n                if (validationRules) {\n                  module.validate.field(validationRules);\n                }\n              } else if (settings.on == 'blur') {\n                if (validationRules) {\n                  module.validate.field(validationRules);\n                }\n              }\n            },\n            change: function (event) {\n              var $field = $(this),\n                  $fieldGroup = $field.closest($group),\n                  validationRules = module.get.validation($field);\n\n              if (validationRules && (settings.on == 'change' || $fieldGroup.hasClass(className.error) && settings.revalidate)) {\n                clearTimeout(module.timer);\n                module.timer = setTimeout(function () {\n                  module.debug('Revalidating field', $field, module.get.validation($field));\n                  module.validate.field(validationRules);\n                }, settings.delay);\n              }\n            }\n          }\n        },\n        get: {\n          ancillaryValue: function (rule) {\n            if (!rule.type || !rule.value && !module.is.bracketedRule(rule)) {\n              return false;\n            }\n\n            return rule.value !== undefined ? rule.value : rule.type.match(settings.regExp.bracket)[1] + '';\n          },\n          ruleName: function (rule) {\n            if (module.is.bracketedRule(rule)) {\n              return rule.type.replace(rule.type.match(settings.regExp.bracket)[0], '');\n            }\n\n            return rule.type;\n          },\n          changeEvent: function (type, $input) {\n            if (type == 'checkbox' || type == 'radio' || type == 'hidden' || $input.is('select')) {\n              return 'change';\n            } else {\n              return module.get.inputEvent();\n            }\n          },\n          inputEvent: function () {\n            return document.createElement('input').oninput !== undefined ? 'input' : document.createElement('input').onpropertychange !== undefined ? 'propertychange' : 'keyup';\n          },\n          fieldsFromShorthand: function (fields) {\n            var fullFields = {};\n            $.each(fields, function (name, rules) {\n              if (typeof rules == 'string') {\n                rules = [rules];\n              }\n\n              fullFields[name] = {\n                rules: []\n              };\n              $.each(rules, function (index, rule) {\n                fullFields[name].rules.push({\n                  type: rule\n                });\n              });\n            });\n            return fullFields;\n          },\n          prompt: function (rule, field) {\n            var ruleName = module.get.ruleName(rule),\n                ancillary = module.get.ancillaryValue(rule),\n                $field = module.get.field(field.identifier),\n                value = $field.val(),\n                prompt = $.isFunction(rule.prompt) ? rule.prompt(value) : rule.prompt || settings.prompt[ruleName] || settings.text.unspecifiedRule,\n                requiresValue = prompt.search('{value}') !== -1,\n                requiresName = prompt.search('{name}') !== -1,\n                $label,\n                name;\n\n            if (requiresValue) {\n              prompt = prompt.replace('{value}', $field.val());\n            }\n\n            if (requiresName) {\n              $label = $field.closest(selector.group).find('label').eq(0);\n              name = $label.length == 1 ? $label.text() : $field.prop('placeholder') || settings.text.unspecifiedField;\n              prompt = prompt.replace('{name}', name);\n            }\n\n            prompt = prompt.replace('{identifier}', field.identifier);\n            prompt = prompt.replace('{ruleValue}', ancillary);\n\n            if (!rule.prompt) {\n              module.verbose('Using default validation prompt for type', prompt, ruleName);\n            }\n\n            return prompt;\n          },\n          settings: function () {\n            if ($.isPlainObject(parameters)) {\n              var keys = Object.keys(parameters),\n                  isLegacySettings = keys.length > 0 ? parameters[keys[0]].identifier !== undefined && parameters[keys[0]].rules !== undefined : false,\n                  ruleKeys;\n\n              if (isLegacySettings) {\n                // 1.x (ducktyped)\n                settings = $.extend(true, {}, _module.exports.settings, legacyParameters);\n                validation = $.extend({}, _module.exports.settings.defaults, parameters);\n                module.error(settings.error.oldSyntax, element);\n                module.verbose('Extending settings from legacy parameters', validation, settings);\n              } else {\n                // 2.x\n                if (parameters.fields && module.is.shorthandFields(parameters.fields)) {\n                  parameters.fields = module.get.fieldsFromShorthand(parameters.fields);\n                }\n\n                settings = $.extend(true, {}, _module.exports.settings, parameters);\n                validation = $.extend({}, _module.exports.settings.defaults, settings.fields);\n                module.verbose('Extending settings', validation, settings);\n              }\n            } else {\n              settings = _module.exports.settings;\n              validation = _module.exports.settings.defaults;\n              module.verbose('Using default form validation', validation, settings);\n            } // shorthand\n\n\n            namespace = settings.namespace;\n            metadata = settings.metadata;\n            selector = settings.selector;\n            className = settings.className;\n            regExp = settings.regExp;\n            error = settings.error;\n            moduleNamespace = 'module-' + namespace;\n            eventNamespace = '.' + namespace; // grab instance\n\n            instance = $module.data(moduleNamespace); // refresh selector cache\n\n            module.refresh();\n          },\n          field: function (identifier) {\n            module.verbose('Finding field with identifier', identifier);\n            identifier = module.escape.string(identifier);\n\n            if ($field.filter('#' + identifier).length > 0) {\n              return $field.filter('#' + identifier);\n            } else if ($field.filter('[name=\"' + identifier + '\"]').length > 0) {\n              return $field.filter('[name=\"' + identifier + '\"]');\n            } else if ($field.filter('[name=\"' + identifier + '[]\"]').length > 0) {\n              return $field.filter('[name=\"' + identifier + '[]\"]');\n            } else if ($field.filter('[data-' + metadata.validate + '=\"' + identifier + '\"]').length > 0) {\n              return $field.filter('[data-' + metadata.validate + '=\"' + identifier + '\"]');\n            }\n\n            return $('<input/>');\n          },\n          fields: function (fields) {\n            var $fields = $();\n            $.each(fields, function (index, name) {\n              $fields = $fields.add(module.get.field(name));\n            });\n            return $fields;\n          },\n          validation: function ($field) {\n            var fieldValidation, identifier;\n\n            if (!validation) {\n              return false;\n            }\n\n            $.each(validation, function (fieldName, field) {\n              identifier = field.identifier || fieldName;\n\n              if (module.get.field(identifier)[0] == $field[0]) {\n                field.identifier = identifier;\n                fieldValidation = field;\n              }\n            });\n            return fieldValidation || false;\n          },\n          value: function (field) {\n            var fields = [],\n                results;\n            fields.push(field);\n            results = module.get.values.call(element, fields);\n            return results[field];\n          },\n          values: function (fields) {\n            var $fields = $.isArray(fields) ? module.get.fields(fields) : $field,\n                values = {};\n            $fields.each(function (index, field) {\n              var $field = $(field),\n                  type = $field.prop('type'),\n                  name = $field.prop('name'),\n                  value = $field.val(),\n                  isCheckbox = $field.is(selector.checkbox),\n                  isRadio = $field.is(selector.radio),\n                  isMultiple = name.indexOf('[]') !== -1,\n                  isChecked = isCheckbox ? $field.is(':checked') : false;\n\n              if (name) {\n                if (isMultiple) {\n                  name = name.replace('[]', '');\n\n                  if (!values[name]) {\n                    values[name] = [];\n                  }\n\n                  if (isCheckbox) {\n                    if (isChecked) {\n                      values[name].push(value || true);\n                    } else {\n                      values[name].push(false);\n                    }\n                  } else {\n                    values[name].push(value);\n                  }\n                } else {\n                  if (isRadio) {\n                    if (values[name] === undefined || values[name] == false) {\n                      values[name] = isChecked ? value || true : false;\n                    }\n                  } else if (isCheckbox) {\n                    if (isChecked) {\n                      values[name] = value || true;\n                    } else {\n                      values[name] = false;\n                    }\n                  } else {\n                    values[name] = value;\n                  }\n                }\n              }\n            });\n            return values;\n          }\n        },\n        has: {\n          field: function (identifier) {\n            module.verbose('Checking for existence of a field with identifier', identifier);\n            identifier = module.escape.string(identifier);\n\n            if (typeof identifier !== 'string') {\n              module.error(error.identifier, identifier);\n            }\n\n            if ($field.filter('#' + identifier).length > 0) {\n              return true;\n            } else if ($field.filter('[name=\"' + identifier + '\"]').length > 0) {\n              return true;\n            } else if ($field.filter('[data-' + metadata.validate + '=\"' + identifier + '\"]').length > 0) {\n              return true;\n            }\n\n            return false;\n          }\n        },\n        escape: {\n          string: function (text) {\n            text = String(text);\n            return text.replace(regExp.escape, '\\\\$&');\n          }\n        },\n        add: {\n          // alias\n          rule: function (name, rules) {\n            module.add.field(name, rules);\n          },\n          field: function (name, rules) {\n            var newValidation = {};\n\n            if (module.is.shorthandRules(rules)) {\n              rules = $.isArray(rules) ? rules : [rules];\n              newValidation[name] = {\n                rules: []\n              };\n              $.each(rules, function (index, rule) {\n                newValidation[name].rules.push({\n                  type: rule\n                });\n              });\n            } else {\n              newValidation[name] = rules;\n            }\n\n            validation = $.extend({}, validation, newValidation);\n            module.debug('Adding rules', newValidation, validation);\n          },\n          fields: function (fields) {\n            var newValidation;\n\n            if (fields && module.is.shorthandFields(fields)) {\n              newValidation = module.get.fieldsFromShorthand(fields);\n            } else {\n              newValidation = fields;\n            }\n\n            validation = $.extend({}, validation, newValidation);\n          },\n          prompt: function (identifier, errors) {\n            var $field = module.get.field(identifier),\n                $fieldGroup = $field.closest($group),\n                $prompt = $fieldGroup.children(selector.prompt),\n                promptExists = $prompt.length !== 0;\n            errors = typeof errors == 'string' ? [errors] : errors;\n            module.verbose('Adding field error state', identifier);\n            $fieldGroup.addClass(className.error);\n\n            if (settings.inline) {\n              if (!promptExists) {\n                $prompt = settings.templates.prompt(errors);\n                $prompt.appendTo($fieldGroup);\n              }\n\n              $prompt.html(errors[0]);\n\n              if (!promptExists) {\n                if (settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n                  module.verbose('Displaying error with css transition', settings.transition);\n                  $prompt.transition(settings.transition + ' in', settings.duration);\n                } else {\n                  module.verbose('Displaying error with fallback javascript animation');\n                  $prompt.fadeIn(settings.duration);\n                }\n              } else {\n                module.verbose('Inline errors are disabled, no inline error added', identifier);\n              }\n            }\n          },\n          errors: function (errors) {\n            module.debug('Adding form error messages', errors);\n            module.set.error();\n            $message.html(settings.templates.error(errors));\n          }\n        },\n        remove: {\n          rule: function (field, rule) {\n            var rules = $.isArray(rule) ? rule : [rule];\n\n            if (rule == undefined) {\n              module.debug('Removed all rules');\n              validation[field].rules = [];\n              return;\n            }\n\n            if (validation[field] == undefined || !$.isArray(validation[field].rules)) {\n              return;\n            }\n\n            $.each(validation[field].rules, function (index, rule) {\n              if (rules.indexOf(rule.type) !== -1) {\n                module.debug('Removed rule', rule.type);\n                validation[field].rules.splice(index, 1);\n              }\n            });\n          },\n          field: function (field) {\n            var fields = $.isArray(field) ? field : [field];\n            $.each(fields, function (index, field) {\n              module.remove.rule(field);\n            });\n          },\n          // alias\n          rules: function (field, rules) {\n            if ($.isArray(field)) {\n              $.each(fields, function (index, field) {\n                module.remove.rule(field, rules);\n              });\n            } else {\n              module.remove.rule(field, rules);\n            }\n          },\n          fields: function (fields) {\n            module.remove.field(fields);\n          },\n          prompt: function (identifier) {\n            var $field = module.get.field(identifier),\n                $fieldGroup = $field.closest($group),\n                $prompt = $fieldGroup.children(selector.prompt);\n            $fieldGroup.removeClass(className.error);\n\n            if (settings.inline && $prompt.is(':visible')) {\n              module.verbose('Removing prompt for field', identifier);\n\n              if (settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n                $prompt.transition(settings.transition + ' out', settings.duration, function () {\n                  $prompt.remove();\n                });\n              } else {\n                $prompt.fadeOut(settings.duration, function () {\n                  $prompt.remove();\n                });\n              }\n            }\n          }\n        },\n        set: {\n          success: function () {\n            $module.removeClass(className.error).addClass(className.success);\n          },\n          defaults: function () {\n            $field.each(function () {\n              var $field = $(this),\n                  isCheckbox = $field.filter(selector.checkbox).length > 0,\n                  value = isCheckbox ? $field.is(':checked') : $field.val();\n              $field.data(metadata.defaultValue, value);\n            });\n          },\n          error: function () {\n            $module.removeClass(className.success).addClass(className.error);\n          },\n          value: function (field, value) {\n            var fields = {};\n            fields[field] = value;\n            return module.set.values.call(element, fields);\n          },\n          values: function (fields) {\n            if ($.isEmptyObject(fields)) {\n              return;\n            }\n\n            $.each(fields, function (key, value) {\n              var $field = module.get.field(key),\n                  $element = $field.parent(),\n                  isMultiple = $.isArray(value),\n                  isCheckbox = $element.is(selector.uiCheckbox),\n                  isDropdown = $element.is(selector.uiDropdown),\n                  isRadio = $field.is(selector.radio) && isCheckbox,\n                  fieldExists = $field.length > 0,\n                  $multipleField;\n\n              if (fieldExists) {\n                if (isMultiple && isCheckbox) {\n                  module.verbose('Selecting multiple', value, $field);\n                  $element.checkbox('uncheck');\n                  $.each(value, function (index, value) {\n                    $multipleField = $field.filter('[value=\"' + value + '\"]');\n                    $element = $multipleField.parent();\n\n                    if ($multipleField.length > 0) {\n                      $element.checkbox('check');\n                    }\n                  });\n                } else if (isRadio) {\n                  module.verbose('Selecting radio value', value, $field);\n                  $field.filter('[value=\"' + value + '\"]').parent(selector.uiCheckbox).checkbox('check');\n                } else if (isCheckbox) {\n                  module.verbose('Setting checkbox value', value, $element);\n\n                  if (value === true) {\n                    $element.checkbox('check');\n                  } else {\n                    $element.checkbox('uncheck');\n                  }\n                } else if (isDropdown) {\n                  module.verbose('Setting dropdown value', value, $element);\n                  $element.dropdown('set selected', value);\n                } else {\n                  module.verbose('Setting field value', value, $field);\n                  $field.val(value);\n                }\n              }\n            });\n          }\n        },\n        validate: {\n          form: function (event, ignoreCallbacks) {\n            var values = module.get.values(),\n                apiRequest; // input keydown event will fire submit repeatedly by browser default\n\n            if (keyHeldDown) {\n              return false;\n            } // reset errors\n\n\n            formErrors = [];\n\n            if (module.determine.isValid()) {\n              module.debug('Form has no validation errors, submitting');\n              module.set.success();\n\n              if (ignoreCallbacks !== true) {\n                return settings.onSuccess.call(element, event, values);\n              }\n            } else {\n              module.debug('Form has errors');\n              module.set.error();\n\n              if (!settings.inline) {\n                module.add.errors(formErrors);\n              } // prevent ajax submit\n\n\n              if ($module.data('moduleApi') !== undefined) {\n                event.stopImmediatePropagation();\n              }\n\n              if (ignoreCallbacks !== true) {\n                return settings.onFailure.call(element, formErrors, values);\n              }\n            }\n          },\n          // takes a validation object and returns whether field passes validation\n          field: function (field, fieldName, showErrors) {\n            showErrors = showErrors !== undefined ? showErrors : true;\n\n            if (typeof field == 'string') {\n              module.verbose('Validating field', field);\n              fieldName = field;\n              field = validation[field];\n            }\n\n            var identifier = field.identifier || fieldName,\n                $field = module.get.field(identifier),\n                $dependsField = field.depends ? module.get.field(field.depends) : false,\n                fieldValid = true,\n                fieldErrors = [];\n\n            if (!field.identifier) {\n              module.debug('Using field name as identifier', identifier);\n              field.identifier = identifier;\n            }\n\n            if ($field.prop('disabled')) {\n              module.debug('Field is disabled. Skipping', identifier);\n              fieldValid = true;\n            } else if (field.optional && module.is.blank($field)) {\n              module.debug('Field is optional and blank. Skipping', identifier);\n              fieldValid = true;\n            } else if (field.depends && module.is.empty($dependsField)) {\n              module.debug('Field depends on another value that is not present or empty. Skipping', $dependsField);\n              fieldValid = true;\n            } else if (field.rules !== undefined) {\n              $.each(field.rules, function (index, rule) {\n                if (module.has.field(identifier) && !module.validate.rule(field, rule)) {\n                  module.debug('Field is invalid', identifier, rule.type);\n                  fieldErrors.push(module.get.prompt(rule, field));\n                  fieldValid = false;\n                }\n              });\n            }\n\n            if (fieldValid) {\n              if (showErrors) {\n                module.remove.prompt(identifier, fieldErrors);\n                settings.onValid.call($field);\n              }\n            } else {\n              if (showErrors) {\n                formErrors = formErrors.concat(fieldErrors);\n                module.add.prompt(identifier, fieldErrors);\n                settings.onInvalid.call($field, fieldErrors);\n              }\n\n              return false;\n            }\n\n            return true;\n          },\n          // takes validation rule and returns whether field passes rule\n          rule: function (field, rule) {\n            var $field = module.get.field(field.identifier),\n                type = rule.type,\n                value = $field.val(),\n                isValid = true,\n                ancillary = module.get.ancillaryValue(rule),\n                ruleName = module.get.ruleName(rule),\n                ruleFunction = settings.rules[ruleName];\n\n            if (!$.isFunction(ruleFunction)) {\n              module.error(error.noRule, ruleName);\n              return;\n            } // cast to string avoiding encoding special values\n\n\n            value = value === undefined || value === '' || value === null ? '' : $.trim(value + '');\n            return ruleFunction.call($field, value, ancillary);\n          }\n        },\n        setting: function (name, value) {\n          if ($.isPlainObject(name)) {\n            $.extend(true, settings, name);\n          } else if (value !== undefined) {\n            settings[name] = value;\n          } else {\n            return settings[name];\n          }\n        },\n        internal: function (name, value) {\n          if ($.isPlainObject(name)) {\n            $.extend(true, module, name);\n          } else if (value !== undefined) {\n            module[name] = value;\n          } else {\n            return module[name];\n          }\n        },\n        debug: function () {\n          if (!settings.silent && settings.debug) {\n            if (settings.performance) {\n              module.performance.log(arguments);\n            } else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function () {\n          if (!settings.silent && settings.verbose && settings.debug) {\n            if (settings.performance) {\n              module.performance.log(arguments);\n            } else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function () {\n          if (!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function (message) {\n            var currentTime, executionTime, previousTime;\n\n            if (settings.performance) {\n              currentTime = new Date().getTime();\n              previousTime = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time = currentTime;\n              performance.push({\n                'Name': message[0],\n                'Arguments': [].slice.call(message, 1) || '',\n                'Element': element,\n                'Execution Time': executionTime\n              });\n            }\n\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function () {\n            var title = settings.name + ':',\n                totalTime = 0;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function (index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n\n            if (moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n\n            if ($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n\n            if ((console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n\n              if (console.table) {\n                console.table(performance);\n              } else {\n                $.each(performance, function (index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time'] + 'ms');\n                });\n              }\n\n              console.groupEnd();\n            }\n\n            performance = [];\n          }\n        },\n        invoke: function (query, passedArguments, context) {\n          var object = instance,\n              maxDepth,\n              found,\n              response;\n          passedArguments = passedArguments || queryArguments;\n          context = element || context;\n\n          if (typeof query == 'string' && object !== undefined) {\n            query = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function (depth, value) {\n              var camelCaseValue = depth != maxDepth ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1) : query;\n\n              if ($.isPlainObject(object[camelCaseValue]) && depth != maxDepth) {\n                object = object[camelCaseValue];\n              } else if (object[camelCaseValue] !== undefined) {\n                found = object[camelCaseValue];\n                return false;\n              } else if ($.isPlainObject(object[value]) && depth != maxDepth) {\n                object = object[value];\n              } else if (object[value] !== undefined) {\n                found = object[value];\n                return false;\n              } else {\n                return false;\n              }\n            });\n          }\n\n          if ($.isFunction(found)) {\n            response = found.apply(context, passedArguments);\n          } else if (found !== undefined) {\n            response = found;\n          }\n\n          if ($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          } else if (returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          } else if (response !== undefined) {\n            returnedValue = response;\n          }\n\n          return found;\n        }\n      };\n      module.initialize();\n    });\n    return returnedValue !== undefined ? returnedValue : this;\n  };\n\n  _module.exports.settings = {\n    name: 'Form',\n    namespace: 'form',\n    debug: false,\n    verbose: false,\n    performance: true,\n    fields: false,\n    keyboardShortcuts: true,\n    on: 'submit',\n    inline: false,\n    delay: 200,\n    revalidate: true,\n    transition: 'scale',\n    duration: 200,\n    onValid: function () {},\n    onInvalid: function () {},\n    onSuccess: function () {\n      return true;\n    },\n    onFailure: function () {\n      return false;\n    },\n    metadata: {\n      defaultValue: 'default',\n      validate: 'validate'\n    },\n    regExp: {\n      htmlID: /^[a-zA-Z][\\w:.-]*$/g,\n      bracket: /\\[(.*)\\]/i,\n      decimal: /^\\d+\\.?\\d*$/,\n      email: /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i,\n      escape: /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\n      flags: /^\\/(.*)\\/(.*)?/,\n      integer: /^\\-?\\d+$/,\n      number: /^\\-?\\d*(\\.\\d+)?$/,\n      url: /(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})/i\n    },\n    text: {\n      unspecifiedRule: 'Please enter a valid value',\n      unspecifiedField: 'This field'\n    },\n    prompt: {\n      empty: '{name} must have a value',\n      checked: '{name} must be checked',\n      email: '{name} must be a valid e-mail',\n      url: '{name} must be a valid url',\n      regExp: '{name} is not formatted correctly',\n      integer: '{name} must be an integer',\n      decimal: '{name} must be a decimal number',\n      number: '{name} must be set to a number',\n      is: '{name} must be \"{ruleValue}\"',\n      isExactly: '{name} must be exactly \"{ruleValue}\"',\n      not: '{name} cannot be set to \"{ruleValue}\"',\n      notExactly: '{name} cannot be set to exactly \"{ruleValue}\"',\n      contain: '{name} must contain \"{ruleValue}\"',\n      containExactly: '{name} must contain exactly \"{ruleValue}\"',\n      doesntContain: '{name} cannot contain  \"{ruleValue}\"',\n      doesntContainExactly: '{name} cannot contain exactly \"{ruleValue}\"',\n      minLength: '{name} must be at least {ruleValue} characters',\n      length: '{name} must be at least {ruleValue} characters',\n      exactLength: '{name} must be exactly {ruleValue} characters',\n      maxLength: '{name} cannot be longer than {ruleValue} characters',\n      match: '{name} must match {ruleValue} field',\n      different: '{name} must have a different value than {ruleValue} field',\n      creditCard: '{name} must be a valid credit card number',\n      minCount: '{name} must have at least {ruleValue} choices',\n      exactCount: '{name} must have exactly {ruleValue} choices',\n      maxCount: '{name} must have {ruleValue} or less choices'\n    },\n    selector: {\n      checkbox: 'input[type=\"checkbox\"], input[type=\"radio\"]',\n      clear: '.clear',\n      field: 'input, textarea, select',\n      group: '.field',\n      input: 'input',\n      message: '.error.message',\n      prompt: '.prompt.label',\n      radio: 'input[type=\"radio\"]',\n      reset: '.reset:not([type=\"reset\"])',\n      submit: '.submit:not([type=\"submit\"])',\n      uiCheckbox: '.ui.checkbox',\n      uiDropdown: '.ui.dropdown'\n    },\n    className: {\n      error: 'error',\n      label: 'ui prompt label',\n      pressed: 'down',\n      success: 'success'\n    },\n    error: {\n      identifier: 'You must specify a string identifier for each field',\n      method: 'The method you called is not defined.',\n      noRule: 'There is no rule matching the one you specified',\n      oldSyntax: 'Starting in 2.0 forms now only take a single settings object. Validation settings converted to new syntax automatically.'\n    },\n    templates: {\n      // template that produces error message\n      error: function (errors) {\n        var html = '<ul class=\"list\">';\n        $.each(errors, function (index, value) {\n          html += '<li>' + value + '</li>';\n        });\n        html += '</ul>';\n        return $(html);\n      },\n      // template that produces label\n      prompt: function (errors) {\n        return $('<div/>').addClass('ui basic red pointing prompt label').html(errors[0]);\n      }\n    },\n    rules: {\n      // is not empty or blank string\n      empty: function (value) {\n        return !(value === undefined || '' === value || $.isArray(value) && value.length === 0);\n      },\n      // checkbox checked\n      checked: function () {\n        return $(this).filter(':checked').length > 0;\n      },\n      // is most likely an email\n      email: function (value) {\n        return _module.exports.settings.regExp.email.test(value);\n      },\n      // value is most likely url\n      url: function (value) {\n        return _module.exports.settings.regExp.url.test(value);\n      },\n      // matches specified regExp\n      regExp: function (value, regExp) {\n        if (regExp instanceof RegExp) {\n          return value.match(regExp);\n        }\n\n        var regExpParts = regExp.match(_module.exports.settings.regExp.flags),\n            flags; // regular expression specified as /baz/gi (flags)\n\n        if (regExpParts) {\n          regExp = regExpParts.length >= 2 ? regExpParts[1] : regExp;\n          flags = regExpParts.length >= 3 ? regExpParts[2] : '';\n        }\n\n        return value.match(new RegExp(regExp, flags));\n      },\n      // is valid integer or matches range\n      integer: function (value, range) {\n        var intRegExp = _module.exports.settings.regExp.integer,\n            min,\n            max,\n            parts;\n\n        if (!range || ['', '..'].indexOf(range) !== -1) {// do nothing\n        } else if (range.indexOf('..') == -1) {\n          if (intRegExp.test(range)) {\n            min = max = range - 0;\n          }\n        } else {\n          parts = range.split('..', 2);\n\n          if (intRegExp.test(parts[0])) {\n            min = parts[0] - 0;\n          }\n\n          if (intRegExp.test(parts[1])) {\n            max = parts[1] - 0;\n          }\n        }\n\n        return intRegExp.test(value) && (min === undefined || value >= min) && (max === undefined || value <= max);\n      },\n      // is valid number (with decimal)\n      decimal: function (value) {\n        return _module.exports.settings.regExp.decimal.test(value);\n      },\n      // is valid number\n      number: function (value) {\n        return _module.exports.settings.regExp.number.test(value);\n      },\n      // is value (case insensitive)\n      is: function (value, text) {\n        text = typeof text == 'string' ? text.toLowerCase() : text;\n        value = typeof value == 'string' ? value.toLowerCase() : value;\n        return value == text;\n      },\n      // is value\n      isExactly: function (value, text) {\n        return value == text;\n      },\n      // value is not another value (case insensitive)\n      not: function (value, notValue) {\n        value = typeof value == 'string' ? value.toLowerCase() : value;\n        notValue = typeof notValue == 'string' ? notValue.toLowerCase() : notValue;\n        return value != notValue;\n      },\n      // value is not another value (case sensitive)\n      notExactly: function (value, notValue) {\n        return value != notValue;\n      },\n      // value contains text (insensitive)\n      contains: function (value, text) {\n        // escape regex characters\n        text = text.replace(_module.exports.settings.regExp.escape, \"\\\\$&\");\n        return value.search(new RegExp(text, 'i')) !== -1;\n      },\n      // value contains text (case sensitive)\n      containsExactly: function (value, text) {\n        // escape regex characters\n        text = text.replace(_module.exports.settings.regExp.escape, \"\\\\$&\");\n        return value.search(new RegExp(text)) !== -1;\n      },\n      // value contains text (insensitive)\n      doesntContain: function (value, text) {\n        // escape regex characters\n        text = text.replace(_module.exports.settings.regExp.escape, \"\\\\$&\");\n        return value.search(new RegExp(text, 'i')) === -1;\n      },\n      // value contains text (case sensitive)\n      doesntContainExactly: function (value, text) {\n        // escape regex characters\n        text = text.replace(_module.exports.settings.regExp.escape, \"\\\\$&\");\n        return value.search(new RegExp(text)) === -1;\n      },\n      // is at least string length\n      minLength: function (value, requiredLength) {\n        return value !== undefined ? value.length >= requiredLength : false;\n      },\n      // see rls notes for 2.0.6 (this is a duplicate of minLength)\n      length: function (value, requiredLength) {\n        return value !== undefined ? value.length >= requiredLength : false;\n      },\n      // is exactly length\n      exactLength: function (value, requiredLength) {\n        return value !== undefined ? value.length == requiredLength : false;\n      },\n      // is less than length\n      maxLength: function (value, maxLength) {\n        return value !== undefined ? value.length <= maxLength : false;\n      },\n      // matches another field\n      match: function (value, identifier) {\n        var $form = $(this),\n            matchingValue;\n\n        if ($('[data-validate=\"' + identifier + '\"]').length > 0) {\n          matchingValue = $('[data-validate=\"' + identifier + '\"]').val();\n        } else if ($('#' + identifier).length > 0) {\n          matchingValue = $('#' + identifier).val();\n        } else if ($('[name=\"' + identifier + '\"]').length > 0) {\n          matchingValue = $('[name=\"' + identifier + '\"]').val();\n        } else if ($('[name=\"' + identifier + '[]\"]').length > 0) {\n          matchingValue = $('[name=\"' + identifier + '[]\"]');\n        }\n\n        return matchingValue !== undefined ? value.toString() == matchingValue.toString() : false;\n      },\n      // different than another field\n      different: function (value, identifier) {\n        // use either id or name of field\n        var $form = $(this),\n            matchingValue;\n\n        if ($('[data-validate=\"' + identifier + '\"]').length > 0) {\n          matchingValue = $('[data-validate=\"' + identifier + '\"]').val();\n        } else if ($('#' + identifier).length > 0) {\n          matchingValue = $('#' + identifier).val();\n        } else if ($('[name=\"' + identifier + '\"]').length > 0) {\n          matchingValue = $('[name=\"' + identifier + '\"]').val();\n        } else if ($('[name=\"' + identifier + '[]\"]').length > 0) {\n          matchingValue = $('[name=\"' + identifier + '[]\"]');\n        }\n\n        return matchingValue !== undefined ? value.toString() !== matchingValue.toString() : false;\n      },\n      creditCard: function (cardNumber, cardTypes) {\n        var cards = {\n          visa: {\n            pattern: /^4/,\n            length: [16]\n          },\n          amex: {\n            pattern: /^3[47]/,\n            length: [15]\n          },\n          mastercard: {\n            pattern: /^5[1-5]/,\n            length: [16]\n          },\n          discover: {\n            pattern: /^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)/,\n            length: [16]\n          },\n          unionPay: {\n            pattern: /^(62|88)/,\n            length: [16, 17, 18, 19]\n          },\n          jcb: {\n            pattern: /^35(2[89]|[3-8][0-9])/,\n            length: [16]\n          },\n          maestro: {\n            pattern: /^(5018|5020|5038|6304|6759|676[1-3])/,\n            length: [12, 13, 14, 15, 16, 17, 18, 19]\n          },\n          dinersClub: {\n            pattern: /^(30[0-5]|^36)/,\n            length: [14]\n          },\n          laser: {\n            pattern: /^(6304|670[69]|6771)/,\n            length: [16, 17, 18, 19]\n          },\n          visaElectron: {\n            pattern: /^(4026|417500|4508|4844|491(3|7))/,\n            length: [16]\n          }\n        },\n            valid = {},\n            validCard = false,\n            requiredTypes = typeof cardTypes == 'string' ? cardTypes.split(',') : false,\n            unionPay,\n            validation;\n\n        if (typeof cardNumber !== 'string' || cardNumber.length === 0) {\n          return;\n        } // allow dashes in card\n\n\n        cardNumber = cardNumber.replace(/[\\-]/g, ''); // verify card types\n\n        if (requiredTypes) {\n          $.each(requiredTypes, function (index, type) {\n            // verify each card type\n            validation = cards[type];\n\n            if (validation) {\n              valid = {\n                length: $.inArray(cardNumber.length, validation.length) !== -1,\n                pattern: cardNumber.search(validation.pattern) !== -1\n              };\n\n              if (valid.length && valid.pattern) {\n                validCard = true;\n              }\n            }\n          });\n\n          if (!validCard) {\n            return false;\n          }\n        } // skip luhn for UnionPay\n\n\n        unionPay = {\n          number: $.inArray(cardNumber.length, cards.unionPay.length) !== -1,\n          pattern: cardNumber.search(cards.unionPay.pattern) !== -1\n        };\n\n        if (unionPay.number && unionPay.pattern) {\n          return true;\n        } // verify luhn, adapted from  <https://gist.github.com/2134376>\n\n\n        var length = cardNumber.length,\n            multiple = 0,\n            producedValue = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0, 2, 4, 6, 8, 1, 3, 5, 7, 9]],\n            sum = 0;\n\n        while (length--) {\n          sum += producedValue[multiple][parseInt(cardNumber.charAt(length), 10)];\n          multiple ^= 1;\n        }\n\n        return sum % 10 === 0 && sum > 0;\n      },\n      minCount: function (value, minCount) {\n        if (minCount == 0) {\n          return true;\n        }\n\n        if (minCount == 1) {\n          return value !== '';\n        }\n\n        return value.split(',').length >= minCount;\n      },\n      exactCount: function (value, exactCount) {\n        if (exactCount == 0) {\n          return value === '';\n        }\n\n        if (exactCount == 1) {\n          return value !== '' && value.search(',') === -1;\n        }\n\n        return value.split(',').length == exactCount;\n      },\n      maxCount: function (value, maxCount) {\n        if (maxCount == 0) {\n          return false;\n        }\n\n        if (maxCount == 1) {\n          return value.search(',') === -1;\n        }\n\n        return value.split(',').length <= maxCount;\n      }\n    }\n  };\n})(require(\"jquery\"), window, document);","map":{"version":3,"sources":["D:/Spring 2021/CECS445/inventory-tracker/frontend/node_modules/semantic-ui-form/index.js"],"names":["$","window","document","undefined","Math","self","Function","_module","module","exports","parameters","$allModules","moduleSelector","selector","time","Date","getTime","performance","query","arguments","legacyParameters","methodInvoked","queryArguments","slice","call","returnedValue","each","$module","element","formErrors","keyHeldDown","$field","$group","$message","$prompt","$submit","$clear","$reset","settings","validation","metadata","className","regExp","error","namespace","moduleNamespace","eventNamespace","instance","initialize","get","instantiate","invoke","verbose","bindEvents","set","defaults","data","destroy","removeEvents","removeData","refresh","find","field","group","message","prompt","submit","clear","reset","attachEvents","action","on","event","preventDefault","validate","form","blur","keyboardShortcuts","keydown","$input","type","prop","inputEvent","changeEvent","change","$element","parent","$fieldGroup","closest","defaultValue","isCheckbox","is","uiCheckbox","isDropdown","uiDropdown","isErrored","hasClass","removeClass","remove","dropdown","val","determine","isValid","allValid","fieldName","bracketedRule","rule","match","bracket","shorthandFields","fields","fieldKeys","Object","keys","firstRule","shorthandRules","rules","isArray","empty","length","blank","trim","valid","off","key","which","isInput","input","checkbox","isInDropdown","keyCode","enter","escape","ctrlKey","one","keyup","debug","validationRules","revalidate","clearTimeout","timer","setTimeout","delay","ancillaryValue","value","ruleName","replace","createElement","oninput","onpropertychange","fieldsFromShorthand","fullFields","name","index","push","ancillary","identifier","isFunction","text","unspecifiedRule","requiresValue","search","requiresName","$label","eq","unspecifiedField","isPlainObject","isLegacySettings","ruleKeys","extend","oldSyntax","string","filter","$fields","add","fieldValidation","results","values","isRadio","radio","isMultiple","indexOf","isChecked","has","String","newValidation","errors","children","promptExists","addClass","inline","templates","appendTo","html","transition","fn","duration","fadeIn","splice","fadeOut","success","isEmptyObject","fieldExists","$multipleField","ignoreCallbacks","apiRequest","onSuccess","stopImmediatePropagation","onFailure","showErrors","$dependsField","depends","fieldValid","fieldErrors","optional","onValid","concat","onInvalid","ruleFunction","noRule","setting","internal","silent","log","prototype","bind","console","info","apply","currentTime","executionTime","previousTime","display","title","totalTime","table","groupCollapsed","groupEnd","passedArguments","context","object","maxDepth","found","response","split","depth","camelCaseValue","charAt","toUpperCase","htmlID","decimal","email","flags","integer","number","url","checked","isExactly","not","notExactly","contain","containExactly","doesntContain","doesntContainExactly","minLength","exactLength","maxLength","different","creditCard","minCount","exactCount","maxCount","label","pressed","method","test","RegExp","regExpParts","range","intRegExp","min","max","parts","toLowerCase","notValue","contains","containsExactly","requiredLength","$form","matchingValue","toString","cardNumber","cardTypes","cards","visa","pattern","amex","mastercard","discover","unionPay","jcb","maestro","dinersClub","laser","visaElectron","validCard","requiredTypes","inArray","multiple","producedValue","sum","parseInt","require"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAAC,CAAC,UAAUA,CAAV,EAAaC,MAAb,EAAqBC,QAArB,EAA+BC,SAA/B,EAA0C;AAE5C;;AAEAF,EAAAA,MAAM,GAAI,OAAOA,MAAP,IAAiB,WAAjB,IAAgCA,MAAM,CAACG,IAAP,IAAeA,IAAhD,GACLH,MADK,GAEJ,OAAOI,IAAP,IAAe,WAAf,IAA8BA,IAAI,CAACD,IAAL,IAAaA,IAA5C,GACEC,IADF,GAEEC,QAAQ,CAAC,aAAD,CAAR,EAJN;AAOA,MAAIC,OAAO,GAAGC,MAAd;;AACAA,EAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,UAAT,EAAqB;AACpC,QACEC,WAAW,GAAQX,CAAC,CAAC,IAAD,CADtB;AAAA,QAEEY,cAAc,GAAKD,WAAW,CAACE,QAAZ,IAAwB,EAF7C;AAAA,QAIEC,IAAI,GAAe,IAAIC,IAAJ,GAAWC,OAAX,EAJrB;AAAA,QAKEC,WAAW,GAAQ,EALrB;AAAA,QAOEC,KAAK,GAAcC,SAAS,CAAC,CAAD,CAP9B;AAAA,QAQEC,gBAAgB,GAAGD,SAAS,CAAC,CAAD,CAR9B;AAAA,QASEE,aAAa,GAAO,OAAOH,KAAP,IAAgB,QATtC;AAAA,QAUEI,cAAc,GAAK,GAAGC,KAAH,CAASC,IAAT,CAAcL,SAAd,EAAyB,CAAzB,CAVrB;AAAA,QAWEM,aAXF;AAaAd,IAAAA,WAAW,CACRe,IADH,CACQ,YAAW;AACf,UACEC,OAAO,GAAO3B,CAAC,CAAC,IAAD,CADjB;AAAA,UAEE4B,OAAO,GAAO,IAFhB;AAAA,UAIEC,UAAU,GAAI,EAJhB;AAAA,UAKEC,WAAW,GAAG,KALhB;AAAA,UAOE;AACAC,MAAAA,MARF;AAAA,UASEC,MATF;AAAA,UAUEC,QAVF;AAAA,UAWEC,OAXF;AAAA,UAYEC,OAZF;AAAA,UAaEC,MAbF;AAAA,UAcEC,MAdF;AAAA,UAgBEC,QAhBF;AAAA,UAiBEC,UAjBF;AAAA,UAmBEC,QAnBF;AAAA,UAoBE3B,QApBF;AAAA,UAqBE4B,SArBF;AAAA,UAsBEC,MAtBF;AAAA,UAuBEC,KAvBF;AAAA,UAyBEC,SAzBF;AAAA,UA0BEC,eA1BF;AAAA,UA2BEC,cA3BF;AAAA,UA6BEC,QA7BF;AAAA,UA8BEvC,MA9BF;AAiCAA,MAAAA,MAAM,GAAQ;AAEZwC,QAAAA,UAAU,EAAE,YAAW;AAErB;AACAxC,UAAAA,MAAM,CAACyC,GAAP,CAAWX,QAAX;;AACA,cAAGjB,aAAH,EAAkB;AAChB,gBAAG0B,QAAQ,KAAK5C,SAAhB,EAA2B;AACzBK,cAAAA,MAAM,CAAC0C,WAAP;AACD;;AACD1C,YAAAA,MAAM,CAAC2C,MAAP,CAAcjC,KAAd;AACD,WALD,MAMK;AACH,gBAAG6B,QAAQ,KAAK5C,SAAhB,EAA2B;AACzB4C,cAAAA,QAAQ,CAACI,MAAT,CAAgB,SAAhB;AACD;;AACD3C,YAAAA,MAAM,CAAC4C,OAAP,CAAe,8BAAf,EAA+CzB,OAA/C,EAAwDW,QAAxD;AACA9B,YAAAA,MAAM,CAAC6C,UAAP;AACA7C,YAAAA,MAAM,CAAC8C,GAAP,CAAWC,QAAX;AACA/C,YAAAA,MAAM,CAAC0C,WAAP;AACD;AACF,SArBW;AAuBZA,QAAAA,WAAW,EAAE,YAAW;AACtB1C,UAAAA,MAAM,CAAC4C,OAAP,CAAe,4BAAf,EAA6C5C,MAA7C;AACAuC,UAAAA,QAAQ,GAAGvC,MAAX;AACAmB,UAAAA,OAAO,CACJ6B,IADH,CACQX,eADR,EACyBrC,MADzB;AAGD,SA7BW;AA+BZiD,QAAAA,OAAO,EAAE,YAAW;AAClBjD,UAAAA,MAAM,CAAC4C,OAAP,CAAe,4BAAf,EAA6CL,QAA7C;AACAvC,UAAAA,MAAM,CAACkD,YAAP;AACA/B,UAAAA,OAAO,CACJgC,UADH,CACcd,eADd;AAGD,SArCW;AAuCZe,QAAAA,OAAO,EAAE,YAAW;AAClBpD,UAAAA,MAAM,CAAC4C,OAAP,CAAe,2BAAf;AACArB,UAAAA,MAAM,GAAQJ,OAAO,CAACkC,IAAR,CAAahD,QAAQ,CAACiD,KAAtB,CAAd;AACA9B,UAAAA,MAAM,GAAQL,OAAO,CAACkC,IAAR,CAAahD,QAAQ,CAACkD,KAAtB,CAAd;AACA9B,UAAAA,QAAQ,GAAMN,OAAO,CAACkC,IAAR,CAAahD,QAAQ,CAACmD,OAAtB,CAAd;AACA9B,UAAAA,OAAO,GAAOP,OAAO,CAACkC,IAAR,CAAahD,QAAQ,CAACoD,MAAtB,CAAd;AAEA9B,UAAAA,OAAO,GAAOR,OAAO,CAACkC,IAAR,CAAahD,QAAQ,CAACqD,MAAtB,CAAd;AACA9B,UAAAA,MAAM,GAAQT,OAAO,CAACkC,IAAR,CAAahD,QAAQ,CAACsD,KAAtB,CAAd;AACA9B,UAAAA,MAAM,GAAQV,OAAO,CAACkC,IAAR,CAAahD,QAAQ,CAACuD,KAAtB,CAAd;AACD,SAjDW;AAmDZF,QAAAA,MAAM,EAAE,YAAW;AACjB1D,UAAAA,MAAM,CAAC4C,OAAP,CAAe,iBAAf,EAAkCzB,OAAlC;AACAA,UAAAA,OAAO,CACJuC,MADH;AAGD,SAxDW;AA0DZG,QAAAA,YAAY,EAAE,UAASxD,QAAT,EAAmByD,MAAnB,EAA2B;AACvCA,UAAAA,MAAM,GAAGA,MAAM,IAAI,QAAnB;AACAtE,UAAAA,CAAC,CAACa,QAAD,CAAD,CACG0D,EADH,CACM,UAAUzB,cADhB,EACgC,UAAS0B,KAAT,EAAgB;AAC5ChE,YAAAA,MAAM,CAAC8D,MAAD,CAAN;AACAE,YAAAA,KAAK,CAACC,cAAN;AACD,WAJH;AAMD,SAlEW;AAoEZpB,QAAAA,UAAU,EAAE,YAAW;AACrB7C,UAAAA,MAAM,CAAC4C,OAAP,CAAe,uBAAf;AACAzB,UAAAA,OAAO,CACJ4C,EADH,CACM,WAAWzB,cADjB,EACiCtC,MAAM,CAACkE,QAAP,CAAgBC,IADjD,EAEGJ,EAFH,CAEM,SAAWzB,cAFjB,EAEiCjC,QAAQ,CAACiD,KAF1C,EAEiDtD,MAAM,CAACgE,KAAP,CAAaV,KAAb,CAAmBc,IAFpE,EAGGL,EAHH,CAGM,UAAWzB,cAHjB,EAGiCjC,QAAQ,CAACqD,MAH1C,EAGkD1D,MAAM,CAAC0D,MAHzD,EAIGK,EAJH,CAIM,UAAWzB,cAJjB,EAIiCjC,QAAQ,CAACuD,KAJ1C,EAIiD5D,MAAM,CAAC4D,KAJxD,EAKGG,EALH,CAKM,UAAWzB,cALjB,EAKiCjC,QAAQ,CAACsD,KAL1C,EAKiD3D,MAAM,CAAC2D,KALxD;;AAOA,cAAG7B,QAAQ,CAACuC,iBAAZ,EAA+B;AAC7BlD,YAAAA,OAAO,CACJ4C,EADH,CACM,YAAYzB,cADlB,EACkCjC,QAAQ,CAACiD,KAD3C,EACkDtD,MAAM,CAACgE,KAAP,CAAaV,KAAb,CAAmBgB,OADrE;AAGD;;AACD/C,UAAAA,MAAM,CACHL,IADH,CACQ,YAAW;AACf,gBACEqD,MAAM,GAAO/E,CAAC,CAAC,IAAD,CADhB;AAAA,gBAEEgF,IAAI,GAASD,MAAM,CAACE,IAAP,CAAY,MAAZ,CAFf;AAAA,gBAGEC,UAAU,GAAG1E,MAAM,CAACyC,GAAP,CAAWkC,WAAX,CAAuBH,IAAvB,EAA6BD,MAA7B,CAHf;AAKA/E,YAAAA,CAAC,CAAC,IAAD,CAAD,CACGuE,EADH,CACMW,UAAU,GAAGpC,cADnB,EACmCtC,MAAM,CAACgE,KAAP,CAAaV,KAAb,CAAmBsB,MADtD;AAGD,WAVH;AAYD,SA9FW;AAgGZjB,QAAAA,KAAK,EAAE,YAAW;AAChBpC,UAAAA,MAAM,CACHL,IADH,CACQ,YAAY;AAChB,gBACEK,MAAM,GAAS/B,CAAC,CAAC,IAAD,CADlB;AAAA,gBAEEqF,QAAQ,GAAOtD,MAAM,CAACuD,MAAP,EAFjB;AAAA,gBAGEC,WAAW,GAAIxD,MAAM,CAACyD,OAAP,CAAexD,MAAf,CAHjB;AAAA,gBAIEE,OAAO,GAAQqD,WAAW,CAAC1B,IAAZ,CAAiBhD,QAAQ,CAACoD,MAA1B,CAJjB;AAAA,gBAKEwB,YAAY,GAAG1D,MAAM,CAACyB,IAAP,CAAYhB,QAAQ,CAACiD,YAArB,KAAsC,EALvD;AAAA,gBAMEC,UAAU,GAAKL,QAAQ,CAACM,EAAT,CAAY9E,QAAQ,CAAC+E,UAArB,CANjB;AAAA,gBAOEC,UAAU,GAAKR,QAAQ,CAACM,EAAT,CAAY9E,QAAQ,CAACiF,UAArB,CAPjB;AAAA,gBAQEC,SAAS,GAAMR,WAAW,CAACS,QAAZ,CAAqBvD,SAAS,CAACE,KAA/B,CARjB;;AAUA,gBAAGoD,SAAH,EAAc;AACZvF,cAAAA,MAAM,CAAC4C,OAAP,CAAe,0BAAf,EAA2CmC,WAA3C;AACAA,cAAAA,WAAW,CAACU,WAAZ,CAAwBxD,SAAS,CAACE,KAAlC;AACAT,cAAAA,OAAO,CAACgE,MAAR;AACD;;AACD,gBAAGL,UAAH,EAAe;AACbrF,cAAAA,MAAM,CAAC4C,OAAP,CAAe,0BAAf,EAA2CiC,QAA3C,EAAqDI,YAArD;AACAJ,cAAAA,QAAQ,CAACc,QAAT,CAAkB,OAAlB;AACD,aAHD,MAIK,IAAGT,UAAH,EAAe;AAClB3D,cAAAA,MAAM,CAACkD,IAAP,CAAY,SAAZ,EAAuB,KAAvB;AACD,aAFI,MAGA;AACHzE,cAAAA,MAAM,CAAC4C,OAAP,CAAe,uBAAf,EAAwCrB,MAAxC,EAAgD0D,YAAhD;AACA1D,cAAAA,MAAM,CAACqE,GAAP,CAAW,EAAX;AACD;AACF,WA5BH;AA8BD,SA/HW;AAiIZhC,QAAAA,KAAK,EAAE,YAAW;AAChBrC,UAAAA,MAAM,CACHL,IADH,CACQ,YAAY;AAChB,gBACEK,MAAM,GAAS/B,CAAC,CAAC,IAAD,CADlB;AAAA,gBAEEqF,QAAQ,GAAOtD,MAAM,CAACuD,MAAP,EAFjB;AAAA,gBAGEC,WAAW,GAAIxD,MAAM,CAACyD,OAAP,CAAexD,MAAf,CAHjB;AAAA,gBAIEE,OAAO,GAAQqD,WAAW,CAAC1B,IAAZ,CAAiBhD,QAAQ,CAACoD,MAA1B,CAJjB;AAAA,gBAKEwB,YAAY,GAAG1D,MAAM,CAACyB,IAAP,CAAYhB,QAAQ,CAACiD,YAArB,CALjB;AAAA,gBAMEC,UAAU,GAAKL,QAAQ,CAACM,EAAT,CAAY9E,QAAQ,CAAC+E,UAArB,CANjB;AAAA,gBAOEC,UAAU,GAAKR,QAAQ,CAACM,EAAT,CAAY9E,QAAQ,CAACiF,UAArB,CAPjB;AAAA,gBAQEC,SAAS,GAAMR,WAAW,CAACS,QAAZ,CAAqBvD,SAAS,CAACE,KAA/B,CARjB;;AAUA,gBAAG8C,YAAY,KAAKtF,SAApB,EAA+B;AAC7B;AACD;;AACD,gBAAG4F,SAAH,EAAc;AACZvF,cAAAA,MAAM,CAAC4C,OAAP,CAAe,0BAAf,EAA2CmC,WAA3C;AACAA,cAAAA,WAAW,CAACU,WAAZ,CAAwBxD,SAAS,CAACE,KAAlC;AACAT,cAAAA,OAAO,CAACgE,MAAR;AACD;;AACD,gBAAGL,UAAH,EAAe;AACbrF,cAAAA,MAAM,CAAC4C,OAAP,CAAe,0BAAf,EAA2CiC,QAA3C,EAAqDI,YAArD;AACAJ,cAAAA,QAAQ,CAACc,QAAT,CAAkB,kBAAlB;AACD,aAHD,MAIK,IAAGT,UAAH,EAAe;AAClBlF,cAAAA,MAAM,CAAC4C,OAAP,CAAe,0BAAf,EAA2CiC,QAA3C,EAAqDI,YAArD;AACA1D,cAAAA,MAAM,CAACkD,IAAP,CAAY,SAAZ,EAAuBQ,YAAvB;AACD,aAHI,MAIA;AACHjF,cAAAA,MAAM,CAAC4C,OAAP,CAAe,uBAAf,EAAwCrB,MAAxC,EAAgD0D,YAAhD;AACA1D,cAAAA,MAAM,CAACqE,GAAP,CAAWX,YAAX;AACD;AACF,WAhCH;AAkCD,SApKW;AAsKZY,QAAAA,SAAS,EAAE;AACTC,UAAAA,OAAO,EAAE,YAAW;AAClB,gBACEC,QAAQ,GAAG,IADb;AAGAvG,YAAAA,CAAC,CAAC0B,IAAF,CAAOa,UAAP,EAAmB,UAASiE,SAAT,EAAoB1C,KAApB,EAA2B;AAC5C,kBAAI,CAAGtD,MAAM,CAACkE,QAAP,CAAgBZ,KAAhB,CAAsBA,KAAtB,EAA6B0C,SAA7B,EAAwC,IAAxC,CAAP,EAAyD;AACvDD,gBAAAA,QAAQ,GAAG,KAAX;AACD;AACF,aAJD;AAKA,mBAAOA,QAAP;AACD;AAXQ,SAtKC;AAoLZZ,QAAAA,EAAE,EAAE;AACFc,UAAAA,aAAa,EAAE,UAASC,IAAT,EAAe;AAC5B,mBAAQA,IAAI,CAAC1B,IAAL,IAAa0B,IAAI,CAAC1B,IAAL,CAAU2B,KAAV,CAAgBrE,QAAQ,CAACI,MAAT,CAAgBkE,OAAhC,CAArB;AACD,WAHC;AAIFC,UAAAA,eAAe,EAAE,UAASC,MAAT,EAAiB;AAChC,gBACEC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYH,MAAZ,CADd;AAAA,gBAEEI,SAAS,GAAGJ,MAAM,CAACC,SAAS,CAAC,CAAD,CAAV,CAFpB;AAIA,mBAAOvG,MAAM,CAACmF,EAAP,CAAUwB,cAAV,CAAyBD,SAAzB,CAAP;AACD,WAVC;AAWF;AACAC,UAAAA,cAAc,EAAE,UAASC,KAAT,EAAgB;AAC9B,mBAAQ,OAAOA,KAAP,IAAgB,QAAhB,IAA4BpH,CAAC,CAACqH,OAAF,CAAUD,KAAV,CAApC;AACD,WAdC;AAeFE,UAAAA,KAAK,EAAE,UAASvF,MAAT,EAAiB;AACtB,gBAAG,CAACA,MAAD,IAAWA,MAAM,CAACwF,MAAP,KAAkB,CAAhC,EAAmC;AACjC,qBAAO,IAAP;AACD,aAFD,MAGK,IAAGxF,MAAM,CAAC4D,EAAP,CAAU,wBAAV,CAAH,EAAwC;AAC3C,qBAAO,CAAC5D,MAAM,CAAC4D,EAAP,CAAU,UAAV,CAAR;AACD,aAFI,MAGA;AACH,qBAAOnF,MAAM,CAACmF,EAAP,CAAU6B,KAAV,CAAgBzF,MAAhB,CAAP;AACD;AACF,WAzBC;AA0BFyF,UAAAA,KAAK,EAAE,UAASzF,MAAT,EAAiB;AACtB,mBAAO/B,CAAC,CAACyH,IAAF,CAAO1F,MAAM,CAACqE,GAAP,EAAP,MAAyB,EAAhC;AACD,WA5BC;AA6BFsB,UAAAA,KAAK,EAAE,UAAS5D,KAAT,EAAgB;AACrB,gBACEyC,QAAQ,GAAG,IADb;;AAGA,gBAAGzC,KAAH,EAAU;AACRtD,cAAAA,MAAM,CAAC4C,OAAP,CAAe,4BAAf,EAA6CU,KAA7C;AACA,qBAAOtD,MAAM,CAACkE,QAAP,CAAgBZ,KAAhB,CAAsBvB,UAAU,CAACuB,KAAD,CAAhC,EAAyCA,KAAzC,EAAgD,KAAhD,CAAP;AACD,aAHD,MAIK;AACHtD,cAAAA,MAAM,CAAC4C,OAAP,CAAe,2BAAf;AACApD,cAAAA,CAAC,CAAC0B,IAAF,CAAOa,UAAP,EAAmB,UAASiE,SAAT,EAAoB1C,KAApB,EAA2B;AAC5C,oBAAI,CAACtD,MAAM,CAACmF,EAAP,CAAU+B,KAAV,CAAgBlB,SAAhB,CAAL,EAAkC;AAChCD,kBAAAA,QAAQ,GAAG,KAAX;AACD;AACF,eAJD;AAKA,qBAAOA,QAAP;AACD;AACF;AA9CC,SApLQ;AAqOZ7C,QAAAA,YAAY,EAAE,YAAW;AACvB/B,UAAAA,OAAO,CACJgG,GADH,CACO7E,cADP;AAGAf,UAAAA,MAAM,CACH4F,GADH,CACO7E,cADP;AAGAX,UAAAA,OAAO,CACJwF,GADH,CACO7E,cADP;AAGAf,UAAAA,MAAM,CACH4F,GADH,CACO7E,cADP;AAGD,SAlPW;AAoPZ0B,QAAAA,KAAK,EAAE;AACLV,UAAAA,KAAK,EAAE;AACLgB,YAAAA,OAAO,EAAE,UAASN,KAAT,EAAgB;AACvB,kBACEzC,MAAM,GAAS/B,CAAC,CAAC,IAAD,CADlB;AAAA,kBAEE4H,GAAG,GAAYpD,KAAK,CAACqD,KAFvB;AAAA,kBAGEC,OAAO,GAAQ/F,MAAM,CAAC4D,EAAP,CAAU9E,QAAQ,CAACkH,KAAnB,CAHjB;AAAA,kBAIErC,UAAU,GAAK3D,MAAM,CAAC4D,EAAP,CAAU9E,QAAQ,CAACmH,QAAnB,CAJjB;AAAA,kBAKEC,YAAY,GAAIlG,MAAM,CAACyD,OAAP,CAAe3E,QAAQ,CAACiF,UAAxB,EAAoCyB,MAApC,GAA6C,CAL/D;AAAA,kBAMEW,OAAO,GAAQ;AACbC,gBAAAA,KAAK,EAAI,EADI;AAEbC,gBAAAA,MAAM,EAAG;AAFI,eANjB;;AAWA,kBAAIR,GAAG,IAAIM,OAAO,CAACE,MAAnB,EAA2B;AACzB5H,gBAAAA,MAAM,CAAC4C,OAAP,CAAe,mCAAf;AACArB,gBAAAA,MAAM,CACH6C,IADH;AAGD;;AACD,kBAAG,CAACJ,KAAK,CAAC6D,OAAP,IAAkBT,GAAG,IAAIM,OAAO,CAACC,KAAjC,IAA0CL,OAA1C,IAAqD,CAACG,YAAtD,IAAsE,CAACvC,UAA1E,EAAsF;AACpF,oBAAG,CAAC5D,WAAJ,EAAiB;AACfC,kBAAAA,MAAM,CACHuG,GADH,CACO,UAAUxF,cADjB,EACiCtC,MAAM,CAACgE,KAAP,CAAaV,KAAb,CAAmByE,KADpD;AAGA/H,kBAAAA,MAAM,CAAC0D,MAAP;AACA1D,kBAAAA,MAAM,CAACgI,KAAP,CAAa,wCAAb;AACD;;AACD1G,gBAAAA,WAAW,GAAG,IAAd;AACD;AACF,aA7BI;AA8BLyG,YAAAA,KAAK,EAAE,YAAW;AAChBzG,cAAAA,WAAW,GAAG,KAAd;AACD,aAhCI;AAiCL8C,YAAAA,IAAI,EAAE,UAASJ,KAAT,EAAgB;AACpB,kBACEzC,MAAM,GAAY/B,CAAC,CAAC,IAAD,CADrB;AAAA,kBAEEuF,WAAW,GAAOxD,MAAM,CAACyD,OAAP,CAAexD,MAAf,CAFpB;AAAA,kBAGEyG,eAAe,GAAGjI,MAAM,CAACyC,GAAP,CAAWV,UAAX,CAAsBR,MAAtB,CAHpB;;AAKA,kBAAIwD,WAAW,CAACS,QAAZ,CAAqBvD,SAAS,CAACE,KAA/B,CAAJ,EAA4C;AAC1CnC,gBAAAA,MAAM,CAACgI,KAAP,CAAa,oBAAb,EAAmCzG,MAAnC,EAA2C0G,eAA3C;;AACA,oBAAGA,eAAH,EAAoB;AAClBjI,kBAAAA,MAAM,CAACkE,QAAP,CAAgBZ,KAAhB,CAAuB2E,eAAvB;AACD;AACF,eALD,MAMK,IAAGnG,QAAQ,CAACiC,EAAT,IAAe,MAAlB,EAA0B;AAC7B,oBAAGkE,eAAH,EAAoB;AAClBjI,kBAAAA,MAAM,CAACkE,QAAP,CAAgBZ,KAAhB,CAAuB2E,eAAvB;AACD;AACF;AACF,aAlDI;AAmDLrD,YAAAA,MAAM,EAAE,UAASZ,KAAT,EAAgB;AACtB,kBACEzC,MAAM,GAAQ/B,CAAC,CAAC,IAAD,CADjB;AAAA,kBAEEuF,WAAW,GAAGxD,MAAM,CAACyD,OAAP,CAAexD,MAAf,CAFhB;AAAA,kBAGEyG,eAAe,GAAGjI,MAAM,CAACyC,GAAP,CAAWV,UAAX,CAAsBR,MAAtB,CAHpB;;AAKA,kBAAG0G,eAAe,KAAKnG,QAAQ,CAACiC,EAAT,IAAe,QAAf,IAA6BgB,WAAW,CAACS,QAAZ,CAAqBvD,SAAS,CAACE,KAA/B,KAAyCL,QAAQ,CAACoG,UAApF,CAAlB,EAAqH;AACnHC,gBAAAA,YAAY,CAACnI,MAAM,CAACoI,KAAR,CAAZ;AACApI,gBAAAA,MAAM,CAACoI,KAAP,GAAeC,UAAU,CAAC,YAAW;AACnCrI,kBAAAA,MAAM,CAACgI,KAAP,CAAa,oBAAb,EAAmCzG,MAAnC,EAA4CvB,MAAM,CAACyC,GAAP,CAAWV,UAAX,CAAsBR,MAAtB,CAA5C;AACAvB,kBAAAA,MAAM,CAACkE,QAAP,CAAgBZ,KAAhB,CAAuB2E,eAAvB;AACD,iBAHwB,EAGtBnG,QAAQ,CAACwG,KAHa,CAAzB;AAID;AACF;AAhEI;AADF,SApPK;AA0TZ7F,QAAAA,GAAG,EAAE;AACH8F,UAAAA,cAAc,EAAE,UAASrC,IAAT,EAAe;AAC7B,gBAAG,CAACA,IAAI,CAAC1B,IAAN,IAAe,CAAC0B,IAAI,CAACsC,KAAN,IAAe,CAACxI,MAAM,CAACmF,EAAP,CAAUc,aAAV,CAAwBC,IAAxB,CAAlC,EAAkE;AAChE,qBAAO,KAAP;AACD;;AACD,mBAAQA,IAAI,CAACsC,KAAL,KAAe7I,SAAhB,GACHuG,IAAI,CAACsC,KADF,GAEHtC,IAAI,CAAC1B,IAAL,CAAU2B,KAAV,CAAgBrE,QAAQ,CAACI,MAAT,CAAgBkE,OAAhC,EAAyC,CAAzC,IAA8C,EAFlD;AAID,WATE;AAUHqC,UAAAA,QAAQ,EAAE,UAASvC,IAAT,EAAe;AACvB,gBAAIlG,MAAM,CAACmF,EAAP,CAAUc,aAAV,CAAwBC,IAAxB,CAAJ,EAAoC;AAClC,qBAAOA,IAAI,CAAC1B,IAAL,CAAUkE,OAAV,CAAkBxC,IAAI,CAAC1B,IAAL,CAAU2B,KAAV,CAAgBrE,QAAQ,CAACI,MAAT,CAAgBkE,OAAhC,EAAyC,CAAzC,CAAlB,EAA+D,EAA/D,CAAP;AACD;;AACD,mBAAOF,IAAI,CAAC1B,IAAZ;AACD,WAfE;AAgBHG,UAAAA,WAAW,EAAE,UAASH,IAAT,EAAeD,MAAf,EAAuB;AAClC,gBAAGC,IAAI,IAAI,UAAR,IAAsBA,IAAI,IAAI,OAA9B,IAAyCA,IAAI,IAAI,QAAjD,IAA6DD,MAAM,CAACY,EAAP,CAAU,QAAV,CAAhE,EAAqF;AACnF,qBAAO,QAAP;AACD,aAFD,MAGK;AACH,qBAAOnF,MAAM,CAACyC,GAAP,CAAWiC,UAAX,EAAP;AACD;AACF,WAvBE;AAwBHA,UAAAA,UAAU,EAAE,YAAW;AACrB,mBAAQhF,QAAQ,CAACiJ,aAAT,CAAuB,OAAvB,EAAgCC,OAAhC,KAA4CjJ,SAA7C,GACH,OADG,GAEFD,QAAQ,CAACiJ,aAAT,CAAuB,OAAvB,EAAgCE,gBAAhC,KAAqDlJ,SAAtD,GACE,gBADF,GAEE,OAJN;AAMD,WA/BE;AAgCHmJ,UAAAA,mBAAmB,EAAE,UAASxC,MAAT,EAAiB;AACpC,gBACEyC,UAAU,GAAG,EADf;AAGAvJ,YAAAA,CAAC,CAAC0B,IAAF,CAAOoF,MAAP,EAAe,UAAS0C,IAAT,EAAepC,KAAf,EAAsB;AACnC,kBAAG,OAAOA,KAAP,IAAgB,QAAnB,EAA6B;AAC3BA,gBAAAA,KAAK,GAAG,CAACA,KAAD,CAAR;AACD;;AACDmC,cAAAA,UAAU,CAACC,IAAD,CAAV,GAAmB;AACjBpC,gBAAAA,KAAK,EAAE;AADU,eAAnB;AAGApH,cAAAA,CAAC,CAAC0B,IAAF,CAAO0F,KAAP,EAAc,UAASqC,KAAT,EAAgB/C,IAAhB,EAAsB;AAClC6C,gBAAAA,UAAU,CAACC,IAAD,CAAV,CAAiBpC,KAAjB,CAAuBsC,IAAvB,CAA4B;AAAE1E,kBAAAA,IAAI,EAAE0B;AAAR,iBAA5B;AACD,eAFD;AAGD,aAVD;AAWA,mBAAO6C,UAAP;AACD,WAhDE;AAiDHtF,UAAAA,MAAM,EAAE,UAASyC,IAAT,EAAe5C,KAAf,EAAsB;AAC5B,gBACEmF,QAAQ,GAAQzI,MAAM,CAACyC,GAAP,CAAWgG,QAAX,CAAoBvC,IAApB,CADlB;AAAA,gBAEEiD,SAAS,GAAOnJ,MAAM,CAACyC,GAAP,CAAW8F,cAAX,CAA0BrC,IAA1B,CAFlB;AAAA,gBAGE3E,MAAM,GAAUvB,MAAM,CAACyC,GAAP,CAAWa,KAAX,CAAiBA,KAAK,CAAC8F,UAAvB,CAHlB;AAAA,gBAIEZ,KAAK,GAAWjH,MAAM,CAACqE,GAAP,EAJlB;AAAA,gBAKEnC,MAAM,GAAUjE,CAAC,CAAC6J,UAAF,CAAanD,IAAI,CAACzC,MAAlB,IACZyC,IAAI,CAACzC,MAAL,CAAY+E,KAAZ,CADY,GAEZtC,IAAI,CAACzC,MAAL,IAAe3B,QAAQ,CAAC2B,MAAT,CAAgBgF,QAAhB,CAAf,IAA4C3G,QAAQ,CAACwH,IAAT,CAAcC,eAPhE;AAAA,gBAQEC,aAAa,GAAI/F,MAAM,CAACgG,MAAP,CAAc,SAAd,MAA6B,CAAC,CARjD;AAAA,gBASEC,YAAY,GAAKjG,MAAM,CAACgG,MAAP,CAAc,QAAd,MAA4B,CAAC,CAThD;AAAA,gBAUEE,MAVF;AAAA,gBAWEX,IAXF;;AAaA,gBAAGQ,aAAH,EAAkB;AAChB/F,cAAAA,MAAM,GAAGA,MAAM,CAACiF,OAAP,CAAe,SAAf,EAA0BnH,MAAM,CAACqE,GAAP,EAA1B,CAAT;AACD;;AACD,gBAAG8D,YAAH,EAAiB;AACfC,cAAAA,MAAM,GAAGpI,MAAM,CAACyD,OAAP,CAAe3E,QAAQ,CAACkD,KAAxB,EAA+BF,IAA/B,CAAoC,OAApC,EAA6CuG,EAA7C,CAAgD,CAAhD,CAAT;AACAZ,cAAAA,IAAI,GAAIW,MAAM,CAAC5C,MAAP,IAAiB,CAAlB,GACH4C,MAAM,CAACL,IAAP,EADG,GAEH/H,MAAM,CAACkD,IAAP,CAAY,aAAZ,KAA8B3C,QAAQ,CAACwH,IAAT,CAAcO,gBAFhD;AAIApG,cAAAA,MAAM,GAAGA,MAAM,CAACiF,OAAP,CAAe,QAAf,EAAyBM,IAAzB,CAAT;AACD;;AACDvF,YAAAA,MAAM,GAAGA,MAAM,CAACiF,OAAP,CAAe,cAAf,EAA+BpF,KAAK,CAAC8F,UAArC,CAAT;AACA3F,YAAAA,MAAM,GAAGA,MAAM,CAACiF,OAAP,CAAe,aAAf,EAA8BS,SAA9B,CAAT;;AACA,gBAAG,CAACjD,IAAI,CAACzC,MAAT,EAAiB;AACfzD,cAAAA,MAAM,CAAC4C,OAAP,CAAe,0CAAf,EAA2Da,MAA3D,EAAmEgF,QAAnE;AACD;;AACD,mBAAOhF,MAAP;AACD,WAhFE;AAiFH3B,UAAAA,QAAQ,EAAE,YAAW;AACnB,gBAAGtC,CAAC,CAACsK,aAAF,CAAgB5J,UAAhB,CAAH,EAAgC;AAC9B,kBACEuG,IAAI,GAAOD,MAAM,CAACC,IAAP,CAAYvG,UAAZ,CADb;AAAA,kBAEE6J,gBAAgB,GAAItD,IAAI,CAACM,MAAL,GAAc,CAAf,GACd7G,UAAU,CAACuG,IAAI,CAAC,CAAD,CAAL,CAAV,CAAoB2C,UAApB,KAAmCzJ,SAAnC,IAAgDO,UAAU,CAACuG,IAAI,CAAC,CAAD,CAAL,CAAV,CAAoBG,KAApB,KAA8BjH,SADhE,GAEf,KAJN;AAAA,kBAKEqK,QALF;;AAOA,kBAAGD,gBAAH,EAAqB;AACnB;AACAjI,gBAAAA,QAAQ,GAAKtC,CAAC,CAACyK,MAAF,CAAS,IAAT,EAAe,EAAf,EAAmBlK,OAAO,CAACE,OAAR,CAAgB6B,QAAnC,EAA6ClB,gBAA7C,CAAb;AACAmB,gBAAAA,UAAU,GAAGvC,CAAC,CAACyK,MAAF,CAAS,EAAT,EAAalK,OAAO,CAACE,OAAR,CAAgB6B,QAAhB,CAAyBiB,QAAtC,EAAgD7C,UAAhD,CAAb;AACAF,gBAAAA,MAAM,CAACmC,KAAP,CAAaL,QAAQ,CAACK,KAAT,CAAe+H,SAA5B,EAAuC9I,OAAvC;AACApB,gBAAAA,MAAM,CAAC4C,OAAP,CAAe,2CAAf,EAA4Db,UAA5D,EAAwED,QAAxE;AACD,eAND,MAOK;AACH;AACA,oBAAG5B,UAAU,CAACoG,MAAX,IAAqBtG,MAAM,CAACmF,EAAP,CAAUkB,eAAV,CAA0BnG,UAAU,CAACoG,MAArC,CAAxB,EAAsE;AACpEpG,kBAAAA,UAAU,CAACoG,MAAX,GAAoBtG,MAAM,CAACyC,GAAP,CAAWqG,mBAAX,CAA+B5I,UAAU,CAACoG,MAA1C,CAApB;AACD;;AACDxE,gBAAAA,QAAQ,GAAKtC,CAAC,CAACyK,MAAF,CAAS,IAAT,EAAe,EAAf,EAAmBlK,OAAO,CAACE,OAAR,CAAgB6B,QAAnC,EAA6C5B,UAA7C,CAAb;AACA6B,gBAAAA,UAAU,GAAGvC,CAAC,CAACyK,MAAF,CAAS,EAAT,EAAalK,OAAO,CAACE,OAAR,CAAgB6B,QAAhB,CAAyBiB,QAAtC,EAAgDjB,QAAQ,CAACwE,MAAzD,CAAb;AACAtG,gBAAAA,MAAM,CAAC4C,OAAP,CAAe,oBAAf,EAAqCb,UAArC,EAAiDD,QAAjD;AACD;AACF,aAxBD,MAyBK;AACHA,cAAAA,QAAQ,GAAK/B,OAAO,CAACE,OAAR,CAAgB6B,QAA7B;AACAC,cAAAA,UAAU,GAAGhC,OAAO,CAACE,OAAR,CAAgB6B,QAAhB,CAAyBiB,QAAtC;AACA/C,cAAAA,MAAM,CAAC4C,OAAP,CAAe,+BAAf,EAAgDb,UAAhD,EAA4DD,QAA5D;AACD,aA9BkB,CAgCnB;;;AACAM,YAAAA,SAAS,GAASN,QAAQ,CAACM,SAA3B;AACAJ,YAAAA,QAAQ,GAAUF,QAAQ,CAACE,QAA3B;AACA3B,YAAAA,QAAQ,GAAUyB,QAAQ,CAACzB,QAA3B;AACA4B,YAAAA,SAAS,GAASH,QAAQ,CAACG,SAA3B;AACAC,YAAAA,MAAM,GAAYJ,QAAQ,CAACI,MAA3B;AACAC,YAAAA,KAAK,GAAaL,QAAQ,CAACK,KAA3B;AACAE,YAAAA,eAAe,GAAG,YAAYD,SAA9B;AACAE,YAAAA,cAAc,GAAI,MAAMF,SAAxB,CAxCmB,CA0CnB;;AACAG,YAAAA,QAAQ,GAAGpB,OAAO,CAAC6B,IAAR,CAAaX,eAAb,CAAX,CA3CmB,CA6CnB;;AACArC,YAAAA,MAAM,CAACoD,OAAP;AACD,WAhIE;AAiIHE,UAAAA,KAAK,EAAE,UAAS8F,UAAT,EAAqB;AAC1BpJ,YAAAA,MAAM,CAAC4C,OAAP,CAAe,+BAAf,EAAgDwG,UAAhD;AACAA,YAAAA,UAAU,GAAGpJ,MAAM,CAAC4H,MAAP,CAAcuC,MAAd,CAAqBf,UAArB,CAAb;;AACA,gBAAG7H,MAAM,CAAC6I,MAAP,CAAc,MAAMhB,UAApB,EAAgCrC,MAAhC,GAAyC,CAA5C,EAAgD;AAC9C,qBAAOxF,MAAM,CAAC6I,MAAP,CAAc,MAAMhB,UAApB,CAAP;AACD,aAFD,MAGK,IAAI7H,MAAM,CAAC6I,MAAP,CAAc,YAAYhB,UAAZ,GAAwB,IAAtC,EAA4CrC,MAA5C,GAAqD,CAAzD,EAA6D;AAChE,qBAAOxF,MAAM,CAAC6I,MAAP,CAAc,YAAYhB,UAAZ,GAAwB,IAAtC,CAAP;AACD,aAFI,MAGA,IAAI7H,MAAM,CAAC6I,MAAP,CAAc,YAAYhB,UAAZ,GAAwB,MAAtC,EAA8CrC,MAA9C,GAAuD,CAA3D,EAA+D;AAClE,qBAAOxF,MAAM,CAAC6I,MAAP,CAAc,YAAYhB,UAAZ,GAAwB,MAAtC,CAAP;AACD,aAFI,MAGA,IAAI7H,MAAM,CAAC6I,MAAP,CAAc,WAAWpI,QAAQ,CAACkC,QAApB,GAA+B,IAA/B,GAAqCkF,UAArC,GAAiD,IAA/D,EAAqErC,MAArE,GAA8E,CAAlF,EAAsF;AACzF,qBAAOxF,MAAM,CAAC6I,MAAP,CAAc,WAAWpI,QAAQ,CAACkC,QAApB,GAA+B,IAA/B,GAAqCkF,UAArC,GAAiD,IAA/D,CAAP;AACD;;AACD,mBAAO5J,CAAC,CAAC,UAAD,CAAR;AACD,WAjJE;AAkJH8G,UAAAA,MAAM,EAAE,UAASA,MAAT,EAAiB;AACvB,gBACE+D,OAAO,GAAG7K,CAAC,EADb;AAGAA,YAAAA,CAAC,CAAC0B,IAAF,CAAOoF,MAAP,EAAe,UAAS2C,KAAT,EAAgBD,IAAhB,EAAsB;AACnCqB,cAAAA,OAAO,GAAGA,OAAO,CAACC,GAAR,CAAatK,MAAM,CAACyC,GAAP,CAAWa,KAAX,CAAiB0F,IAAjB,CAAb,CAAV;AACD,aAFD;AAGA,mBAAOqB,OAAP;AACD,WA1JE;AA2JHtI,UAAAA,UAAU,EAAE,UAASR,MAAT,EAAiB;AAC3B,gBACEgJ,eADF,EAEEnB,UAFF;;AAIA,gBAAG,CAACrH,UAAJ,EAAgB;AACd,qBAAO,KAAP;AACD;;AACDvC,YAAAA,CAAC,CAAC0B,IAAF,CAAOa,UAAP,EAAmB,UAASiE,SAAT,EAAoB1C,KAApB,EAA2B;AAC5C8F,cAAAA,UAAU,GAAG9F,KAAK,CAAC8F,UAAN,IAAoBpD,SAAjC;;AACA,kBAAIhG,MAAM,CAACyC,GAAP,CAAWa,KAAX,CAAiB8F,UAAjB,EAA6B,CAA7B,KAAmC7H,MAAM,CAAC,CAAD,CAA7C,EAAmD;AACjD+B,gBAAAA,KAAK,CAAC8F,UAAN,GAAmBA,UAAnB;AACAmB,gBAAAA,eAAe,GAAGjH,KAAlB;AACD;AACF,aAND;AAOA,mBAAOiH,eAAe,IAAI,KAA1B;AACD,WA3KE;AA4KH/B,UAAAA,KAAK,EAAE,UAAUlF,KAAV,EAAiB;AACtB,gBACEgD,MAAM,GAAG,EADX;AAAA,gBAEEkE,OAFF;AAIAlE,YAAAA,MAAM,CAAC4C,IAAP,CAAY5F,KAAZ;AACAkH,YAAAA,OAAO,GAAGxK,MAAM,CAACyC,GAAP,CAAWgI,MAAX,CAAkBzJ,IAAlB,CAAuBI,OAAvB,EAAgCkF,MAAhC,CAAV;AACA,mBAAOkE,OAAO,CAAClH,KAAD,CAAd;AACD,WApLE;AAqLHmH,UAAAA,MAAM,EAAE,UAAUnE,MAAV,EAAkB;AACxB,gBACE+D,OAAO,GAAG7K,CAAC,CAACqH,OAAF,CAAUP,MAAV,IACNtG,MAAM,CAACyC,GAAP,CAAW6D,MAAX,CAAkBA,MAAlB,CADM,GAEN/E,MAHN;AAAA,gBAIEkJ,MAAM,GAAG,EAJX;AAMAJ,YAAAA,OAAO,CAACnJ,IAAR,CAAa,UAAS+H,KAAT,EAAgB3F,KAAhB,EAAuB;AAClC,kBACE/B,MAAM,GAAO/B,CAAC,CAAC8D,KAAD,CADhB;AAAA,kBAEEkB,IAAI,GAASjD,MAAM,CAACkD,IAAP,CAAY,MAAZ,CAFf;AAAA,kBAGEuE,IAAI,GAASzH,MAAM,CAACkD,IAAP,CAAY,MAAZ,CAHf;AAAA,kBAIE+D,KAAK,GAAQjH,MAAM,CAACqE,GAAP,EAJf;AAAA,kBAKEV,UAAU,GAAG3D,MAAM,CAAC4D,EAAP,CAAU9E,QAAQ,CAACmH,QAAnB,CALf;AAAA,kBAMEkD,OAAO,GAAMnJ,MAAM,CAAC4D,EAAP,CAAU9E,QAAQ,CAACsK,KAAnB,CANf;AAAA,kBAOEC,UAAU,GAAI5B,IAAI,CAAC6B,OAAL,CAAa,IAAb,MAAuB,CAAC,CAPxC;AAAA,kBAQEC,SAAS,GAAK5F,UAAD,GACT3D,MAAM,CAAC4D,EAAP,CAAU,UAAV,CADS,GAET,KAVN;;AAYA,kBAAG6D,IAAH,EAAS;AACP,oBAAG4B,UAAH,EAAe;AACb5B,kBAAAA,IAAI,GAAGA,IAAI,CAACN,OAAL,CAAa,IAAb,EAAmB,EAAnB,CAAP;;AACA,sBAAG,CAAC+B,MAAM,CAACzB,IAAD,CAAV,EAAkB;AAChByB,oBAAAA,MAAM,CAACzB,IAAD,CAAN,GAAe,EAAf;AACD;;AACD,sBAAG9D,UAAH,EAAe;AACb,wBAAG4F,SAAH,EAAc;AACZL,sBAAAA,MAAM,CAACzB,IAAD,CAAN,CAAaE,IAAb,CAAkBV,KAAK,IAAI,IAA3B;AACD,qBAFD,MAGK;AACHiC,sBAAAA,MAAM,CAACzB,IAAD,CAAN,CAAaE,IAAb,CAAkB,KAAlB;AACD;AACF,mBAPD,MAQK;AACHuB,oBAAAA,MAAM,CAACzB,IAAD,CAAN,CAAaE,IAAb,CAAkBV,KAAlB;AACD;AACF,iBAhBD,MAiBK;AACH,sBAAGkC,OAAH,EAAY;AACV,wBAAGD,MAAM,CAACzB,IAAD,CAAN,KAAiBrJ,SAAjB,IAA8B8K,MAAM,CAACzB,IAAD,CAAN,IAAgB,KAAjD,EAAwD;AACtDyB,sBAAAA,MAAM,CAACzB,IAAD,CAAN,GAAgB8B,SAAD,GACXtC,KAAK,IAAI,IADE,GAEX,KAFJ;AAID;AACF,mBAPD,MAQK,IAAGtD,UAAH,EAAe;AAClB,wBAAG4F,SAAH,EAAc;AACZL,sBAAAA,MAAM,CAACzB,IAAD,CAAN,GAAeR,KAAK,IAAI,IAAxB;AACD,qBAFD,MAGK;AACHiC,sBAAAA,MAAM,CAACzB,IAAD,CAAN,GAAe,KAAf;AACD;AACF,mBAPI,MAQA;AACHyB,oBAAAA,MAAM,CAACzB,IAAD,CAAN,GAAeR,KAAf;AACD;AACF;AACF;AACF,aArDD;AAsDA,mBAAOiC,MAAP;AACD;AAnPE,SA1TO;AAgjBZM,QAAAA,GAAG,EAAE;AAEHzH,UAAAA,KAAK,EAAE,UAAS8F,UAAT,EAAqB;AAC1BpJ,YAAAA,MAAM,CAAC4C,OAAP,CAAe,mDAAf,EAAoEwG,UAApE;AACAA,YAAAA,UAAU,GAAGpJ,MAAM,CAAC4H,MAAP,CAAcuC,MAAd,CAAqBf,UAArB,CAAb;;AACA,gBAAG,OAAOA,UAAP,KAAsB,QAAzB,EAAmC;AACjCpJ,cAAAA,MAAM,CAACmC,KAAP,CAAaA,KAAK,CAACiH,UAAnB,EAA+BA,UAA/B;AACD;;AACD,gBAAG7H,MAAM,CAAC6I,MAAP,CAAc,MAAMhB,UAApB,EAAgCrC,MAAhC,GAAyC,CAA5C,EAAgD;AAC9C,qBAAO,IAAP;AACD,aAFD,MAGK,IAAIxF,MAAM,CAAC6I,MAAP,CAAc,YAAYhB,UAAZ,GAAwB,IAAtC,EAA4CrC,MAA5C,GAAqD,CAAzD,EAA6D;AAChE,qBAAO,IAAP;AACD,aAFI,MAGA,IAAIxF,MAAM,CAAC6I,MAAP,CAAc,WAAWpI,QAAQ,CAACkC,QAApB,GAA+B,IAA/B,GAAqCkF,UAArC,GAAiD,IAA/D,EAAqErC,MAArE,GAA8E,CAAlF,EAAsF;AACzF,qBAAO,IAAP;AACD;;AACD,mBAAO,KAAP;AACD;AAlBE,SAhjBO;AAskBZa,QAAAA,MAAM,EAAE;AACNuC,UAAAA,MAAM,EAAE,UAASb,IAAT,EAAe;AACrBA,YAAAA,IAAI,GAAI0B,MAAM,CAAC1B,IAAD,CAAd;AACA,mBAAOA,IAAI,CAACZ,OAAL,CAAaxG,MAAM,CAAC0F,MAApB,EAA4B,MAA5B,CAAP;AACD;AAJK,SAtkBI;AA6kBZ0C,QAAAA,GAAG,EAAE;AACH;AACApE,UAAAA,IAAI,EAAE,UAAS8C,IAAT,EAAepC,KAAf,EAAsB;AAC1B5G,YAAAA,MAAM,CAACsK,GAAP,CAAWhH,KAAX,CAAiB0F,IAAjB,EAAuBpC,KAAvB;AACD,WAJE;AAKHtD,UAAAA,KAAK,EAAE,UAAS0F,IAAT,EAAepC,KAAf,EAAsB;AAC3B,gBACEqE,aAAa,GAAG,EADlB;;AAGA,gBAAGjL,MAAM,CAACmF,EAAP,CAAUwB,cAAV,CAAyBC,KAAzB,CAAH,EAAoC;AAClCA,cAAAA,KAAK,GAAGpH,CAAC,CAACqH,OAAF,CAAUD,KAAV,IACJA,KADI,GAEJ,CAACA,KAAD,CAFJ;AAIAqE,cAAAA,aAAa,CAACjC,IAAD,CAAb,GAAsB;AACpBpC,gBAAAA,KAAK,EAAE;AADa,eAAtB;AAGApH,cAAAA,CAAC,CAAC0B,IAAF,CAAO0F,KAAP,EAAc,UAASqC,KAAT,EAAgB/C,IAAhB,EAAsB;AAClC+E,gBAAAA,aAAa,CAACjC,IAAD,CAAb,CAAoBpC,KAApB,CAA0BsC,IAA1B,CAA+B;AAAE1E,kBAAAA,IAAI,EAAE0B;AAAR,iBAA/B;AACD,eAFD;AAGD,aAXD,MAYK;AACH+E,cAAAA,aAAa,CAACjC,IAAD,CAAb,GAAsBpC,KAAtB;AACD;;AACD7E,YAAAA,UAAU,GAAGvC,CAAC,CAACyK,MAAF,CAAS,EAAT,EAAalI,UAAb,EAAyBkJ,aAAzB,CAAb;AACAjL,YAAAA,MAAM,CAACgI,KAAP,CAAa,cAAb,EAA6BiD,aAA7B,EAA4ClJ,UAA5C;AACD,WA1BE;AA2BHuE,UAAAA,MAAM,EAAE,UAASA,MAAT,EAAiB;AACvB,gBACE2E,aADF;;AAGA,gBAAG3E,MAAM,IAAItG,MAAM,CAACmF,EAAP,CAAUkB,eAAV,CAA0BC,MAA1B,CAAb,EAAgD;AAC9C2E,cAAAA,aAAa,GAAGjL,MAAM,CAACyC,GAAP,CAAWqG,mBAAX,CAA+BxC,MAA/B,CAAhB;AACD,aAFD,MAGK;AACH2E,cAAAA,aAAa,GAAG3E,MAAhB;AACD;;AACDvE,YAAAA,UAAU,GAAGvC,CAAC,CAACyK,MAAF,CAAS,EAAT,EAAalI,UAAb,EAAyBkJ,aAAzB,CAAb;AACD,WAtCE;AAuCHxH,UAAAA,MAAM,EAAE,UAAS2F,UAAT,EAAqB8B,MAArB,EAA6B;AACnC,gBACE3J,MAAM,GAASvB,MAAM,CAACyC,GAAP,CAAWa,KAAX,CAAiB8F,UAAjB,CADjB;AAAA,gBAEErE,WAAW,GAAIxD,MAAM,CAACyD,OAAP,CAAexD,MAAf,CAFjB;AAAA,gBAGEE,OAAO,GAAQqD,WAAW,CAACoG,QAAZ,CAAqB9K,QAAQ,CAACoD,MAA9B,CAHjB;AAAA,gBAIE2H,YAAY,GAAI1J,OAAO,CAACqF,MAAR,KAAmB,CAJrC;AAMAmE,YAAAA,MAAM,GAAI,OAAOA,MAAP,IAAiB,QAAlB,GACL,CAACA,MAAD,CADK,GAELA,MAFJ;AAIAlL,YAAAA,MAAM,CAAC4C,OAAP,CAAe,0BAAf,EAA2CwG,UAA3C;AACArE,YAAAA,WAAW,CACRsG,QADH,CACYpJ,SAAS,CAACE,KADtB;;AAGA,gBAAGL,QAAQ,CAACwJ,MAAZ,EAAoB;AAClB,kBAAG,CAACF,YAAJ,EAAkB;AAChB1J,gBAAAA,OAAO,GAAGI,QAAQ,CAACyJ,SAAT,CAAmB9H,MAAnB,CAA0ByH,MAA1B,CAAV;AACAxJ,gBAAAA,OAAO,CACJ8J,QADH,CACYzG,WADZ;AAGD;;AACDrD,cAAAA,OAAO,CACJ+J,IADH,CACQP,MAAM,CAAC,CAAD,CADd;;AAGA,kBAAG,CAACE,YAAJ,EAAkB;AAChB,oBAAGtJ,QAAQ,CAAC4J,UAAT,IAAuBlM,CAAC,CAACmM,EAAF,CAAKD,UAAL,KAAoB/L,SAA3C,IAAwDwB,OAAO,CAACuK,UAAR,CAAmB,cAAnB,CAA3D,EAA+F;AAC7F1L,kBAAAA,MAAM,CAAC4C,OAAP,CAAe,sCAAf,EAAuDd,QAAQ,CAAC4J,UAAhE;AACAhK,kBAAAA,OAAO,CAACgK,UAAR,CAAmB5J,QAAQ,CAAC4J,UAAT,GAAsB,KAAzC,EAAgD5J,QAAQ,CAAC8J,QAAzD;AACD,iBAHD,MAIK;AACH5L,kBAAAA,MAAM,CAAC4C,OAAP,CAAe,qDAAf;AACAlB,kBAAAA,OAAO,CACJmK,MADH,CACU/J,QAAQ,CAAC8J,QADnB;AAGD;AACF,eAXD,MAYK;AACH5L,gBAAAA,MAAM,CAAC4C,OAAP,CAAe,mDAAf,EAAoEwG,UAApE;AACD;AACF;AACF,WAhFE;AAiFH8B,UAAAA,MAAM,EAAE,UAASA,MAAT,EAAiB;AACvBlL,YAAAA,MAAM,CAACgI,KAAP,CAAa,4BAAb,EAA2CkD,MAA3C;AACAlL,YAAAA,MAAM,CAAC8C,GAAP,CAAWX,KAAX;AACAV,YAAAA,QAAQ,CACLgK,IADH,CACS3J,QAAQ,CAACyJ,SAAT,CAAmBpJ,KAAnB,CAAyB+I,MAAzB,CADT;AAGD;AAvFE,SA7kBO;AAuqBZxF,QAAAA,MAAM,EAAE;AACNQ,UAAAA,IAAI,EAAE,UAAS5C,KAAT,EAAgB4C,IAAhB,EAAsB;AAC1B,gBACEU,KAAK,GAAGpH,CAAC,CAACqH,OAAF,CAAUX,IAAV,IACJA,IADI,GAEJ,CAACA,IAAD,CAHN;;AAKA,gBAAGA,IAAI,IAAIvG,SAAX,EAAsB;AACpBK,cAAAA,MAAM,CAACgI,KAAP,CAAa,mBAAb;AACAjG,cAAAA,UAAU,CAACuB,KAAD,CAAV,CAAkBsD,KAAlB,GAA0B,EAA1B;AACA;AACD;;AACD,gBAAG7E,UAAU,CAACuB,KAAD,CAAV,IAAqB3D,SAArB,IAAkC,CAACH,CAAC,CAACqH,OAAF,CAAU9E,UAAU,CAACuB,KAAD,CAAV,CAAkBsD,KAA5B,CAAtC,EAA0E;AACxE;AACD;;AACDpH,YAAAA,CAAC,CAAC0B,IAAF,CAAOa,UAAU,CAACuB,KAAD,CAAV,CAAkBsD,KAAzB,EAAgC,UAASqC,KAAT,EAAgB/C,IAAhB,EAAsB;AACpD,kBAAGU,KAAK,CAACiE,OAAN,CAAc3E,IAAI,CAAC1B,IAAnB,MAA6B,CAAC,CAAjC,EAAoC;AAClCxE,gBAAAA,MAAM,CAACgI,KAAP,CAAa,cAAb,EAA6B9B,IAAI,CAAC1B,IAAlC;AACAzC,gBAAAA,UAAU,CAACuB,KAAD,CAAV,CAAkBsD,KAAlB,CAAwBkF,MAAxB,CAA+B7C,KAA/B,EAAsC,CAAtC;AACD;AACF,aALD;AAMD,WArBK;AAsBN3F,UAAAA,KAAK,EAAE,UAASA,KAAT,EAAgB;AACrB,gBACEgD,MAAM,GAAG9G,CAAC,CAACqH,OAAF,CAAUvD,KAAV,IACLA,KADK,GAEL,CAACA,KAAD,CAHN;AAKA9D,YAAAA,CAAC,CAAC0B,IAAF,CAAOoF,MAAP,EAAe,UAAS2C,KAAT,EAAgB3F,KAAhB,EAAuB;AACpCtD,cAAAA,MAAM,CAAC0F,MAAP,CAAcQ,IAAd,CAAmB5C,KAAnB;AACD,aAFD;AAGD,WA/BK;AAgCN;AACAsD,UAAAA,KAAK,EAAE,UAAStD,KAAT,EAAgBsD,KAAhB,EAAuB;AAC5B,gBAAGpH,CAAC,CAACqH,OAAF,CAAUvD,KAAV,CAAH,EAAqB;AACnB9D,cAAAA,CAAC,CAAC0B,IAAF,CAAOoF,MAAP,EAAe,UAAS2C,KAAT,EAAgB3F,KAAhB,EAAuB;AACpCtD,gBAAAA,MAAM,CAAC0F,MAAP,CAAcQ,IAAd,CAAmB5C,KAAnB,EAA0BsD,KAA1B;AACD,eAFD;AAGD,aAJD,MAKK;AACH5G,cAAAA,MAAM,CAAC0F,MAAP,CAAcQ,IAAd,CAAmB5C,KAAnB,EAA0BsD,KAA1B;AACD;AACF,WA1CK;AA2CNN,UAAAA,MAAM,EAAE,UAASA,MAAT,EAAiB;AACvBtG,YAAAA,MAAM,CAAC0F,MAAP,CAAcpC,KAAd,CAAoBgD,MAApB;AACD,WA7CK;AA8CN7C,UAAAA,MAAM,EAAE,UAAS2F,UAAT,EAAqB;AAC3B,gBACE7H,MAAM,GAAQvB,MAAM,CAACyC,GAAP,CAAWa,KAAX,CAAiB8F,UAAjB,CADhB;AAAA,gBAEErE,WAAW,GAAGxD,MAAM,CAACyD,OAAP,CAAexD,MAAf,CAFhB;AAAA,gBAGEE,OAAO,GAAOqD,WAAW,CAACoG,QAAZ,CAAqB9K,QAAQ,CAACoD,MAA9B,CAHhB;AAKAsB,YAAAA,WAAW,CACRU,WADH,CACexD,SAAS,CAACE,KADzB;;AAGA,gBAAGL,QAAQ,CAACwJ,MAAT,IAAmB5J,OAAO,CAACyD,EAAR,CAAW,UAAX,CAAtB,EAA8C;AAC5CnF,cAAAA,MAAM,CAAC4C,OAAP,CAAe,2BAAf,EAA4CwG,UAA5C;;AACA,kBAAGtH,QAAQ,CAAC4J,UAAT,IAAuBlM,CAAC,CAACmM,EAAF,CAAKD,UAAL,KAAoB/L,SAA3C,IAAwDwB,OAAO,CAACuK,UAAR,CAAmB,cAAnB,CAA3D,EAA+F;AAC7FhK,gBAAAA,OAAO,CAACgK,UAAR,CAAmB5J,QAAQ,CAAC4J,UAAT,GAAsB,MAAzC,EAAiD5J,QAAQ,CAAC8J,QAA1D,EAAoE,YAAW;AAC7ElK,kBAAAA,OAAO,CAACgE,MAAR;AACD,iBAFD;AAGD,eAJD,MAKK;AACHhE,gBAAAA,OAAO,CACJqK,OADH,CACWjK,QAAQ,CAAC8J,QADpB,EAC8B,YAAU;AACpClK,kBAAAA,OAAO,CAACgE,MAAR;AACD,iBAHH;AAKD;AACF;AACF;AAtEK,SAvqBI;AAgvBZ5C,QAAAA,GAAG,EAAE;AACHkJ,UAAAA,OAAO,EAAE,YAAW;AAClB7K,YAAAA,OAAO,CACJsE,WADH,CACexD,SAAS,CAACE,KADzB,EAEGkJ,QAFH,CAEYpJ,SAAS,CAAC+J,OAFtB;AAID,WANE;AAOHjJ,UAAAA,QAAQ,EAAE,YAAY;AACpBxB,YAAAA,MAAM,CACHL,IADH,CACQ,YAAY;AAChB,kBACEK,MAAM,GAAO/B,CAAC,CAAC,IAAD,CADhB;AAAA,kBAEE0F,UAAU,GAAI3D,MAAM,CAAC6I,MAAP,CAAc/J,QAAQ,CAACmH,QAAvB,EAAiCT,MAAjC,GAA0C,CAF1D;AAAA,kBAGEyB,KAAK,GAAStD,UAAD,GACT3D,MAAM,CAAC4D,EAAP,CAAU,UAAV,CADS,GAET5D,MAAM,CAACqE,GAAP,EALN;AAOArE,cAAAA,MAAM,CAACyB,IAAP,CAAYhB,QAAQ,CAACiD,YAArB,EAAmCuD,KAAnC;AACD,aAVH;AAYD,WApBE;AAqBHrG,UAAAA,KAAK,EAAE,YAAW;AAChBhB,YAAAA,OAAO,CACJsE,WADH,CACexD,SAAS,CAAC+J,OADzB,EAEGX,QAFH,CAEYpJ,SAAS,CAACE,KAFtB;AAID,WA1BE;AA2BHqG,UAAAA,KAAK,EAAE,UAAUlF,KAAV,EAAiBkF,KAAjB,EAAwB;AAC7B,gBACElC,MAAM,GAAG,EADX;AAGAA,YAAAA,MAAM,CAAChD,KAAD,CAAN,GAAgBkF,KAAhB;AACA,mBAAOxI,MAAM,CAAC8C,GAAP,CAAW2H,MAAX,CAAkBzJ,IAAlB,CAAuBI,OAAvB,EAAgCkF,MAAhC,CAAP;AACD,WAjCE;AAkCHmE,UAAAA,MAAM,EAAE,UAAUnE,MAAV,EAAkB;AACxB,gBAAG9G,CAAC,CAACyM,aAAF,CAAgB3F,MAAhB,CAAH,EAA4B;AAC1B;AACD;;AACD9G,YAAAA,CAAC,CAAC0B,IAAF,CAAOoF,MAAP,EAAe,UAASc,GAAT,EAAcoB,KAAd,EAAqB;AAClC,kBACEjH,MAAM,GAAQvB,MAAM,CAACyC,GAAP,CAAWa,KAAX,CAAiB8D,GAAjB,CADhB;AAAA,kBAEEvC,QAAQ,GAAMtD,MAAM,CAACuD,MAAP,EAFhB;AAAA,kBAGE8F,UAAU,GAAIpL,CAAC,CAACqH,OAAF,CAAU2B,KAAV,CAHhB;AAAA,kBAIEtD,UAAU,GAAIL,QAAQ,CAACM,EAAT,CAAY9E,QAAQ,CAAC+E,UAArB,CAJhB;AAAA,kBAKEC,UAAU,GAAIR,QAAQ,CAACM,EAAT,CAAY9E,QAAQ,CAACiF,UAArB,CALhB;AAAA,kBAMEoF,OAAO,GAAQnJ,MAAM,CAAC4D,EAAP,CAAU9E,QAAQ,CAACsK,KAAnB,KAA6BzF,UAN9C;AAAA,kBAOEgH,WAAW,GAAI3K,MAAM,CAACwF,MAAP,GAAgB,CAPjC;AAAA,kBAQEoF,cARF;;AAUA,kBAAGD,WAAH,EAAgB;AACd,oBAAGtB,UAAU,IAAI1F,UAAjB,EAA6B;AAC3BlF,kBAAAA,MAAM,CAAC4C,OAAP,CAAe,oBAAf,EAAqC4F,KAArC,EAA4CjH,MAA5C;AACAsD,kBAAAA,QAAQ,CAAC2C,QAAT,CAAkB,SAAlB;AACAhI,kBAAAA,CAAC,CAAC0B,IAAF,CAAOsH,KAAP,EAAc,UAASS,KAAT,EAAgBT,KAAhB,EAAuB;AACnC2D,oBAAAA,cAAc,GAAG5K,MAAM,CAAC6I,MAAP,CAAc,aAAa5B,KAAb,GAAqB,IAAnC,CAAjB;AACA3D,oBAAAA,QAAQ,GAASsH,cAAc,CAACrH,MAAf,EAAjB;;AACA,wBAAGqH,cAAc,CAACpF,MAAf,GAAwB,CAA3B,EAA8B;AAC5BlC,sBAAAA,QAAQ,CAAC2C,QAAT,CAAkB,OAAlB;AACD;AACF,mBAND;AAOD,iBAVD,MAWK,IAAGkD,OAAH,EAAY;AACf1K,kBAAAA,MAAM,CAAC4C,OAAP,CAAe,uBAAf,EAAwC4F,KAAxC,EAA+CjH,MAA/C;AACAA,kBAAAA,MAAM,CAAC6I,MAAP,CAAc,aAAa5B,KAAb,GAAqB,IAAnC,EACG1D,MADH,CACUzE,QAAQ,CAAC+E,UADnB,EAEKoC,QAFL,CAEc,OAFd;AAID,iBANI,MAOA,IAAGtC,UAAH,EAAe;AAClBlF,kBAAAA,MAAM,CAAC4C,OAAP,CAAe,wBAAf,EAAyC4F,KAAzC,EAAgD3D,QAAhD;;AACA,sBAAG2D,KAAK,KAAK,IAAb,EAAmB;AACjB3D,oBAAAA,QAAQ,CAAC2C,QAAT,CAAkB,OAAlB;AACD,mBAFD,MAGK;AACH3C,oBAAAA,QAAQ,CAAC2C,QAAT,CAAkB,SAAlB;AACD;AACF,iBARI,MASA,IAAGnC,UAAH,EAAe;AAClBrF,kBAAAA,MAAM,CAAC4C,OAAP,CAAe,wBAAf,EAAyC4F,KAAzC,EAAgD3D,QAAhD;AACAA,kBAAAA,QAAQ,CAACc,QAAT,CAAkB,cAAlB,EAAkC6C,KAAlC;AACD,iBAHI,MAIA;AACHxI,kBAAAA,MAAM,CAAC4C,OAAP,CAAe,qBAAf,EAAsC4F,KAAtC,EAA6CjH,MAA7C;AACAA,kBAAAA,MAAM,CAACqE,GAAP,CAAW4C,KAAX;AACD;AACF;AACF,aAhDD;AAiDD;AAvFE,SAhvBO;AA00BZtE,QAAAA,QAAQ,EAAE;AAERC,UAAAA,IAAI,EAAE,UAASH,KAAT,EAAgBoI,eAAhB,EAAiC;AACrC,gBACE3B,MAAM,GAAGzK,MAAM,CAACyC,GAAP,CAAWgI,MAAX,EADX;AAAA,gBAEE4B,UAFF,CADqC,CAMrC;;AACA,gBAAG/K,WAAH,EAAgB;AACd,qBAAO,KAAP;AACD,aAToC,CAWrC;;;AACAD,YAAAA,UAAU,GAAG,EAAb;;AACA,gBAAIrB,MAAM,CAAC6F,SAAP,CAAiBC,OAAjB,EAAJ,EAAiC;AAC/B9F,cAAAA,MAAM,CAACgI,KAAP,CAAa,2CAAb;AACAhI,cAAAA,MAAM,CAAC8C,GAAP,CAAWkJ,OAAX;;AACA,kBAAGI,eAAe,KAAK,IAAvB,EAA6B;AAC3B,uBAAOtK,QAAQ,CAACwK,SAAT,CAAmBtL,IAAnB,CAAwBI,OAAxB,EAAiC4C,KAAjC,EAAwCyG,MAAxC,CAAP;AACD;AACF,aAND,MAOK;AACHzK,cAAAA,MAAM,CAACgI,KAAP,CAAa,iBAAb;AACAhI,cAAAA,MAAM,CAAC8C,GAAP,CAAWX,KAAX;;AACA,kBAAG,CAACL,QAAQ,CAACwJ,MAAb,EAAqB;AACnBtL,gBAAAA,MAAM,CAACsK,GAAP,CAAWY,MAAX,CAAkB7J,UAAlB;AACD,eALE,CAMH;;;AACA,kBAAGF,OAAO,CAAC6B,IAAR,CAAa,WAAb,MAA8BrD,SAAjC,EAA4C;AAC1CqE,gBAAAA,KAAK,CAACuI,wBAAN;AACD;;AACD,kBAAGH,eAAe,KAAK,IAAvB,EAA6B;AAC3B,uBAAOtK,QAAQ,CAAC0K,SAAT,CAAmBxL,IAAnB,CAAwBI,OAAxB,EAAiCC,UAAjC,EAA6CoJ,MAA7C,CAAP;AACD;AACF;AACF,WApCO;AAsCR;AACAnH,UAAAA,KAAK,EAAE,UAASA,KAAT,EAAgB0C,SAAhB,EAA2ByG,UAA3B,EAAuC;AAC5CA,YAAAA,UAAU,GAAIA,UAAU,KAAK9M,SAAhB,GACT8M,UADS,GAET,IAFJ;;AAIA,gBAAG,OAAOnJ,KAAP,IAAgB,QAAnB,EAA6B;AAC3BtD,cAAAA,MAAM,CAAC4C,OAAP,CAAe,kBAAf,EAAmCU,KAAnC;AACA0C,cAAAA,SAAS,GAAG1C,KAAZ;AACAA,cAAAA,KAAK,GAAOvB,UAAU,CAACuB,KAAD,CAAtB;AACD;;AACD,gBACE8F,UAAU,GAAM9F,KAAK,CAAC8F,UAAN,IAAoBpD,SADtC;AAAA,gBAEEzE,MAAM,GAAUvB,MAAM,CAACyC,GAAP,CAAWa,KAAX,CAAiB8F,UAAjB,CAFlB;AAAA,gBAGEsD,aAAa,GAAIpJ,KAAK,CAACqJ,OAAP,GACZ3M,MAAM,CAACyC,GAAP,CAAWa,KAAX,CAAiBA,KAAK,CAACqJ,OAAvB,CADY,GAEZ,KALN;AAAA,gBAMEC,UAAU,GAAI,IANhB;AAAA,gBAOEC,WAAW,GAAG,EAPhB;;AASA,gBAAG,CAACvJ,KAAK,CAAC8F,UAAV,EAAsB;AACpBpJ,cAAAA,MAAM,CAACgI,KAAP,CAAa,gCAAb,EAA+CoB,UAA/C;AACA9F,cAAAA,KAAK,CAAC8F,UAAN,GAAmBA,UAAnB;AACD;;AACD,gBAAG7H,MAAM,CAACkD,IAAP,CAAY,UAAZ,CAAH,EAA4B;AAC1BzE,cAAAA,MAAM,CAACgI,KAAP,CAAa,6BAAb,EAA4CoB,UAA5C;AACAwD,cAAAA,UAAU,GAAG,IAAb;AACD,aAHD,MAIK,IAAGtJ,KAAK,CAACwJ,QAAN,IAAkB9M,MAAM,CAACmF,EAAP,CAAU6B,KAAV,CAAgBzF,MAAhB,CAArB,EAA6C;AAChDvB,cAAAA,MAAM,CAACgI,KAAP,CAAa,uCAAb,EAAsDoB,UAAtD;AACAwD,cAAAA,UAAU,GAAG,IAAb;AACD,aAHI,MAIA,IAAGtJ,KAAK,CAACqJ,OAAN,IAAiB3M,MAAM,CAACmF,EAAP,CAAU2B,KAAV,CAAgB4F,aAAhB,CAApB,EAAoD;AACvD1M,cAAAA,MAAM,CAACgI,KAAP,CAAa,uEAAb,EAAsF0E,aAAtF;AACAE,cAAAA,UAAU,GAAG,IAAb;AACD,aAHI,MAIA,IAAGtJ,KAAK,CAACsD,KAAN,KAAgBjH,SAAnB,EAA8B;AACjCH,cAAAA,CAAC,CAAC0B,IAAF,CAAOoC,KAAK,CAACsD,KAAb,EAAoB,UAASqC,KAAT,EAAgB/C,IAAhB,EAAsB;AACxC,oBAAIlG,MAAM,CAAC+K,GAAP,CAAWzH,KAAX,CAAiB8F,UAAjB,KAAgC,CAAGpJ,MAAM,CAACkE,QAAP,CAAgBgC,IAAhB,CAAqB5C,KAArB,EAA4B4C,IAA5B,CAAvC,EAA6E;AAC3ElG,kBAAAA,MAAM,CAACgI,KAAP,CAAa,kBAAb,EAAiCoB,UAAjC,EAA6ClD,IAAI,CAAC1B,IAAlD;AACAqI,kBAAAA,WAAW,CAAC3D,IAAZ,CAAiBlJ,MAAM,CAACyC,GAAP,CAAWgB,MAAX,CAAkByC,IAAlB,EAAwB5C,KAAxB,CAAjB;AACAsJ,kBAAAA,UAAU,GAAG,KAAb;AACD;AACF,eAND;AAOD;;AACD,gBAAGA,UAAH,EAAe;AACb,kBAAGH,UAAH,EAAe;AACbzM,gBAAAA,MAAM,CAAC0F,MAAP,CAAcjC,MAAd,CAAqB2F,UAArB,EAAiCyD,WAAjC;AACA/K,gBAAAA,QAAQ,CAACiL,OAAT,CAAiB/L,IAAjB,CAAsBO,MAAtB;AACD;AACF,aALD,MAMK;AACH,kBAAGkL,UAAH,EAAe;AACbpL,gBAAAA,UAAU,GAAGA,UAAU,CAAC2L,MAAX,CAAkBH,WAAlB,CAAb;AACA7M,gBAAAA,MAAM,CAACsK,GAAP,CAAW7G,MAAX,CAAkB2F,UAAlB,EAA8ByD,WAA9B;AACA/K,gBAAAA,QAAQ,CAACmL,SAAT,CAAmBjM,IAAnB,CAAwBO,MAAxB,EAAgCsL,WAAhC;AACD;;AACD,qBAAO,KAAP;AACD;;AACD,mBAAO,IAAP;AACD,WAlGO;AAoGR;AACA3G,UAAAA,IAAI,EAAE,UAAS5C,KAAT,EAAgB4C,IAAhB,EAAsB;AAC1B,gBACE3E,MAAM,GAASvB,MAAM,CAACyC,GAAP,CAAWa,KAAX,CAAiBA,KAAK,CAAC8F,UAAvB,CADjB;AAAA,gBAEE5E,IAAI,GAAW0B,IAAI,CAAC1B,IAFtB;AAAA,gBAGEgE,KAAK,GAAUjH,MAAM,CAACqE,GAAP,EAHjB;AAAA,gBAIEE,OAAO,GAAQ,IAJjB;AAAA,gBAKEqD,SAAS,GAAMnJ,MAAM,CAACyC,GAAP,CAAW8F,cAAX,CAA0BrC,IAA1B,CALjB;AAAA,gBAMEuC,QAAQ,GAAOzI,MAAM,CAACyC,GAAP,CAAWgG,QAAX,CAAoBvC,IAApB,CANjB;AAAA,gBAOEgH,YAAY,GAAGpL,QAAQ,CAAC8E,KAAT,CAAe6B,QAAf,CAPjB;;AASA,gBAAI,CAACjJ,CAAC,CAAC6J,UAAF,CAAa6D,YAAb,CAAL,EAAkC;AAChClN,cAAAA,MAAM,CAACmC,KAAP,CAAaA,KAAK,CAACgL,MAAnB,EAA2B1E,QAA3B;AACA;AACD,aAbyB,CAc1B;;;AACAD,YAAAA,KAAK,GAAIA,KAAK,KAAK7I,SAAV,IAAuB6I,KAAK,KAAK,EAAjC,IAAuCA,KAAK,KAAK,IAAlD,GACJ,EADI,GAEJhJ,CAAC,CAACyH,IAAF,CAAOuB,KAAK,GAAG,EAAf,CAFJ;AAIA,mBAAO0E,YAAY,CAAClM,IAAb,CAAkBO,MAAlB,EAA0BiH,KAA1B,EAAiCW,SAAjC,CAAP;AACD;AAzHO,SA10BE;AAs8BZiE,QAAAA,OAAO,EAAE,UAASpE,IAAT,EAAeR,KAAf,EAAsB;AAC7B,cAAIhJ,CAAC,CAACsK,aAAF,CAAgBd,IAAhB,CAAJ,EAA4B;AAC1BxJ,YAAAA,CAAC,CAACyK,MAAF,CAAS,IAAT,EAAenI,QAAf,EAAyBkH,IAAzB;AACD,WAFD,MAGK,IAAGR,KAAK,KAAK7I,SAAb,EAAwB;AAC3BmC,YAAAA,QAAQ,CAACkH,IAAD,CAAR,GAAiBR,KAAjB;AACD,WAFI,MAGA;AACH,mBAAO1G,QAAQ,CAACkH,IAAD,CAAf;AACD;AACF,SAh9BW;AAi9BZqE,QAAAA,QAAQ,EAAE,UAASrE,IAAT,EAAeR,KAAf,EAAsB;AAC9B,cAAIhJ,CAAC,CAACsK,aAAF,CAAgBd,IAAhB,CAAJ,EAA4B;AAC1BxJ,YAAAA,CAAC,CAACyK,MAAF,CAAS,IAAT,EAAejK,MAAf,EAAuBgJ,IAAvB;AACD,WAFD,MAGK,IAAGR,KAAK,KAAK7I,SAAb,EAAwB;AAC3BK,YAAAA,MAAM,CAACgJ,IAAD,CAAN,GAAeR,KAAf;AACD,WAFI,MAGA;AACH,mBAAOxI,MAAM,CAACgJ,IAAD,CAAb;AACD;AACF,SA39BW;AA49BZhB,QAAAA,KAAK,EAAE,YAAW;AAChB,cAAG,CAAClG,QAAQ,CAACwL,MAAV,IAAoBxL,QAAQ,CAACkG,KAAhC,EAAuC;AACrC,gBAAGlG,QAAQ,CAACrB,WAAZ,EAAyB;AACvBT,cAAAA,MAAM,CAACS,WAAP,CAAmB8M,GAAnB,CAAuB5M,SAAvB;AACD,aAFD,MAGK;AACHX,cAAAA,MAAM,CAACgI,KAAP,GAAelI,QAAQ,CAAC0N,SAAT,CAAmBC,IAAnB,CAAwBzM,IAAxB,CAA6B0M,OAAO,CAACC,IAArC,EAA2CD,OAA3C,EAAoD5L,QAAQ,CAACkH,IAAT,GAAgB,GAApE,CAAf;AACAhJ,cAAAA,MAAM,CAACgI,KAAP,CAAa4F,KAAb,CAAmBF,OAAnB,EAA4B/M,SAA5B;AACD;AACF;AACF,SAt+BW;AAu+BZiC,QAAAA,OAAO,EAAE,YAAW;AAClB,cAAG,CAACd,QAAQ,CAACwL,MAAV,IAAoBxL,QAAQ,CAACc,OAA7B,IAAwCd,QAAQ,CAACkG,KAApD,EAA2D;AACzD,gBAAGlG,QAAQ,CAACrB,WAAZ,EAAyB;AACvBT,cAAAA,MAAM,CAACS,WAAP,CAAmB8M,GAAnB,CAAuB5M,SAAvB;AACD,aAFD,MAGK;AACHX,cAAAA,MAAM,CAAC4C,OAAP,GAAiB9C,QAAQ,CAAC0N,SAAT,CAAmBC,IAAnB,CAAwBzM,IAAxB,CAA6B0M,OAAO,CAACC,IAArC,EAA2CD,OAA3C,EAAoD5L,QAAQ,CAACkH,IAAT,GAAgB,GAApE,CAAjB;AACAhJ,cAAAA,MAAM,CAAC4C,OAAP,CAAegL,KAAf,CAAqBF,OAArB,EAA8B/M,SAA9B;AACD;AACF;AACF,SAj/BW;AAk/BZwB,QAAAA,KAAK,EAAE,YAAW;AAChB,cAAG,CAACL,QAAQ,CAACwL,MAAb,EAAqB;AACnBtN,YAAAA,MAAM,CAACmC,KAAP,GAAerC,QAAQ,CAAC0N,SAAT,CAAmBC,IAAnB,CAAwBzM,IAAxB,CAA6B0M,OAAO,CAACvL,KAArC,EAA4CuL,OAA5C,EAAqD5L,QAAQ,CAACkH,IAAT,GAAgB,GAArE,CAAf;AACAhJ,YAAAA,MAAM,CAACmC,KAAP,CAAayL,KAAb,CAAmBF,OAAnB,EAA4B/M,SAA5B;AACD;AACF,SAv/BW;AAw/BZF,QAAAA,WAAW,EAAE;AACX8M,UAAAA,GAAG,EAAE,UAAS/J,OAAT,EAAkB;AACrB,gBACEqK,WADF,EAEEC,aAFF,EAGEC,YAHF;;AAKA,gBAAGjM,QAAQ,CAACrB,WAAZ,EAAyB;AACvBoN,cAAAA,WAAW,GAAK,IAAItN,IAAJ,GAAWC,OAAX,EAAhB;AACAuN,cAAAA,YAAY,GAAIzN,IAAI,IAAIuN,WAAxB;AACAC,cAAAA,aAAa,GAAGD,WAAW,GAAGE,YAA9B;AACAzN,cAAAA,IAAI,GAAYuN,WAAhB;AACApN,cAAAA,WAAW,CAACyI,IAAZ,CAAiB;AACf,wBAAmB1F,OAAO,CAAC,CAAD,CADX;AAEf,6BAAmB,GAAGzC,KAAH,CAASC,IAAT,CAAcwC,OAAd,EAAuB,CAAvB,KAA6B,EAFjC;AAGf,2BAAmBpC,OAHJ;AAIf,kCAAmB0M;AAJJ,eAAjB;AAMD;;AACD3F,YAAAA,YAAY,CAACnI,MAAM,CAACS,WAAP,CAAmB2H,KAApB,CAAZ;AACApI,YAAAA,MAAM,CAACS,WAAP,CAAmB2H,KAAnB,GAA2BC,UAAU,CAACrI,MAAM,CAACS,WAAP,CAAmBuN,OAApB,EAA6B,GAA7B,CAArC;AACD,WArBU;AAsBXA,UAAAA,OAAO,EAAE,YAAW;AAClB,gBACEC,KAAK,GAAGnM,QAAQ,CAACkH,IAAT,GAAgB,GAD1B;AAAA,gBAEEkF,SAAS,GAAG,CAFd;AAIA5N,YAAAA,IAAI,GAAG,KAAP;AACA6H,YAAAA,YAAY,CAACnI,MAAM,CAACS,WAAP,CAAmB2H,KAApB,CAAZ;AACA5I,YAAAA,CAAC,CAAC0B,IAAF,CAAOT,WAAP,EAAoB,UAASwI,KAAT,EAAgBjG,IAAhB,EAAsB;AACxCkL,cAAAA,SAAS,IAAIlL,IAAI,CAAC,gBAAD,CAAjB;AACD,aAFD;AAGAiL,YAAAA,KAAK,IAAI,MAAMC,SAAN,GAAkB,IAA3B;;AACA,gBAAG9N,cAAH,EAAmB;AACjB6N,cAAAA,KAAK,IAAI,QAAQ7N,cAAR,GAAyB,IAAlC;AACD;;AACD,gBAAGD,WAAW,CAAC4G,MAAZ,GAAqB,CAAxB,EAA2B;AACzBkH,cAAAA,KAAK,IAAI,MAAM,GAAN,GAAY9N,WAAW,CAAC4G,MAAxB,GAAiC,GAA1C;AACD;;AACD,gBAAI,CAAC2G,OAAO,CAACnK,KAAR,KAAkB5D,SAAlB,IAA+B+N,OAAO,CAACS,KAAR,KAAkBxO,SAAlD,KAAgEc,WAAW,CAACsG,MAAZ,GAAqB,CAAzF,EAA4F;AAC1F2G,cAAAA,OAAO,CAACU,cAAR,CAAuBH,KAAvB;;AACA,kBAAGP,OAAO,CAACS,KAAX,EAAkB;AAChBT,gBAAAA,OAAO,CAACS,KAAR,CAAc1N,WAAd;AACD,eAFD,MAGK;AACHjB,gBAAAA,CAAC,CAAC0B,IAAF,CAAOT,WAAP,EAAoB,UAASwI,KAAT,EAAgBjG,IAAhB,EAAsB;AACxC0K,kBAAAA,OAAO,CAACH,GAAR,CAAYvK,IAAI,CAAC,MAAD,CAAJ,GAAe,IAAf,GAAsBA,IAAI,CAAC,gBAAD,CAA1B,GAA6C,IAAzD;AACD,iBAFD;AAGD;;AACD0K,cAAAA,OAAO,CAACW,QAAR;AACD;;AACD5N,YAAAA,WAAW,GAAG,EAAd;AACD;AApDU,SAx/BD;AA8iCZkC,QAAAA,MAAM,EAAE,UAASjC,KAAT,EAAgB4N,eAAhB,EAAiCC,OAAjC,EAA0C;AAChD,cACEC,MAAM,GAAGjM,QADX;AAAA,cAEEkM,QAFF;AAAA,cAGEC,KAHF;AAAA,cAIEC,QAJF;AAMAL,UAAAA,eAAe,GAAGA,eAAe,IAAIxN,cAArC;AACAyN,UAAAA,OAAO,GAAWnN,OAAO,IAAYmN,OAArC;;AACA,cAAG,OAAO7N,KAAP,IAAgB,QAAhB,IAA4B8N,MAAM,KAAK7O,SAA1C,EAAqD;AACnDe,YAAAA,KAAK,GAAMA,KAAK,CAACkO,KAAN,CAAY,OAAZ,CAAX;AACAH,YAAAA,QAAQ,GAAG/N,KAAK,CAACqG,MAAN,GAAe,CAA1B;AACAvH,YAAAA,CAAC,CAAC0B,IAAF,CAAOR,KAAP,EAAc,UAASmO,KAAT,EAAgBrG,KAAhB,EAAuB;AACnC,kBAAIsG,cAAc,GAAID,KAAK,IAAIJ,QAAV,GACjBjG,KAAK,GAAG9H,KAAK,CAACmO,KAAK,GAAG,CAAT,CAAL,CAAiBE,MAAjB,CAAwB,CAAxB,EAA2BC,WAA3B,EAAR,GAAmDtO,KAAK,CAACmO,KAAK,GAAG,CAAT,CAAL,CAAiB9N,KAAjB,CAAuB,CAAvB,CADlC,GAEjBL,KAFJ;;AAIA,kBAAIlB,CAAC,CAACsK,aAAF,CAAiB0E,MAAM,CAACM,cAAD,CAAvB,KAA8CD,KAAK,IAAIJ,QAA3D,EAAuE;AACrED,gBAAAA,MAAM,GAAGA,MAAM,CAACM,cAAD,CAAf;AACD,eAFD,MAGK,IAAIN,MAAM,CAACM,cAAD,CAAN,KAA2BnP,SAA/B,EAA2C;AAC9C+O,gBAAAA,KAAK,GAAGF,MAAM,CAACM,cAAD,CAAd;AACA,uBAAO,KAAP;AACD,eAHI,MAIA,IAAItP,CAAC,CAACsK,aAAF,CAAiB0E,MAAM,CAAChG,KAAD,CAAvB,KAAqCqG,KAAK,IAAIJ,QAAlD,EAA8D;AACjED,gBAAAA,MAAM,GAAGA,MAAM,CAAChG,KAAD,CAAf;AACD,eAFI,MAGA,IAAIgG,MAAM,CAAChG,KAAD,CAAN,KAAkB7I,SAAtB,EAAkC;AACrC+O,gBAAAA,KAAK,GAAGF,MAAM,CAAChG,KAAD,CAAd;AACA,uBAAO,KAAP;AACD,eAHI,MAIA;AACH,uBAAO,KAAP;AACD;AACF,aAtBD;AAuBD;;AACD,cAAIhJ,CAAC,CAAC6J,UAAF,CAAcqF,KAAd,CAAJ,EAA4B;AAC1BC,YAAAA,QAAQ,GAAGD,KAAK,CAACd,KAAN,CAAYW,OAAZ,EAAqBD,eAArB,CAAX;AACD,WAFD,MAGK,IAAGI,KAAK,KAAK/O,SAAb,EAAwB;AAC3BgP,YAAAA,QAAQ,GAAGD,KAAX;AACD;;AACD,cAAGlP,CAAC,CAACqH,OAAF,CAAU5F,aAAV,CAAH,EAA6B;AAC3BA,YAAAA,aAAa,CAACiI,IAAd,CAAmByF,QAAnB;AACD,WAFD,MAGK,IAAG1N,aAAa,KAAKtB,SAArB,EAAgC;AACnCsB,YAAAA,aAAa,GAAG,CAACA,aAAD,EAAgB0N,QAAhB,CAAhB;AACD,WAFI,MAGA,IAAGA,QAAQ,KAAKhP,SAAhB,EAA2B;AAC9BsB,YAAAA,aAAa,GAAG0N,QAAhB;AACD;;AACD,iBAAOD,KAAP;AACD;AAlmCW,OAAd;AAomCA1O,MAAAA,MAAM,CAACwC,UAAP;AACD,KAxoCH;AA2oCA,WAAQvB,aAAa,KAAKtB,SAAnB,GACHsB,aADG,GAEH,IAFJ;AAID,GA7pCD;;AA+pCAlB,EAAAA,OAAO,CAACE,OAAR,CAAgB6B,QAAhB,GAA2B;AAEzBkH,IAAAA,IAAI,EAAgB,MAFK;AAGzB5G,IAAAA,SAAS,EAAW,MAHK;AAKzB4F,IAAAA,KAAK,EAAe,KALK;AAMzBpF,IAAAA,OAAO,EAAa,KANK;AAOzBnC,IAAAA,WAAW,EAAS,IAPK;AASzB6F,IAAAA,MAAM,EAAc,KATK;AAWzBjC,IAAAA,iBAAiB,EAAG,IAXK;AAYzBN,IAAAA,EAAE,EAAkB,QAZK;AAazBuH,IAAAA,MAAM,EAAc,KAbK;AAezBhD,IAAAA,KAAK,EAAe,GAfK;AAgBzBJ,IAAAA,UAAU,EAAU,IAhBK;AAkBzBwD,IAAAA,UAAU,EAAU,OAlBK;AAmBzBE,IAAAA,QAAQ,EAAY,GAnBK;AAqBzBmB,IAAAA,OAAO,EAAa,YAAW,CAAE,CArBR;AAsBzBE,IAAAA,SAAS,EAAW,YAAW,CAAE,CAtBR;AAuBzBX,IAAAA,SAAS,EAAW,YAAW;AAAE,aAAO,IAAP;AAAc,KAvBtB;AAwBzBE,IAAAA,SAAS,EAAW,YAAW;AAAE,aAAO,KAAP;AAAe,KAxBvB;AA0BzBxK,IAAAA,QAAQ,EAAG;AACTiD,MAAAA,YAAY,EAAG,SADN;AAETf,MAAAA,QAAQ,EAAO;AAFN,KA1Bc;AA+BzBhC,IAAAA,MAAM,EAAE;AACN+M,MAAAA,MAAM,EAAI,qBADJ;AAEN7I,MAAAA,OAAO,EAAG,WAFJ;AAGN8I,MAAAA,OAAO,EAAG,aAHJ;AAINC,MAAAA,KAAK,EAAK,mGAJJ;AAKNvH,MAAAA,MAAM,EAAI,qCALJ;AAMNwH,MAAAA,KAAK,EAAK,gBANJ;AAONC,MAAAA,OAAO,EAAG,UAPJ;AAQNC,MAAAA,MAAM,EAAI,kBARJ;AASNC,MAAAA,GAAG,EAAO;AATJ,KA/BiB;AA2CzBjG,IAAAA,IAAI,EAAE;AACJC,MAAAA,eAAe,EAAI,4BADf;AAEJM,MAAAA,gBAAgB,EAAG;AAFf,KA3CmB;AAgDzBpG,IAAAA,MAAM,EAAE;AACNqD,MAAAA,KAAK,EAAkB,0BADjB;AAEN0I,MAAAA,OAAO,EAAgB,wBAFjB;AAGNL,MAAAA,KAAK,EAAkB,+BAHjB;AAINI,MAAAA,GAAG,EAAoB,4BAJjB;AAKNrN,MAAAA,MAAM,EAAiB,mCALjB;AAMNmN,MAAAA,OAAO,EAAgB,2BANjB;AAONH,MAAAA,OAAO,EAAgB,iCAPjB;AAQNI,MAAAA,MAAM,EAAiB,gCARjB;AASNnK,MAAAA,EAAE,EAAqB,8BATjB;AAUNsK,MAAAA,SAAS,EAAc,sCAVjB;AAWNC,MAAAA,GAAG,EAAoB,uCAXjB;AAYNC,MAAAA,UAAU,EAAa,+CAZjB;AAaNC,MAAAA,OAAO,EAAgB,mCAbjB;AAcNC,MAAAA,cAAc,EAAS,2CAdjB;AAeNC,MAAAA,aAAa,EAAU,sCAfjB;AAgBNC,MAAAA,oBAAoB,EAAG,6CAhBjB;AAiBNC,MAAAA,SAAS,EAAc,gDAjBjB;AAkBNjJ,MAAAA,MAAM,EAAiB,gDAlBjB;AAmBNkJ,MAAAA,WAAW,EAAY,+CAnBjB;AAoBNC,MAAAA,SAAS,EAAc,qDApBjB;AAqBN/J,MAAAA,KAAK,EAAkB,qCArBjB;AAsBNgK,MAAAA,SAAS,EAAc,2DAtBjB;AAuBNC,MAAAA,UAAU,EAAa,2CAvBjB;AAwBNC,MAAAA,QAAQ,EAAe,+CAxBjB;AAyBNC,MAAAA,UAAU,EAAa,8CAzBjB;AA0BNC,MAAAA,QAAQ,EAAe;AA1BjB,KAhDiB;AA6EzBlQ,IAAAA,QAAQ,EAAG;AACTmH,MAAAA,QAAQ,EAAK,6CADJ;AAET7D,MAAAA,KAAK,EAAQ,QAFJ;AAGTL,MAAAA,KAAK,EAAQ,yBAHJ;AAITC,MAAAA,KAAK,EAAQ,QAJJ;AAKTgE,MAAAA,KAAK,EAAQ,OALJ;AAMT/D,MAAAA,OAAO,EAAM,gBANJ;AAOTC,MAAAA,MAAM,EAAO,eAPJ;AAQTkH,MAAAA,KAAK,EAAQ,qBARJ;AAST/G,MAAAA,KAAK,EAAQ,4BATJ;AAUTF,MAAAA,MAAM,EAAO,8BAVJ;AAWT0B,MAAAA,UAAU,EAAG,cAXJ;AAYTE,MAAAA,UAAU,EAAG;AAZJ,KA7Ec;AA4FzBrD,IAAAA,SAAS,EAAG;AACVE,MAAAA,KAAK,EAAK,OADA;AAEVqO,MAAAA,KAAK,EAAK,iBAFA;AAGVC,MAAAA,OAAO,EAAG,MAHA;AAIVzE,MAAAA,OAAO,EAAG;AAJA,KA5Fa;AAmGzB7J,IAAAA,KAAK,EAAE;AACLiH,MAAAA,UAAU,EAAG,qDADR;AAELsH,MAAAA,MAAM,EAAO,uCAFR;AAGLvD,MAAAA,MAAM,EAAO,iDAHR;AAILjD,MAAAA,SAAS,EAAI;AAJR,KAnGkB;AA0GzBqB,IAAAA,SAAS,EAAE;AAET;AACApJ,MAAAA,KAAK,EAAE,UAAS+I,MAAT,EAAiB;AACtB,YACEO,IAAI,GAAG,mBADT;AAGAjM,QAAAA,CAAC,CAAC0B,IAAF,CAAOgK,MAAP,EAAe,UAASjC,KAAT,EAAgBT,KAAhB,EAAuB;AACpCiD,UAAAA,IAAI,IAAI,SAASjD,KAAT,GAAiB,OAAzB;AACD,SAFD;AAGAiD,QAAAA,IAAI,IAAI,OAAR;AACA,eAAOjM,CAAC,CAACiM,IAAD,CAAR;AACD,OAZQ;AAcT;AACAhI,MAAAA,MAAM,EAAE,UAASyH,MAAT,EAAiB;AACvB,eAAO1L,CAAC,CAAC,QAAD,CAAD,CACJ6L,QADI,CACK,oCADL,EAEJI,IAFI,CAECP,MAAM,CAAC,CAAD,CAFP,CAAP;AAID;AApBQ,KA1Gc;AAiIzBtE,IAAAA,KAAK,EAAE;AAEL;AACAE,MAAAA,KAAK,EAAE,UAAS0B,KAAT,EAAgB;AACrB,eAAO,EAAEA,KAAK,KAAK7I,SAAV,IAAuB,OAAO6I,KAA9B,IAAuChJ,CAAC,CAACqH,OAAF,CAAU2B,KAAV,KAAoBA,KAAK,CAACzB,MAAN,KAAiB,CAA9E,CAAP;AACD,OALI;AAOL;AACAyI,MAAAA,OAAO,EAAE,YAAW;AAClB,eAAQhQ,CAAC,CAAC,IAAD,CAAD,CAAQ4K,MAAR,CAAe,UAAf,EAA2BrD,MAA3B,GAAoC,CAA5C;AACD,OAVI;AAYL;AACAoI,MAAAA,KAAK,EAAE,UAAS3G,KAAT,EAAe;AACpB,eAAOzI,OAAO,CAACE,OAAR,CAAgB6B,QAAhB,CAAyBI,MAAzB,CAAgCiN,KAAhC,CAAsCwB,IAAtC,CAA2CnI,KAA3C,CAAP;AACD,OAfI;AAiBL;AACA+G,MAAAA,GAAG,EAAE,UAAS/G,KAAT,EAAgB;AACnB,eAAOzI,OAAO,CAACE,OAAR,CAAgB6B,QAAhB,CAAyBI,MAAzB,CAAgCqN,GAAhC,CAAoCoB,IAApC,CAAyCnI,KAAzC,CAAP;AACD,OApBI;AAsBL;AACAtG,MAAAA,MAAM,EAAE,UAASsG,KAAT,EAAgBtG,MAAhB,EAAwB;AAC9B,YAAGA,MAAM,YAAY0O,MAArB,EAA6B;AAC3B,iBAAOpI,KAAK,CAACrC,KAAN,CAAYjE,MAAZ,CAAP;AACD;;AACD,YACE2O,WAAW,GAAG3O,MAAM,CAACiE,KAAP,CAAapG,OAAO,CAACE,OAAR,CAAgB6B,QAAhB,CAAyBI,MAAzB,CAAgCkN,KAA7C,CADhB;AAAA,YAEEA,KAFF,CAJ8B,CAQ9B;;AACA,YAAGyB,WAAH,EAAgB;AACd3O,UAAAA,MAAM,GAAI2O,WAAW,CAAC9J,MAAZ,IAAsB,CAAvB,GACL8J,WAAW,CAAC,CAAD,CADN,GAEL3O,MAFJ;AAIAkN,UAAAA,KAAK,GAAIyB,WAAW,CAAC9J,MAAZ,IAAsB,CAAvB,GACJ8J,WAAW,CAAC,CAAD,CADP,GAEJ,EAFJ;AAID;;AACD,eAAOrI,KAAK,CAACrC,KAAN,CAAa,IAAIyK,MAAJ,CAAW1O,MAAX,EAAmBkN,KAAnB,CAAb,CAAP;AACD,OA3CI;AA6CL;AACAC,MAAAA,OAAO,EAAE,UAAS7G,KAAT,EAAgBsI,KAAhB,EAAuB;AAC9B,YACEC,SAAS,GAAGhR,OAAO,CAACE,OAAR,CAAgB6B,QAAhB,CAAyBI,MAAzB,CAAgCmN,OAD9C;AAAA,YAEE2B,GAFF;AAAA,YAGEC,GAHF;AAAA,YAIEC,KAJF;;AAMA,YAAI,CAACJ,KAAD,IAAU,CAAC,EAAD,EAAK,IAAL,EAAWjG,OAAX,CAAmBiG,KAAnB,MAA8B,CAAC,CAA7C,EAAgD,CAC9C;AACD,SAFD,MAGK,IAAGA,KAAK,CAACjG,OAAN,CAAc,IAAd,KAAuB,CAAC,CAA3B,EAA8B;AACjC,cAAGkG,SAAS,CAACJ,IAAV,CAAeG,KAAf,CAAH,EAA0B;AACxBE,YAAAA,GAAG,GAAGC,GAAG,GAAGH,KAAK,GAAG,CAApB;AACD;AACF,SAJI,MAKA;AACHI,UAAAA,KAAK,GAAGJ,KAAK,CAAClC,KAAN,CAAY,IAAZ,EAAkB,CAAlB,CAAR;;AACA,cAAGmC,SAAS,CAACJ,IAAV,CAAeO,KAAK,CAAC,CAAD,CAApB,CAAH,EAA6B;AAC3BF,YAAAA,GAAG,GAAGE,KAAK,CAAC,CAAD,CAAL,GAAW,CAAjB;AACD;;AACD,cAAGH,SAAS,CAACJ,IAAV,CAAeO,KAAK,CAAC,CAAD,CAApB,CAAH,EAA6B;AAC3BD,YAAAA,GAAG,GAAGC,KAAK,CAAC,CAAD,CAAL,GAAW,CAAjB;AACD;AACF;;AACD,eACEH,SAAS,CAACJ,IAAV,CAAenI,KAAf,MACCwI,GAAG,KAAKrR,SAAR,IAAqB6I,KAAK,IAAIwI,GAD/B,MAECC,GAAG,KAAKtR,SAAR,IAAqB6I,KAAK,IAAIyI,GAF/B,CADF;AAKD,OA3EI;AA6EL;AACA/B,MAAAA,OAAO,EAAE,UAAS1G,KAAT,EAAgB;AACvB,eAAOzI,OAAO,CAACE,OAAR,CAAgB6B,QAAhB,CAAyBI,MAAzB,CAAgCgN,OAAhC,CAAwCyB,IAAxC,CAA6CnI,KAA7C,CAAP;AACD,OAhFI;AAkFL;AACA8G,MAAAA,MAAM,EAAE,UAAS9G,KAAT,EAAgB;AACtB,eAAOzI,OAAO,CAACE,OAAR,CAAgB6B,QAAhB,CAAyBI,MAAzB,CAAgCoN,MAAhC,CAAuCqB,IAAvC,CAA4CnI,KAA5C,CAAP;AACD,OArFI;AAuFL;AACArD,MAAAA,EAAE,EAAE,UAASqD,KAAT,EAAgBc,IAAhB,EAAsB;AACxBA,QAAAA,IAAI,GAAI,OAAOA,IAAP,IAAe,QAAhB,GACHA,IAAI,CAAC6H,WAAL,EADG,GAEH7H,IAFJ;AAIAd,QAAAA,KAAK,GAAI,OAAOA,KAAP,IAAgB,QAAjB,GACJA,KAAK,CAAC2I,WAAN,EADI,GAEJ3I,KAFJ;AAIA,eAAQA,KAAK,IAAIc,IAAjB;AACD,OAlGI;AAoGL;AACAmG,MAAAA,SAAS,EAAE,UAASjH,KAAT,EAAgBc,IAAhB,EAAsB;AAC/B,eAAQd,KAAK,IAAIc,IAAjB;AACD,OAvGI;AAyGL;AACAoG,MAAAA,GAAG,EAAE,UAASlH,KAAT,EAAgB4I,QAAhB,EAA0B;AAC7B5I,QAAAA,KAAK,GAAI,OAAOA,KAAP,IAAgB,QAAjB,GACJA,KAAK,CAAC2I,WAAN,EADI,GAEJ3I,KAFJ;AAIA4I,QAAAA,QAAQ,GAAI,OAAOA,QAAP,IAAmB,QAApB,GACPA,QAAQ,CAACD,WAAT,EADO,GAEPC,QAFJ;AAIA,eAAQ5I,KAAK,IAAI4I,QAAjB;AACD,OApHI;AAsHL;AACAzB,MAAAA,UAAU,EAAE,UAASnH,KAAT,EAAgB4I,QAAhB,EAA0B;AACpC,eAAQ5I,KAAK,IAAI4I,QAAjB;AACD,OAzHI;AA2HL;AACAC,MAAAA,QAAQ,EAAE,UAAS7I,KAAT,EAAgBc,IAAhB,EAAsB;AAC9B;AACAA,QAAAA,IAAI,GAAGA,IAAI,CAACZ,OAAL,CAAa3I,OAAO,CAACE,OAAR,CAAgB6B,QAAhB,CAAyBI,MAAzB,CAAgC0F,MAA7C,EAAqD,MAArD,CAAP;AACA,eAAQY,KAAK,CAACiB,MAAN,CAAc,IAAImH,MAAJ,CAAWtH,IAAX,EAAiB,GAAjB,CAAd,MAA0C,CAAC,CAAnD;AACD,OAhII;AAkIL;AACAgI,MAAAA,eAAe,EAAE,UAAS9I,KAAT,EAAgBc,IAAhB,EAAsB;AACrC;AACAA,QAAAA,IAAI,GAAGA,IAAI,CAACZ,OAAL,CAAa3I,OAAO,CAACE,OAAR,CAAgB6B,QAAhB,CAAyBI,MAAzB,CAAgC0F,MAA7C,EAAqD,MAArD,CAAP;AACA,eAAQY,KAAK,CAACiB,MAAN,CAAc,IAAImH,MAAJ,CAAWtH,IAAX,CAAd,MAAqC,CAAC,CAA9C;AACD,OAvII;AAyIL;AACAwG,MAAAA,aAAa,EAAE,UAAStH,KAAT,EAAgBc,IAAhB,EAAsB;AACnC;AACAA,QAAAA,IAAI,GAAGA,IAAI,CAACZ,OAAL,CAAa3I,OAAO,CAACE,OAAR,CAAgB6B,QAAhB,CAAyBI,MAAzB,CAAgC0F,MAA7C,EAAqD,MAArD,CAAP;AACA,eAAQY,KAAK,CAACiB,MAAN,CAAc,IAAImH,MAAJ,CAAWtH,IAAX,EAAiB,GAAjB,CAAd,MAA0C,CAAC,CAAnD;AACD,OA9II;AAgJL;AACAyG,MAAAA,oBAAoB,EAAE,UAASvH,KAAT,EAAgBc,IAAhB,EAAsB;AAC1C;AACAA,QAAAA,IAAI,GAAGA,IAAI,CAACZ,OAAL,CAAa3I,OAAO,CAACE,OAAR,CAAgB6B,QAAhB,CAAyBI,MAAzB,CAAgC0F,MAA7C,EAAqD,MAArD,CAAP;AACA,eAAQY,KAAK,CAACiB,MAAN,CAAc,IAAImH,MAAJ,CAAWtH,IAAX,CAAd,MAAqC,CAAC,CAA9C;AACD,OArJI;AAuJL;AACA0G,MAAAA,SAAS,EAAE,UAASxH,KAAT,EAAgB+I,cAAhB,EAAgC;AACzC,eAAQ/I,KAAK,KAAK7I,SAAX,GACF6I,KAAK,CAACzB,MAAN,IAAgBwK,cADd,GAEH,KAFJ;AAID,OA7JI;AA+JL;AACAxK,MAAAA,MAAM,EAAE,UAASyB,KAAT,EAAgB+I,cAAhB,EAAgC;AACtC,eAAQ/I,KAAK,KAAK7I,SAAX,GACF6I,KAAK,CAACzB,MAAN,IAAgBwK,cADd,GAEH,KAFJ;AAID,OArKI;AAuKL;AACAtB,MAAAA,WAAW,EAAE,UAASzH,KAAT,EAAgB+I,cAAhB,EAAgC;AAC3C,eAAQ/I,KAAK,KAAK7I,SAAX,GACF6I,KAAK,CAACzB,MAAN,IAAgBwK,cADd,GAEH,KAFJ;AAID,OA7KI;AA+KL;AACArB,MAAAA,SAAS,EAAE,UAAS1H,KAAT,EAAgB0H,SAAhB,EAA2B;AACpC,eAAQ1H,KAAK,KAAK7I,SAAX,GACF6I,KAAK,CAACzB,MAAN,IAAgBmJ,SADd,GAEH,KAFJ;AAID,OArLI;AAuLL;AACA/J,MAAAA,KAAK,EAAE,UAASqC,KAAT,EAAgBY,UAAhB,EAA4B;AACjC,YACEoI,KAAK,GAAGhS,CAAC,CAAC,IAAD,CADX;AAAA,YAEEiS,aAFF;;AAIA,YAAIjS,CAAC,CAAC,qBAAoB4J,UAApB,GAAgC,IAAjC,CAAD,CAAwCrC,MAAxC,GAAiD,CAArD,EAAyD;AACvD0K,UAAAA,aAAa,GAAGjS,CAAC,CAAC,qBAAoB4J,UAApB,GAAgC,IAAjC,CAAD,CAAwCxD,GAAxC,EAAhB;AACD,SAFD,MAGK,IAAGpG,CAAC,CAAC,MAAM4J,UAAP,CAAD,CAAoBrC,MAApB,GAA6B,CAAhC,EAAmC;AACtC0K,UAAAA,aAAa,GAAGjS,CAAC,CAAC,MAAM4J,UAAP,CAAD,CAAoBxD,GAApB,EAAhB;AACD,SAFI,MAGA,IAAGpG,CAAC,CAAC,YAAY4J,UAAZ,GAAwB,IAAzB,CAAD,CAAgCrC,MAAhC,GAAyC,CAA5C,EAA+C;AAClD0K,UAAAA,aAAa,GAAGjS,CAAC,CAAC,YAAY4J,UAAZ,GAAyB,IAA1B,CAAD,CAAiCxD,GAAjC,EAAhB;AACD,SAFI,MAGA,IAAIpG,CAAC,CAAC,YAAY4J,UAAZ,GAAwB,MAAzB,CAAD,CAAkCrC,MAAlC,GAA2C,CAA/C,EAAmD;AACtD0K,UAAAA,aAAa,GAAGjS,CAAC,CAAC,YAAY4J,UAAZ,GAAwB,MAAzB,CAAjB;AACD;;AACD,eAAQqI,aAAa,KAAK9R,SAAnB,GACD6I,KAAK,CAACkJ,QAAN,MAAoBD,aAAa,CAACC,QAAd,EADnB,GAEH,KAFJ;AAID,OA7MI;AA+ML;AACAvB,MAAAA,SAAS,EAAE,UAAS3H,KAAT,EAAgBY,UAAhB,EAA4B;AACrC;AACA,YACEoI,KAAK,GAAGhS,CAAC,CAAC,IAAD,CADX;AAAA,YAEEiS,aAFF;;AAIA,YAAIjS,CAAC,CAAC,qBAAoB4J,UAApB,GAAgC,IAAjC,CAAD,CAAwCrC,MAAxC,GAAiD,CAArD,EAAyD;AACvD0K,UAAAA,aAAa,GAAGjS,CAAC,CAAC,qBAAoB4J,UAApB,GAAgC,IAAjC,CAAD,CAAwCxD,GAAxC,EAAhB;AACD,SAFD,MAGK,IAAGpG,CAAC,CAAC,MAAM4J,UAAP,CAAD,CAAoBrC,MAApB,GAA6B,CAAhC,EAAmC;AACtC0K,UAAAA,aAAa,GAAGjS,CAAC,CAAC,MAAM4J,UAAP,CAAD,CAAoBxD,GAApB,EAAhB;AACD,SAFI,MAGA,IAAGpG,CAAC,CAAC,YAAY4J,UAAZ,GAAwB,IAAzB,CAAD,CAAgCrC,MAAhC,GAAyC,CAA5C,EAA+C;AAClD0K,UAAAA,aAAa,GAAGjS,CAAC,CAAC,YAAY4J,UAAZ,GAAyB,IAA1B,CAAD,CAAiCxD,GAAjC,EAAhB;AACD,SAFI,MAGA,IAAIpG,CAAC,CAAC,YAAY4J,UAAZ,GAAwB,MAAzB,CAAD,CAAkCrC,MAAlC,GAA2C,CAA/C,EAAmD;AACtD0K,UAAAA,aAAa,GAAGjS,CAAC,CAAC,YAAY4J,UAAZ,GAAwB,MAAzB,CAAjB;AACD;;AACD,eAAQqI,aAAa,KAAK9R,SAAnB,GACD6I,KAAK,CAACkJ,QAAN,OAAqBD,aAAa,CAACC,QAAd,EADpB,GAEH,KAFJ;AAID,OAtOI;AAwOLtB,MAAAA,UAAU,EAAE,UAASuB,UAAT,EAAqBC,SAArB,EAAgC;AAC1C,YACEC,KAAK,GAAG;AACNC,UAAAA,IAAI,EAAE;AACJC,YAAAA,OAAO,EAAG,IADN;AAEJhL,YAAAA,MAAM,EAAI,CAAC,EAAD;AAFN,WADA;AAKNiL,UAAAA,IAAI,EAAE;AACJD,YAAAA,OAAO,EAAG,QADN;AAEJhL,YAAAA,MAAM,EAAI,CAAC,EAAD;AAFN,WALA;AASNkL,UAAAA,UAAU,EAAE;AACVF,YAAAA,OAAO,EAAG,SADA;AAEVhL,YAAAA,MAAM,EAAI,CAAC,EAAD;AAFA,WATN;AAaNmL,UAAAA,QAAQ,EAAE;AACRH,YAAAA,OAAO,EAAG,+EADF;AAERhL,YAAAA,MAAM,EAAI,CAAC,EAAD;AAFF,WAbJ;AAiBNoL,UAAAA,QAAQ,EAAE;AACRJ,YAAAA,OAAO,EAAG,UADF;AAERhL,YAAAA,MAAM,EAAI,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb;AAFF,WAjBJ;AAqBNqL,UAAAA,GAAG,EAAE;AACHL,YAAAA,OAAO,EAAG,uBADP;AAEHhL,YAAAA,MAAM,EAAI,CAAC,EAAD;AAFP,WArBC;AAyBNsL,UAAAA,OAAO,EAAE;AACPN,YAAAA,OAAO,EAAG,sCADH;AAEPhL,YAAAA,MAAM,EAAI,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B;AAFH,WAzBH;AA6BNuL,UAAAA,UAAU,EAAE;AACVP,YAAAA,OAAO,EAAG,gBADA;AAEVhL,YAAAA,MAAM,EAAI,CAAC,EAAD;AAFA,WA7BN;AAiCNwL,UAAAA,KAAK,EAAE;AACLR,YAAAA,OAAO,EAAG,sBADL;AAELhL,YAAAA,MAAM,EAAI,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb;AAFL,WAjCD;AAqCNyL,UAAAA,YAAY,EAAE;AACZT,YAAAA,OAAO,EAAG,mCADE;AAEZhL,YAAAA,MAAM,EAAI,CAAC,EAAD;AAFE;AArCR,SADV;AAAA,YA2CEG,KAAK,GAAW,EA3ClB;AAAA,YA4CEuL,SAAS,GAAO,KA5ClB;AAAA,YA6CEC,aAAa,GAAI,OAAOd,SAAP,IAAoB,QAArB,GACZA,SAAS,CAAChD,KAAV,CAAgB,GAAhB,CADY,GAEZ,KA/CN;AAAA,YAgDEuD,QAhDF;AAAA,YAiDEpQ,UAjDF;;AAoDA,YAAG,OAAO4P,UAAP,KAAsB,QAAtB,IAAkCA,UAAU,CAAC5K,MAAX,KAAsB,CAA3D,EAA8D;AAC5D;AACD,SAvDyC,CAyD1C;;;AACA4K,QAAAA,UAAU,GAAGA,UAAU,CAACjJ,OAAX,CAAmB,OAAnB,EAA4B,EAA5B,CAAb,CA1D0C,CA4D1C;;AACA,YAAGgK,aAAH,EAAkB;AAChBlT,UAAAA,CAAC,CAAC0B,IAAF,CAAOwR,aAAP,EAAsB,UAASzJ,KAAT,EAAgBzE,IAAhB,EAAqB;AACzC;AACAzC,YAAAA,UAAU,GAAG8P,KAAK,CAACrN,IAAD,CAAlB;;AACA,gBAAGzC,UAAH,EAAe;AACbmF,cAAAA,KAAK,GAAG;AACNH,gBAAAA,MAAM,EAAKvH,CAAC,CAACmT,OAAF,CAAUhB,UAAU,CAAC5K,MAArB,EAA6BhF,UAAU,CAACgF,MAAxC,MAAoD,CAAC,CAD1D;AAENgL,gBAAAA,OAAO,EAAIJ,UAAU,CAAClI,MAAX,CAAkB1H,UAAU,CAACgQ,OAA7B,MAA0C,CAAC;AAFhD,eAAR;;AAIA,kBAAG7K,KAAK,CAACH,MAAN,IAAgBG,KAAK,CAAC6K,OAAzB,EAAkC;AAChCU,gBAAAA,SAAS,GAAG,IAAZ;AACD;AACF;AACF,WAZD;;AAcA,cAAG,CAACA,SAAJ,EAAe;AACb,mBAAO,KAAP;AACD;AACF,SA/EyC,CAiF1C;;;AACAN,QAAAA,QAAQ,GAAG;AACT7C,UAAAA,MAAM,EAAK9P,CAAC,CAACmT,OAAF,CAAUhB,UAAU,CAAC5K,MAArB,EAA6B8K,KAAK,CAACM,QAAN,CAAepL,MAA5C,MAAwD,CAAC,CAD3D;AAETgL,UAAAA,OAAO,EAAIJ,UAAU,CAAClI,MAAX,CAAkBoI,KAAK,CAACM,QAAN,CAAeJ,OAAjC,MAA8C,CAAC;AAFjD,SAAX;;AAIA,YAAGI,QAAQ,CAAC7C,MAAT,IAAmB6C,QAAQ,CAACJ,OAA/B,EAAwC;AACtC,iBAAO,IAAP;AACD,SAxFyC,CA0F1C;;;AACA,YACEhL,MAAM,GAAU4K,UAAU,CAAC5K,MAD7B;AAAA,YAEE6L,QAAQ,GAAQ,CAFlB;AAAA,YAGEC,aAAa,GAAG,CACd,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,CADc,EAEd,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,CAFc,CAHlB;AAAA,YAOEC,GAAG,GAAa,CAPlB;;AASA,eAAO/L,MAAM,EAAb,EAAiB;AACf+L,UAAAA,GAAG,IAAID,aAAa,CAACD,QAAD,CAAb,CAAwBG,QAAQ,CAACpB,UAAU,CAAC5C,MAAX,CAAkBhI,MAAlB,CAAD,EAA4B,EAA5B,CAAhC,CAAP;AACA6L,UAAAA,QAAQ,IAAI,CAAZ;AACD;;AACD,eAAQE,GAAG,GAAG,EAAN,KAAa,CAAb,IAAkBA,GAAG,GAAG,CAAhC;AACD,OAjVI;AAmVLzC,MAAAA,QAAQ,EAAE,UAAS7H,KAAT,EAAgB6H,QAAhB,EAA0B;AAClC,YAAGA,QAAQ,IAAI,CAAf,EAAkB;AAChB,iBAAO,IAAP;AACD;;AACD,YAAGA,QAAQ,IAAI,CAAf,EAAkB;AAChB,iBAAQ7H,KAAK,KAAK,EAAlB;AACD;;AACD,eAAQA,KAAK,CAACoG,KAAN,CAAY,GAAZ,EAAiB7H,MAAjB,IAA2BsJ,QAAnC;AACD,OA3VI;AA6VLC,MAAAA,UAAU,EAAE,UAAS9H,KAAT,EAAgB8H,UAAhB,EAA4B;AACtC,YAAGA,UAAU,IAAI,CAAjB,EAAoB;AAClB,iBAAQ9H,KAAK,KAAK,EAAlB;AACD;;AACD,YAAG8H,UAAU,IAAI,CAAjB,EAAoB;AAClB,iBAAQ9H,KAAK,KAAK,EAAV,IAAgBA,KAAK,CAACiB,MAAN,CAAa,GAAb,MAAsB,CAAC,CAA/C;AACD;;AACD,eAAQjB,KAAK,CAACoG,KAAN,CAAY,GAAZ,EAAiB7H,MAAjB,IAA2BuJ,UAAnC;AACD,OArWI;AAuWLC,MAAAA,QAAQ,EAAE,UAAS/H,KAAT,EAAgB+H,QAAhB,EAA0B;AAClC,YAAGA,QAAQ,IAAI,CAAf,EAAkB;AAChB,iBAAO,KAAP;AACD;;AACD,YAAGA,QAAQ,IAAI,CAAf,EAAkB;AAChB,iBAAQ/H,KAAK,CAACiB,MAAN,CAAa,GAAb,MAAsB,CAAC,CAA/B;AACD;;AACD,eAAQjB,KAAK,CAACoG,KAAN,CAAY,GAAZ,EAAiB7H,MAAjB,IAA2BwJ,QAAnC;AACD;AA/WI;AAjIkB,GAA3B;AAqfC,CAhqDA,EAgqDGyC,OAAO,CAAC,QAAD,CAhqDV,EAgqDsBvT,MAhqDtB,EAgqD8BC,QAhqD9B","sourcesContent":["/*!\n * # Semantic UI 2.4.0 - Form Validation\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n'use strict';\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\nvar _module = module;\nmodule.exports = function(parameters) {\n  var\n    $allModules      = $(this),\n    moduleSelector   = $allModules.selector || '',\n\n    time             = new Date().getTime(),\n    performance      = [],\n\n    query            = arguments[0],\n    legacyParameters = arguments[1],\n    methodInvoked    = (typeof query == 'string'),\n    queryArguments   = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n  $allModules\n    .each(function() {\n      var\n        $module     = $(this),\n        element     = this,\n\n        formErrors  = [],\n        keyHeldDown = false,\n\n        // set at run-time\n        $field,\n        $group,\n        $message,\n        $prompt,\n        $submit,\n        $clear,\n        $reset,\n\n        settings,\n        validation,\n\n        metadata,\n        selector,\n        className,\n        regExp,\n        error,\n\n        namespace,\n        moduleNamespace,\n        eventNamespace,\n\n        instance,\n        module\n      ;\n\n      module      = {\n\n        initialize: function() {\n\n          // settings grabbed at run time\n          module.get.settings();\n          if(methodInvoked) {\n            if(instance === undefined) {\n              module.instantiate();\n            }\n            module.invoke(query);\n          }\n          else {\n            if(instance !== undefined) {\n              instance.invoke('destroy');\n            }\n            module.verbose('Initializing form validation', $module, settings);\n            module.bindEvents();\n            module.set.defaults();\n            module.instantiate();\n          }\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module', instance);\n          module.removeEvents();\n          $module\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        refresh: function() {\n          module.verbose('Refreshing selector cache');\n          $field      = $module.find(selector.field);\n          $group      = $module.find(selector.group);\n          $message    = $module.find(selector.message);\n          $prompt     = $module.find(selector.prompt);\n\n          $submit     = $module.find(selector.submit);\n          $clear      = $module.find(selector.clear);\n          $reset      = $module.find(selector.reset);\n        },\n\n        submit: function() {\n          module.verbose('Submitting form', $module);\n          $module\n            .submit()\n          ;\n        },\n\n        attachEvents: function(selector, action) {\n          action = action || 'submit';\n          $(selector)\n            .on('click' + eventNamespace, function(event) {\n              module[action]();\n              event.preventDefault();\n            })\n          ;\n        },\n\n        bindEvents: function() {\n          module.verbose('Attaching form events');\n          $module\n            .on('submit' + eventNamespace, module.validate.form)\n            .on('blur'   + eventNamespace, selector.field, module.event.field.blur)\n            .on('click'  + eventNamespace, selector.submit, module.submit)\n            .on('click'  + eventNamespace, selector.reset, module.reset)\n            .on('click'  + eventNamespace, selector.clear, module.clear)\n          ;\n          if(settings.keyboardShortcuts) {\n            $module\n              .on('keydown' + eventNamespace, selector.field, module.event.field.keydown)\n            ;\n          }\n          $field\n            .each(function() {\n              var\n                $input     = $(this),\n                type       = $input.prop('type'),\n                inputEvent = module.get.changeEvent(type, $input)\n              ;\n              $(this)\n                .on(inputEvent + eventNamespace, module.event.field.change)\n              ;\n            })\n          ;\n        },\n\n        clear: function() {\n          $field\n            .each(function () {\n              var\n                $field       = $(this),\n                $element     = $field.parent(),\n                $fieldGroup  = $field.closest($group),\n                $prompt      = $fieldGroup.find(selector.prompt),\n                defaultValue = $field.data(metadata.defaultValue) || '',\n                isCheckbox   = $element.is(selector.uiCheckbox),\n                isDropdown   = $element.is(selector.uiDropdown),\n                isErrored    = $fieldGroup.hasClass(className.error)\n              ;\n              if(isErrored) {\n                module.verbose('Resetting error on field', $fieldGroup);\n                $fieldGroup.removeClass(className.error);\n                $prompt.remove();\n              }\n              if(isDropdown) {\n                module.verbose('Resetting dropdown value', $element, defaultValue);\n                $element.dropdown('clear');\n              }\n              else if(isCheckbox) {\n                $field.prop('checked', false);\n              }\n              else {\n                module.verbose('Resetting field value', $field, defaultValue);\n                $field.val('');\n              }\n            })\n          ;\n        },\n\n        reset: function() {\n          $field\n            .each(function () {\n              var\n                $field       = $(this),\n                $element     = $field.parent(),\n                $fieldGroup  = $field.closest($group),\n                $prompt      = $fieldGroup.find(selector.prompt),\n                defaultValue = $field.data(metadata.defaultValue),\n                isCheckbox   = $element.is(selector.uiCheckbox),\n                isDropdown   = $element.is(selector.uiDropdown),\n                isErrored    = $fieldGroup.hasClass(className.error)\n              ;\n              if(defaultValue === undefined) {\n                return;\n              }\n              if(isErrored) {\n                module.verbose('Resetting error on field', $fieldGroup);\n                $fieldGroup.removeClass(className.error);\n                $prompt.remove();\n              }\n              if(isDropdown) {\n                module.verbose('Resetting dropdown value', $element, defaultValue);\n                $element.dropdown('restore defaults');\n              }\n              else if(isCheckbox) {\n                module.verbose('Resetting checkbox value', $element, defaultValue);\n                $field.prop('checked', defaultValue);\n              }\n              else {\n                module.verbose('Resetting field value', $field, defaultValue);\n                $field.val(defaultValue);\n              }\n            })\n          ;\n        },\n\n        determine: {\n          isValid: function() {\n            var\n              allValid = true\n            ;\n            $.each(validation, function(fieldName, field) {\n              if( !( module.validate.field(field, fieldName, true) ) ) {\n                allValid = false;\n              }\n            });\n            return allValid;\n          }\n        },\n\n        is: {\n          bracketedRule: function(rule) {\n            return (rule.type && rule.type.match(settings.regExp.bracket));\n          },\n          shorthandFields: function(fields) {\n            var\n              fieldKeys = Object.keys(fields),\n              firstRule = fields[fieldKeys[0]]\n            ;\n            return module.is.shorthandRules(firstRule);\n          },\n          // duck type rule test\n          shorthandRules: function(rules) {\n            return (typeof rules == 'string' || $.isArray(rules));\n          },\n          empty: function($field) {\n            if(!$field || $field.length === 0) {\n              return true;\n            }\n            else if($field.is('input[type=\"checkbox\"]')) {\n              return !$field.is(':checked');\n            }\n            else {\n              return module.is.blank($field);\n            }\n          },\n          blank: function($field) {\n            return $.trim($field.val()) === '';\n          },\n          valid: function(field) {\n            var\n              allValid = true\n            ;\n            if(field) {\n              module.verbose('Checking if field is valid', field);\n              return module.validate.field(validation[field], field, false);\n            }\n            else {\n              module.verbose('Checking if form is valid');\n              $.each(validation, function(fieldName, field) {\n                if( !module.is.valid(fieldName) ) {\n                  allValid = false;\n                }\n              });\n              return allValid;\n            }\n          }\n        },\n\n        removeEvents: function() {\n          $module\n            .off(eventNamespace)\n          ;\n          $field\n            .off(eventNamespace)\n          ;\n          $submit\n            .off(eventNamespace)\n          ;\n          $field\n            .off(eventNamespace)\n          ;\n        },\n\n        event: {\n          field: {\n            keydown: function(event) {\n              var\n                $field       = $(this),\n                key          = event.which,\n                isInput      = $field.is(selector.input),\n                isCheckbox   = $field.is(selector.checkbox),\n                isInDropdown = ($field.closest(selector.uiDropdown).length > 0),\n                keyCode      = {\n                  enter  : 13,\n                  escape : 27\n                }\n              ;\n              if( key == keyCode.escape) {\n                module.verbose('Escape key pressed blurring field');\n                $field\n                  .blur()\n                ;\n              }\n              if(!event.ctrlKey && key == keyCode.enter && isInput && !isInDropdown && !isCheckbox) {\n                if(!keyHeldDown) {\n                  $field\n                    .one('keyup' + eventNamespace, module.event.field.keyup)\n                  ;\n                  module.submit();\n                  module.debug('Enter pressed on input submitting form');\n                }\n                keyHeldDown = true;\n              }\n            },\n            keyup: function() {\n              keyHeldDown = false;\n            },\n            blur: function(event) {\n              var\n                $field          = $(this),\n                $fieldGroup     = $field.closest($group),\n                validationRules = module.get.validation($field)\n              ;\n              if( $fieldGroup.hasClass(className.error) ) {\n                module.debug('Revalidating field', $field, validationRules);\n                if(validationRules) {\n                  module.validate.field( validationRules );\n                }\n              }\n              else if(settings.on == 'blur') {\n                if(validationRules) {\n                  module.validate.field( validationRules );\n                }\n              }\n            },\n            change: function(event) {\n              var\n                $field      = $(this),\n                $fieldGroup = $field.closest($group),\n                validationRules = module.get.validation($field)\n              ;\n              if(validationRules && (settings.on == 'change' || ( $fieldGroup.hasClass(className.error) && settings.revalidate) )) {\n                clearTimeout(module.timer);\n                module.timer = setTimeout(function() {\n                  module.debug('Revalidating field', $field,  module.get.validation($field));\n                  module.validate.field( validationRules );\n                }, settings.delay);\n              }\n            }\n          }\n\n        },\n\n        get: {\n          ancillaryValue: function(rule) {\n            if(!rule.type || (!rule.value && !module.is.bracketedRule(rule))) {\n              return false;\n            }\n            return (rule.value !== undefined)\n              ? rule.value\n              : rule.type.match(settings.regExp.bracket)[1] + ''\n            ;\n          },\n          ruleName: function(rule) {\n            if( module.is.bracketedRule(rule) ) {\n              return rule.type.replace(rule.type.match(settings.regExp.bracket)[0], '');\n            }\n            return rule.type;\n          },\n          changeEvent: function(type, $input) {\n            if(type == 'checkbox' || type == 'radio' || type == 'hidden' || $input.is('select')) {\n              return 'change';\n            }\n            else {\n              return module.get.inputEvent();\n            }\n          },\n          inputEvent: function() {\n            return (document.createElement('input').oninput !== undefined)\n              ? 'input'\n              : (document.createElement('input').onpropertychange !== undefined)\n                ? 'propertychange'\n                : 'keyup'\n            ;\n          },\n          fieldsFromShorthand: function(fields) {\n            var\n              fullFields = {}\n            ;\n            $.each(fields, function(name, rules) {\n              if(typeof rules == 'string') {\n                rules = [rules];\n              }\n              fullFields[name] = {\n                rules: []\n              };\n              $.each(rules, function(index, rule) {\n                fullFields[name].rules.push({ type: rule });\n              });\n            });\n            return fullFields;\n          },\n          prompt: function(rule, field) {\n            var\n              ruleName      = module.get.ruleName(rule),\n              ancillary     = module.get.ancillaryValue(rule),\n              $field        = module.get.field(field.identifier),\n              value         = $field.val(),\n              prompt        = $.isFunction(rule.prompt)\n                ? rule.prompt(value)\n                : rule.prompt || settings.prompt[ruleName] || settings.text.unspecifiedRule,\n              requiresValue = (prompt.search('{value}') !== -1),\n              requiresName  = (prompt.search('{name}') !== -1),\n              $label,\n              name\n            ;\n            if(requiresValue) {\n              prompt = prompt.replace('{value}', $field.val());\n            }\n            if(requiresName) {\n              $label = $field.closest(selector.group).find('label').eq(0);\n              name = ($label.length == 1)\n                ? $label.text()\n                : $field.prop('placeholder') || settings.text.unspecifiedField\n              ;\n              prompt = prompt.replace('{name}', name);\n            }\n            prompt = prompt.replace('{identifier}', field.identifier);\n            prompt = prompt.replace('{ruleValue}', ancillary);\n            if(!rule.prompt) {\n              module.verbose('Using default validation prompt for type', prompt, ruleName);\n            }\n            return prompt;\n          },\n          settings: function() {\n            if($.isPlainObject(parameters)) {\n              var\n                keys     = Object.keys(parameters),\n                isLegacySettings = (keys.length > 0)\n                  ? (parameters[keys[0]].identifier !== undefined && parameters[keys[0]].rules !== undefined)\n                  : false,\n                ruleKeys\n              ;\n              if(isLegacySettings) {\n                // 1.x (ducktyped)\n                settings   = $.extend(true, {}, _module.exports.settings, legacyParameters);\n                validation = $.extend({}, _module.exports.settings.defaults, parameters);\n                module.error(settings.error.oldSyntax, element);\n                module.verbose('Extending settings from legacy parameters', validation, settings);\n              }\n              else {\n                // 2.x\n                if(parameters.fields && module.is.shorthandFields(parameters.fields)) {\n                  parameters.fields = module.get.fieldsFromShorthand(parameters.fields);\n                }\n                settings   = $.extend(true, {}, _module.exports.settings, parameters);\n                validation = $.extend({}, _module.exports.settings.defaults, settings.fields);\n                module.verbose('Extending settings', validation, settings);\n              }\n            }\n            else {\n              settings   = _module.exports.settings;\n              validation = _module.exports.settings.defaults;\n              module.verbose('Using default form validation', validation, settings);\n            }\n\n            // shorthand\n            namespace       = settings.namespace;\n            metadata        = settings.metadata;\n            selector        = settings.selector;\n            className       = settings.className;\n            regExp          = settings.regExp;\n            error           = settings.error;\n            moduleNamespace = 'module-' + namespace;\n            eventNamespace  = '.' + namespace;\n\n            // grab instance\n            instance = $module.data(moduleNamespace);\n\n            // refresh selector cache\n            module.refresh();\n          },\n          field: function(identifier) {\n            module.verbose('Finding field with identifier', identifier);\n            identifier = module.escape.string(identifier);\n            if($field.filter('#' + identifier).length > 0 ) {\n              return $field.filter('#' + identifier);\n            }\n            else if( $field.filter('[name=\"' + identifier +'\"]').length > 0 ) {\n              return $field.filter('[name=\"' + identifier +'\"]');\n            }\n            else if( $field.filter('[name=\"' + identifier +'[]\"]').length > 0 ) {\n              return $field.filter('[name=\"' + identifier +'[]\"]');\n            }\n            else if( $field.filter('[data-' + metadata.validate + '=\"'+ identifier +'\"]').length > 0 ) {\n              return $field.filter('[data-' + metadata.validate + '=\"'+ identifier +'\"]');\n            }\n            return $('<input/>');\n          },\n          fields: function(fields) {\n            var\n              $fields = $()\n            ;\n            $.each(fields, function(index, name) {\n              $fields = $fields.add( module.get.field(name) );\n            });\n            return $fields;\n          },\n          validation: function($field) {\n            var\n              fieldValidation,\n              identifier\n            ;\n            if(!validation) {\n              return false;\n            }\n            $.each(validation, function(fieldName, field) {\n              identifier = field.identifier || fieldName;\n              if( module.get.field(identifier)[0] == $field[0] ) {\n                field.identifier = identifier;\n                fieldValidation = field;\n              }\n            });\n            return fieldValidation || false;\n          },\n          value: function (field) {\n            var\n              fields = [],\n              results\n            ;\n            fields.push(field);\n            results = module.get.values.call(element, fields);\n            return results[field];\n          },\n          values: function (fields) {\n            var\n              $fields = $.isArray(fields)\n                ? module.get.fields(fields)\n                : $field,\n              values = {}\n            ;\n            $fields.each(function(index, field) {\n              var\n                $field     = $(field),\n                type       = $field.prop('type'),\n                name       = $field.prop('name'),\n                value      = $field.val(),\n                isCheckbox = $field.is(selector.checkbox),\n                isRadio    = $field.is(selector.radio),\n                isMultiple = (name.indexOf('[]') !== -1),\n                isChecked  = (isCheckbox)\n                  ? $field.is(':checked')\n                  : false\n              ;\n              if(name) {\n                if(isMultiple) {\n                  name = name.replace('[]', '');\n                  if(!values[name]) {\n                    values[name] = [];\n                  }\n                  if(isCheckbox) {\n                    if(isChecked) {\n                      values[name].push(value || true);\n                    }\n                    else {\n                      values[name].push(false);\n                    }\n                  }\n                  else {\n                    values[name].push(value);\n                  }\n                }\n                else {\n                  if(isRadio) {\n                    if(values[name] === undefined || values[name] == false) {\n                      values[name] = (isChecked)\n                        ? value || true\n                        : false\n                      ;\n                    }\n                  }\n                  else if(isCheckbox) {\n                    if(isChecked) {\n                      values[name] = value || true;\n                    }\n                    else {\n                      values[name] = false;\n                    }\n                  }\n                  else {\n                    values[name] = value;\n                  }\n                }\n              }\n            });\n            return values;\n          }\n        },\n\n        has: {\n\n          field: function(identifier) {\n            module.verbose('Checking for existence of a field with identifier', identifier);\n            identifier = module.escape.string(identifier);\n            if(typeof identifier !== 'string') {\n              module.error(error.identifier, identifier);\n            }\n            if($field.filter('#' + identifier).length > 0 ) {\n              return true;\n            }\n            else if( $field.filter('[name=\"' + identifier +'\"]').length > 0 ) {\n              return true;\n            }\n            else if( $field.filter('[data-' + metadata.validate + '=\"'+ identifier +'\"]').length > 0 ) {\n              return true;\n            }\n            return false;\n          }\n\n        },\n\n        escape: {\n          string: function(text) {\n            text =  String(text);\n            return text.replace(regExp.escape, '\\\\$&');\n          }\n        },\n\n        add: {\n          // alias\n          rule: function(name, rules) {\n            module.add.field(name, rules);\n          },\n          field: function(name, rules) {\n            var\n              newValidation = {}\n            ;\n            if(module.is.shorthandRules(rules)) {\n              rules = $.isArray(rules)\n                ? rules\n                : [rules]\n              ;\n              newValidation[name] = {\n                rules: []\n              };\n              $.each(rules, function(index, rule) {\n                newValidation[name].rules.push({ type: rule });\n              });\n            }\n            else {\n              newValidation[name] = rules;\n            }\n            validation = $.extend({}, validation, newValidation);\n            module.debug('Adding rules', newValidation, validation);\n          },\n          fields: function(fields) {\n            var\n              newValidation\n            ;\n            if(fields && module.is.shorthandFields(fields)) {\n              newValidation = module.get.fieldsFromShorthand(fields);\n            }\n            else {\n              newValidation = fields;\n            }\n            validation = $.extend({}, validation, newValidation);\n          },\n          prompt: function(identifier, errors) {\n            var\n              $field       = module.get.field(identifier),\n              $fieldGroup  = $field.closest($group),\n              $prompt      = $fieldGroup.children(selector.prompt),\n              promptExists = ($prompt.length !== 0)\n            ;\n            errors = (typeof errors == 'string')\n              ? [errors]\n              : errors\n            ;\n            module.verbose('Adding field error state', identifier);\n            $fieldGroup\n              .addClass(className.error)\n            ;\n            if(settings.inline) {\n              if(!promptExists) {\n                $prompt = settings.templates.prompt(errors);\n                $prompt\n                  .appendTo($fieldGroup)\n                ;\n              }\n              $prompt\n                .html(errors[0])\n              ;\n              if(!promptExists) {\n                if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n                  module.verbose('Displaying error with css transition', settings.transition);\n                  $prompt.transition(settings.transition + ' in', settings.duration);\n                }\n                else {\n                  module.verbose('Displaying error with fallback javascript animation');\n                  $prompt\n                    .fadeIn(settings.duration)\n                  ;\n                }\n              }\n              else {\n                module.verbose('Inline errors are disabled, no inline error added', identifier);\n              }\n            }\n          },\n          errors: function(errors) {\n            module.debug('Adding form error messages', errors);\n            module.set.error();\n            $message\n              .html( settings.templates.error(errors) )\n            ;\n          }\n        },\n\n        remove: {\n          rule: function(field, rule) {\n            var\n              rules = $.isArray(rule)\n                ? rule\n                : [rule]\n            ;\n            if(rule == undefined) {\n              module.debug('Removed all rules');\n              validation[field].rules = [];\n              return;\n            }\n            if(validation[field] == undefined || !$.isArray(validation[field].rules)) {\n              return;\n            }\n            $.each(validation[field].rules, function(index, rule) {\n              if(rules.indexOf(rule.type) !== -1) {\n                module.debug('Removed rule', rule.type);\n                validation[field].rules.splice(index, 1);\n              }\n            });\n          },\n          field: function(field) {\n            var\n              fields = $.isArray(field)\n                ? field\n                : [field]\n            ;\n            $.each(fields, function(index, field) {\n              module.remove.rule(field);\n            });\n          },\n          // alias\n          rules: function(field, rules) {\n            if($.isArray(field)) {\n              $.each(fields, function(index, field) {\n                module.remove.rule(field, rules);\n              });\n            }\n            else {\n              module.remove.rule(field, rules);\n            }\n          },\n          fields: function(fields) {\n            module.remove.field(fields);\n          },\n          prompt: function(identifier) {\n            var\n              $field      = module.get.field(identifier),\n              $fieldGroup = $field.closest($group),\n              $prompt     = $fieldGroup.children(selector.prompt)\n            ;\n            $fieldGroup\n              .removeClass(className.error)\n            ;\n            if(settings.inline && $prompt.is(':visible')) {\n              module.verbose('Removing prompt for field', identifier);\n              if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n                $prompt.transition(settings.transition + ' out', settings.duration, function() {\n                  $prompt.remove();\n                });\n              }\n              else {\n                $prompt\n                  .fadeOut(settings.duration, function(){\n                    $prompt.remove();\n                  })\n                ;\n              }\n            }\n          }\n        },\n\n        set: {\n          success: function() {\n            $module\n              .removeClass(className.error)\n              .addClass(className.success)\n            ;\n          },\n          defaults: function () {\n            $field\n              .each(function () {\n                var\n                  $field     = $(this),\n                  isCheckbox = ($field.filter(selector.checkbox).length > 0),\n                  value      = (isCheckbox)\n                    ? $field.is(':checked')\n                    : $field.val()\n                ;\n                $field.data(metadata.defaultValue, value);\n              })\n            ;\n          },\n          error: function() {\n            $module\n              .removeClass(className.success)\n              .addClass(className.error)\n            ;\n          },\n          value: function (field, value) {\n            var\n              fields = {}\n            ;\n            fields[field] = value;\n            return module.set.values.call(element, fields);\n          },\n          values: function (fields) {\n            if($.isEmptyObject(fields)) {\n              return;\n            }\n            $.each(fields, function(key, value) {\n              var\n                $field      = module.get.field(key),\n                $element    = $field.parent(),\n                isMultiple  = $.isArray(value),\n                isCheckbox  = $element.is(selector.uiCheckbox),\n                isDropdown  = $element.is(selector.uiDropdown),\n                isRadio     = ($field.is(selector.radio) && isCheckbox),\n                fieldExists = ($field.length > 0),\n                $multipleField\n              ;\n              if(fieldExists) {\n                if(isMultiple && isCheckbox) {\n                  module.verbose('Selecting multiple', value, $field);\n                  $element.checkbox('uncheck');\n                  $.each(value, function(index, value) {\n                    $multipleField = $field.filter('[value=\"' + value + '\"]');\n                    $element       = $multipleField.parent();\n                    if($multipleField.length > 0) {\n                      $element.checkbox('check');\n                    }\n                  });\n                }\n                else if(isRadio) {\n                  module.verbose('Selecting radio value', value, $field);\n                  $field.filter('[value=\"' + value + '\"]')\n                    .parent(selector.uiCheckbox)\n                      .checkbox('check')\n                  ;\n                }\n                else if(isCheckbox) {\n                  module.verbose('Setting checkbox value', value, $element);\n                  if(value === true) {\n                    $element.checkbox('check');\n                  }\n                  else {\n                    $element.checkbox('uncheck');\n                  }\n                }\n                else if(isDropdown) {\n                  module.verbose('Setting dropdown value', value, $element);\n                  $element.dropdown('set selected', value);\n                }\n                else {\n                  module.verbose('Setting field value', value, $field);\n                  $field.val(value);\n                }\n              }\n            });\n          }\n        },\n\n        validate: {\n\n          form: function(event, ignoreCallbacks) {\n            var\n              values = module.get.values(),\n              apiRequest\n            ;\n\n            // input keydown event will fire submit repeatedly by browser default\n            if(keyHeldDown) {\n              return false;\n            }\n\n            // reset errors\n            formErrors = [];\n            if( module.determine.isValid() ) {\n              module.debug('Form has no validation errors, submitting');\n              module.set.success();\n              if(ignoreCallbacks !== true) {\n                return settings.onSuccess.call(element, event, values);\n              }\n            }\n            else {\n              module.debug('Form has errors');\n              module.set.error();\n              if(!settings.inline) {\n                module.add.errors(formErrors);\n              }\n              // prevent ajax submit\n              if($module.data('moduleApi') !== undefined) {\n                event.stopImmediatePropagation();\n              }\n              if(ignoreCallbacks !== true) {\n                return settings.onFailure.call(element, formErrors, values);\n              }\n            }\n          },\n\n          // takes a validation object and returns whether field passes validation\n          field: function(field, fieldName, showErrors) {\n            showErrors = (showErrors !== undefined)\n              ? showErrors\n              : true\n            ;\n            if(typeof field == 'string') {\n              module.verbose('Validating field', field);\n              fieldName = field;\n              field     = validation[field];\n            }\n            var\n              identifier    = field.identifier || fieldName,\n              $field        = module.get.field(identifier),\n              $dependsField = (field.depends)\n                ? module.get.field(field.depends)\n                : false,\n              fieldValid  = true,\n              fieldErrors = []\n            ;\n            if(!field.identifier) {\n              module.debug('Using field name as identifier', identifier);\n              field.identifier = identifier;\n            }\n            if($field.prop('disabled')) {\n              module.debug('Field is disabled. Skipping', identifier);\n              fieldValid = true;\n            }\n            else if(field.optional && module.is.blank($field)){\n              module.debug('Field is optional and blank. Skipping', identifier);\n              fieldValid = true;\n            }\n            else if(field.depends && module.is.empty($dependsField)) {\n              module.debug('Field depends on another value that is not present or empty. Skipping', $dependsField);\n              fieldValid = true;\n            }\n            else if(field.rules !== undefined) {\n              $.each(field.rules, function(index, rule) {\n                if( module.has.field(identifier) && !( module.validate.rule(field, rule) ) ) {\n                  module.debug('Field is invalid', identifier, rule.type);\n                  fieldErrors.push(module.get.prompt(rule, field));\n                  fieldValid = false;\n                }\n              });\n            }\n            if(fieldValid) {\n              if(showErrors) {\n                module.remove.prompt(identifier, fieldErrors);\n                settings.onValid.call($field);\n              }\n            }\n            else {\n              if(showErrors) {\n                formErrors = formErrors.concat(fieldErrors);\n                module.add.prompt(identifier, fieldErrors);\n                settings.onInvalid.call($field, fieldErrors);\n              }\n              return false;\n            }\n            return true;\n          },\n\n          // takes validation rule and returns whether field passes rule\n          rule: function(field, rule) {\n            var\n              $field       = module.get.field(field.identifier),\n              type         = rule.type,\n              value        = $field.val(),\n              isValid      = true,\n              ancillary    = module.get.ancillaryValue(rule),\n              ruleName     = module.get.ruleName(rule),\n              ruleFunction = settings.rules[ruleName]\n            ;\n            if( !$.isFunction(ruleFunction) ) {\n              module.error(error.noRule, ruleName);\n              return;\n            }\n            // cast to string avoiding encoding special values\n            value = (value === undefined || value === '' || value === null)\n              ? ''\n              : $.trim(value + '')\n            ;\n            return ruleFunction.call($field, value, ancillary);\n          }\n        },\n\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      module.initialize();\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n_module.exports.settings = {\n\n  name              : 'Form',\n  namespace         : 'form',\n\n  debug             : false,\n  verbose           : false,\n  performance       : true,\n\n  fields            : false,\n\n  keyboardShortcuts : true,\n  on                : 'submit',\n  inline            : false,\n\n  delay             : 200,\n  revalidate        : true,\n\n  transition        : 'scale',\n  duration          : 200,\n\n  onValid           : function() {},\n  onInvalid         : function() {},\n  onSuccess         : function() { return true; },\n  onFailure         : function() { return false; },\n\n  metadata : {\n    defaultValue : 'default',\n    validate     : 'validate'\n  },\n\n  regExp: {\n    htmlID  : /^[a-zA-Z][\\w:.-]*$/g,\n    bracket : /\\[(.*)\\]/i,\n    decimal : /^\\d+\\.?\\d*$/,\n    email   : /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i,\n    escape  : /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\n    flags   : /^\\/(.*)\\/(.*)?/,\n    integer : /^\\-?\\d+$/,\n    number  : /^\\-?\\d*(\\.\\d+)?$/,\n    url     : /(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})/i\n  },\n\n  text: {\n    unspecifiedRule  : 'Please enter a valid value',\n    unspecifiedField : 'This field'\n  },\n\n  prompt: {\n    empty                : '{name} must have a value',\n    checked              : '{name} must be checked',\n    email                : '{name} must be a valid e-mail',\n    url                  : '{name} must be a valid url',\n    regExp               : '{name} is not formatted correctly',\n    integer              : '{name} must be an integer',\n    decimal              : '{name} must be a decimal number',\n    number               : '{name} must be set to a number',\n    is                   : '{name} must be \"{ruleValue}\"',\n    isExactly            : '{name} must be exactly \"{ruleValue}\"',\n    not                  : '{name} cannot be set to \"{ruleValue}\"',\n    notExactly           : '{name} cannot be set to exactly \"{ruleValue}\"',\n    contain              : '{name} must contain \"{ruleValue}\"',\n    containExactly       : '{name} must contain exactly \"{ruleValue}\"',\n    doesntContain        : '{name} cannot contain  \"{ruleValue}\"',\n    doesntContainExactly : '{name} cannot contain exactly \"{ruleValue}\"',\n    minLength            : '{name} must be at least {ruleValue} characters',\n    length               : '{name} must be at least {ruleValue} characters',\n    exactLength          : '{name} must be exactly {ruleValue} characters',\n    maxLength            : '{name} cannot be longer than {ruleValue} characters',\n    match                : '{name} must match {ruleValue} field',\n    different            : '{name} must have a different value than {ruleValue} field',\n    creditCard           : '{name} must be a valid credit card number',\n    minCount             : '{name} must have at least {ruleValue} choices',\n    exactCount           : '{name} must have exactly {ruleValue} choices',\n    maxCount             : '{name} must have {ruleValue} or less choices'\n  },\n\n  selector : {\n    checkbox   : 'input[type=\"checkbox\"], input[type=\"radio\"]',\n    clear      : '.clear',\n    field      : 'input, textarea, select',\n    group      : '.field',\n    input      : 'input',\n    message    : '.error.message',\n    prompt     : '.prompt.label',\n    radio      : 'input[type=\"radio\"]',\n    reset      : '.reset:not([type=\"reset\"])',\n    submit     : '.submit:not([type=\"submit\"])',\n    uiCheckbox : '.ui.checkbox',\n    uiDropdown : '.ui.dropdown'\n  },\n\n  className : {\n    error   : 'error',\n    label   : 'ui prompt label',\n    pressed : 'down',\n    success : 'success'\n  },\n\n  error: {\n    identifier : 'You must specify a string identifier for each field',\n    method     : 'The method you called is not defined.',\n    noRule     : 'There is no rule matching the one you specified',\n    oldSyntax  : 'Starting in 2.0 forms now only take a single settings object. Validation settings converted to new syntax automatically.'\n  },\n\n  templates: {\n\n    // template that produces error message\n    error: function(errors) {\n      var\n        html = '<ul class=\"list\">'\n      ;\n      $.each(errors, function(index, value) {\n        html += '<li>' + value + '</li>';\n      });\n      html += '</ul>';\n      return $(html);\n    },\n\n    // template that produces label\n    prompt: function(errors) {\n      return $('<div/>')\n        .addClass('ui basic red pointing prompt label')\n        .html(errors[0])\n      ;\n    }\n  },\n\n  rules: {\n\n    // is not empty or blank string\n    empty: function(value) {\n      return !(value === undefined || '' === value || $.isArray(value) && value.length === 0);\n    },\n\n    // checkbox checked\n    checked: function() {\n      return ($(this).filter(':checked').length > 0);\n    },\n\n    // is most likely an email\n    email: function(value){\n      return _module.exports.settings.regExp.email.test(value);\n    },\n\n    // value is most likely url\n    url: function(value) {\n      return _module.exports.settings.regExp.url.test(value);\n    },\n\n    // matches specified regExp\n    regExp: function(value, regExp) {\n      if(regExp instanceof RegExp) {\n        return value.match(regExp);\n      }\n      var\n        regExpParts = regExp.match(_module.exports.settings.regExp.flags),\n        flags\n      ;\n      // regular expression specified as /baz/gi (flags)\n      if(regExpParts) {\n        regExp = (regExpParts.length >= 2)\n          ? regExpParts[1]\n          : regExp\n        ;\n        flags = (regExpParts.length >= 3)\n          ? regExpParts[2]\n          : ''\n        ;\n      }\n      return value.match( new RegExp(regExp, flags) );\n    },\n\n    // is valid integer or matches range\n    integer: function(value, range) {\n      var\n        intRegExp = _module.exports.settings.regExp.integer,\n        min,\n        max,\n        parts\n      ;\n      if( !range || ['', '..'].indexOf(range) !== -1) {\n        // do nothing\n      }\n      else if(range.indexOf('..') == -1) {\n        if(intRegExp.test(range)) {\n          min = max = range - 0;\n        }\n      }\n      else {\n        parts = range.split('..', 2);\n        if(intRegExp.test(parts[0])) {\n          min = parts[0] - 0;\n        }\n        if(intRegExp.test(parts[1])) {\n          max = parts[1] - 0;\n        }\n      }\n      return (\n        intRegExp.test(value) &&\n        (min === undefined || value >= min) &&\n        (max === undefined || value <= max)\n      );\n    },\n\n    // is valid number (with decimal)\n    decimal: function(value) {\n      return _module.exports.settings.regExp.decimal.test(value);\n    },\n\n    // is valid number\n    number: function(value) {\n      return _module.exports.settings.regExp.number.test(value);\n    },\n\n    // is value (case insensitive)\n    is: function(value, text) {\n      text = (typeof text == 'string')\n        ? text.toLowerCase()\n        : text\n      ;\n      value = (typeof value == 'string')\n        ? value.toLowerCase()\n        : value\n      ;\n      return (value == text);\n    },\n\n    // is value\n    isExactly: function(value, text) {\n      return (value == text);\n    },\n\n    // value is not another value (case insensitive)\n    not: function(value, notValue) {\n      value = (typeof value == 'string')\n        ? value.toLowerCase()\n        : value\n      ;\n      notValue = (typeof notValue == 'string')\n        ? notValue.toLowerCase()\n        : notValue\n      ;\n      return (value != notValue);\n    },\n\n    // value is not another value (case sensitive)\n    notExactly: function(value, notValue) {\n      return (value != notValue);\n    },\n\n    // value contains text (insensitive)\n    contains: function(value, text) {\n      // escape regex characters\n      text = text.replace(_module.exports.settings.regExp.escape, \"\\\\$&\");\n      return (value.search( new RegExp(text, 'i') ) !== -1);\n    },\n\n    // value contains text (case sensitive)\n    containsExactly: function(value, text) {\n      // escape regex characters\n      text = text.replace(_module.exports.settings.regExp.escape, \"\\\\$&\");\n      return (value.search( new RegExp(text) ) !== -1);\n    },\n\n    // value contains text (insensitive)\n    doesntContain: function(value, text) {\n      // escape regex characters\n      text = text.replace(_module.exports.settings.regExp.escape, \"\\\\$&\");\n      return (value.search( new RegExp(text, 'i') ) === -1);\n    },\n\n    // value contains text (case sensitive)\n    doesntContainExactly: function(value, text) {\n      // escape regex characters\n      text = text.replace(_module.exports.settings.regExp.escape, \"\\\\$&\");\n      return (value.search( new RegExp(text) ) === -1);\n    },\n\n    // is at least string length\n    minLength: function(value, requiredLength) {\n      return (value !== undefined)\n        ? (value.length >= requiredLength)\n        : false\n      ;\n    },\n\n    // see rls notes for 2.0.6 (this is a duplicate of minLength)\n    length: function(value, requiredLength) {\n      return (value !== undefined)\n        ? (value.length >= requiredLength)\n        : false\n      ;\n    },\n\n    // is exactly length\n    exactLength: function(value, requiredLength) {\n      return (value !== undefined)\n        ? (value.length == requiredLength)\n        : false\n      ;\n    },\n\n    // is less than length\n    maxLength: function(value, maxLength) {\n      return (value !== undefined)\n        ? (value.length <= maxLength)\n        : false\n      ;\n    },\n\n    // matches another field\n    match: function(value, identifier) {\n      var\n        $form = $(this),\n        matchingValue\n      ;\n      if( $('[data-validate=\"'+ identifier +'\"]').length > 0 ) {\n        matchingValue = $('[data-validate=\"'+ identifier +'\"]').val();\n      }\n      else if($('#' + identifier).length > 0) {\n        matchingValue = $('#' + identifier).val();\n      }\n      else if($('[name=\"' + identifier +'\"]').length > 0) {\n        matchingValue = $('[name=\"' + identifier + '\"]').val();\n      }\n      else if( $('[name=\"' + identifier +'[]\"]').length > 0 ) {\n        matchingValue = $('[name=\"' + identifier +'[]\"]');\n      }\n      return (matchingValue !== undefined)\n        ? ( value.toString() == matchingValue.toString() )\n        : false\n      ;\n    },\n\n    // different than another field\n    different: function(value, identifier) {\n      // use either id or name of field\n      var\n        $form = $(this),\n        matchingValue\n      ;\n      if( $('[data-validate=\"'+ identifier +'\"]').length > 0 ) {\n        matchingValue = $('[data-validate=\"'+ identifier +'\"]').val();\n      }\n      else if($('#' + identifier).length > 0) {\n        matchingValue = $('#' + identifier).val();\n      }\n      else if($('[name=\"' + identifier +'\"]').length > 0) {\n        matchingValue = $('[name=\"' + identifier + '\"]').val();\n      }\n      else if( $('[name=\"' + identifier +'[]\"]').length > 0 ) {\n        matchingValue = $('[name=\"' + identifier +'[]\"]');\n      }\n      return (matchingValue !== undefined)\n        ? ( value.toString() !== matchingValue.toString() )\n        : false\n      ;\n    },\n\n    creditCard: function(cardNumber, cardTypes) {\n      var\n        cards = {\n          visa: {\n            pattern : /^4/,\n            length  : [16]\n          },\n          amex: {\n            pattern : /^3[47]/,\n            length  : [15]\n          },\n          mastercard: {\n            pattern : /^5[1-5]/,\n            length  : [16]\n          },\n          discover: {\n            pattern : /^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)/,\n            length  : [16]\n          },\n          unionPay: {\n            pattern : /^(62|88)/,\n            length  : [16, 17, 18, 19]\n          },\n          jcb: {\n            pattern : /^35(2[89]|[3-8][0-9])/,\n            length  : [16]\n          },\n          maestro: {\n            pattern : /^(5018|5020|5038|6304|6759|676[1-3])/,\n            length  : [12, 13, 14, 15, 16, 17, 18, 19]\n          },\n          dinersClub: {\n            pattern : /^(30[0-5]|^36)/,\n            length  : [14]\n          },\n          laser: {\n            pattern : /^(6304|670[69]|6771)/,\n            length  : [16, 17, 18, 19]\n          },\n          visaElectron: {\n            pattern : /^(4026|417500|4508|4844|491(3|7))/,\n            length  : [16]\n          }\n        },\n        valid         = {},\n        validCard     = false,\n        requiredTypes = (typeof cardTypes == 'string')\n          ? cardTypes.split(',')\n          : false,\n        unionPay,\n        validation\n      ;\n\n      if(typeof cardNumber !== 'string' || cardNumber.length === 0) {\n        return;\n      }\n\n      // allow dashes in card\n      cardNumber = cardNumber.replace(/[\\-]/g, '');\n\n      // verify card types\n      if(requiredTypes) {\n        $.each(requiredTypes, function(index, type){\n          // verify each card type\n          validation = cards[type];\n          if(validation) {\n            valid = {\n              length  : ($.inArray(cardNumber.length, validation.length) !== -1),\n              pattern : (cardNumber.search(validation.pattern) !== -1)\n            };\n            if(valid.length && valid.pattern) {\n              validCard = true;\n            }\n          }\n        });\n\n        if(!validCard) {\n          return false;\n        }\n      }\n\n      // skip luhn for UnionPay\n      unionPay = {\n        number  : ($.inArray(cardNumber.length, cards.unionPay.length) !== -1),\n        pattern : (cardNumber.search(cards.unionPay.pattern) !== -1)\n      };\n      if(unionPay.number && unionPay.pattern) {\n        return true;\n      }\n\n      // verify luhn, adapted from  <https://gist.github.com/2134376>\n      var\n        length        = cardNumber.length,\n        multiple      = 0,\n        producedValue = [\n          [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n          [0, 2, 4, 6, 8, 1, 3, 5, 7, 9]\n        ],\n        sum           = 0\n      ;\n      while (length--) {\n        sum += producedValue[multiple][parseInt(cardNumber.charAt(length), 10)];\n        multiple ^= 1;\n      }\n      return (sum % 10 === 0 && sum > 0);\n    },\n\n    minCount: function(value, minCount) {\n      if(minCount == 0) {\n        return true;\n      }\n      if(minCount == 1) {\n        return (value !== '');\n      }\n      return (value.split(',').length >= minCount);\n    },\n\n    exactCount: function(value, exactCount) {\n      if(exactCount == 0) {\n        return (value === '');\n      }\n      if(exactCount == 1) {\n        return (value !== '' && value.search(',') === -1);\n      }\n      return (value.split(',').length == exactCount);\n    },\n\n    maxCount: function(value, maxCount) {\n      if(maxCount == 0) {\n        return false;\n      }\n      if(maxCount == 1) {\n        return (value.search(',') === -1);\n      }\n      return (value.split(',').length <= maxCount);\n    }\n  }\n\n};\n\n})( require(\"jquery\"), window, document );\n"]},"metadata":{},"sourceType":"script"}