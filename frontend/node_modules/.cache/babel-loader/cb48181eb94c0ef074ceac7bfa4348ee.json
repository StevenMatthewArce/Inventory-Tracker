{"ast":null,"code":"var _jsxFileName = \"D:\\\\Spring 2021\\\\CECS445\\\\inventory-tracker\\\\frontend\\\\src\\\\components\\\\Sidenav.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Checkbox, Grid, Header, Image, Menu, Ref, Segment, Sidebar } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidenav = () => {\n  _s();\n\n  const segmentRef = React.useRef();\n  const [visible, setVisible] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    columns: 1,\n    children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n      children: /*#__PURE__*/_jsxDEV(Sidebar.Pushable, {\n        as: Segment.Group,\n        raised: true,\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n          as: Menu,\n          animation: \"overlay\",\n          icon: \"labeled\",\n          inverted: true,\n          onHide: () => setVisible(false),\n          vertical: true,\n          target: segmentRef,\n          visible: true,\n          width: \"thin\",\n          children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n            as: \"a\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              path: \"/dashboard\",\n              children: \" Dashboard \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n            as: \"a\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              path: \"/invetory\",\n              children: \" Inventory \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n            as: \"a\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              path: \"/recipes\",\n              children: \" Recipes \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n            as: \"a\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              path: \"/orders\",\n              children: \" Orders \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n            as: \"a\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              path: \"/budget\",\n              children: \" Budget \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n            as: \"a\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              path: \"/reports\",\n              children: \" Reports \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n            as: \"a\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              path: \"/goals\",\n              children: \" Goals \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Ref, {\n          innerRef: segmentRef,\n          children: /*#__PURE__*/_jsxDEV(Segment, {\n            secondary: true,\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              as: \"h3\",\n              children: \"Clickable area\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"When you will click there, the sidebar will be closed.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Sidenav, \"zvZHuqr7hkcp5SjKsAyUa7TbKJg=\");\n\n_c = Sidenav;\nexport default Sidenav;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidenav\");","map":{"version":3,"sources":["D:/Spring 2021/CECS445/inventory-tracker/frontend/src/components/Sidenav.js"],"names":["React","Checkbox","Grid","Header","Image","Menu","Ref","Segment","Sidebar","Link","Sidenav","segmentRef","useRef","visible","setVisible","useState","Group"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {\r\n  Checkbox,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Menu,\r\n  Ref,\r\n  Segment,\r\n  Sidebar,\r\n} from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Sidenav = () => {\r\n  const segmentRef = React.useRef()\r\n  const [visible, setVisible] = React.useState(false)\r\n\r\n  return (\r\n    <Grid columns={1}>\r\n\r\n      <Grid.Column>\r\n        <Sidebar.Pushable as={Segment.Group} raised>\r\n          <Sidebar\r\n            as={Menu}\r\n            animation='overlay'\r\n            icon='labeled'\r\n            inverted\r\n            onHide={() => setVisible(false)}\r\n            vertical\r\n            target={segmentRef}\r\n            visible\r\n            width='thin'\r\n          >\r\n            <Menu.Item as='a'><Link path='/dashboard'> Dashboard </Link></Menu.Item>\r\n            <Menu.Item as='a'><Link path='/invetory'> Inventory </Link></Menu.Item>\r\n            <Menu.Item as='a'><Link path='/recipes'> Recipes </Link></Menu.Item>\r\n            <Menu.Item as='a'><Link path='/orders'> Orders </Link></Menu.Item>\r\n            <Menu.Item as='a'><Link path='/budget'> Budget </Link></Menu.Item>\r\n            <Menu.Item as='a'><Link path='/reports'> Reports </Link></Menu.Item>\r\n            <Menu.Item as='a'><Link path='/goals'> Goals </Link></Menu.Item>\r\n          </Sidebar>\r\n\r\n          <Ref innerRef={segmentRef}>\r\n            <Segment secondary>\r\n              <Header as='h3'>Clickable area</Header>\r\n              <p>When you will click there, the sidebar will be closed.</p>\r\n            </Segment>\r\n          </Ref>\r\n      </Sidebar.Pushable>\r\n      </Grid.Column>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Sidenav"]},"metadata":{},"sourceType":"module"}